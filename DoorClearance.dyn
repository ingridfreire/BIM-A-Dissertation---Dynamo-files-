{
  "Uuid": "b11fc25e-4839-41f0-b722-77ec62160438",
  "IsCustomNode": false,
  "Description": null,
  "Name": "DoorClearance",
  "ElementResolver": {
    "ResolutionMap": {
      "Vector.XAxis": {
        "Key": "Autodesk.DesignScript.Geometry.Vector",
        "Value": "ProtoGeometry.dll"
      },
      "Vector": {
        "Key": "Autodesk.DesignScript.Geometry.Vector",
        "Value": "ProtoGeometry.dll"
      },
      "Point": {
        "Key": "Autodesk.DesignScript.Geometry.Point",
        "Value": "ProtoGeometry.dll"
      },
      "Line": {
        "Key": "Autodesk.DesignScript.Geometry.Line",
        "Value": "ProtoGeometry.dll"
      }
    }
  },
  "Inputs": [
    {
      "Id": "2d8917e8ceca4bd4bc34b65d69deb2df",
      "Name": "Select View to Highlight Issues (it should be at the end of the list, such as ZZ - DESIGN CHECK)",
      "Type": "selection",
      "Type2": "dropdownSelection",
      "Value": "ZZ - DESIGN CHECK",
      "Description": "All views available in the current document.",
      "SelectedIndex": 871
    },
    {
      "Id": "b020753d7af343c9a6c74206e7d4c2d4",
      "Name": "Select Level to run checking",
      "Type": "selection",
      "Type2": "dropdownSelection",
      "Value": "MAIN LEVEL",
      "Description": "Select a level in the active document",
      "SelectedIndex": 0
    },
    {
      "Id": "3412d8fc15f044899e42d7b435939d0a",
      "Name": "Select Model Elements",
      "Type": "selection",
      "Type2": "hostSelection",
      "Value": "d4f62a3b-00f9-4b3d-9c51-c1d644e989d4-0046e060,355c838c-b1d1-4783-8eb3-62e374f6b354-00471025,355c838c-b1d1-4783-8eb3-62e374f6b354-00471071,355c838c-b1d1-4783-8eb3-62e374f6b354-004715f0,1fc920d9-850b-45f0-9326-05965c5ac582-004756f7",
      "Description": "Select multiple elements from the Revit document.",
      "SelectedIndex": 0
    }
  ],
  "Outputs": [
    {
      "Id": "c4cce4089db04f5f9982ce36ed74ee8e",
      "Name": "Number of checked doors",
      "Type": "unknown",
      "InitialValue": "",
      "Description": "Visualize the node's output"
    },
    {
      "Id": "f719640ca2574328bd3a9d797c66f8d0",
      "Name": "Results",
      "Type": "unknown",
      "InitialValue": "",
      "Description": "Visualize the node's output"
    }
  ],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Element.IntersectsSolid@Autodesk.DesignScript.Geometry.Solid[],Revit.Elements.Element[]",
      "Id": "92ce2968291b417ca6fb475ca77fb094",
      "Inputs": [
        {
          "Id": "7ee1da6bedf6477e90564e721bfd31bc",
          "Name": "solids",
          "Description": "Input a list of solid objects to perform the interference check.\n\nSolid[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "296c73e8b2774e00a32eb43a66a7e074",
          "Name": "elements",
          "Description": "Input a list of Revit elements or LinkElements to test for interference against each of the solid objects.\n\nElement[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "949e728ac69446e0a7bd073e3492b3ea",
          "Name": "SolidIntersectionResult[]",
          "Description": "SolidIntersectionResult[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Finds intersections (clash detection) between Dynamo Solids and Revit elements or LinkElements. \r\rThe node is optimized to output rapid results up to 99.5% faster than any other intersection technique.\r\rUse IsElementSupported to check that elements are supported by the clash algorithms. \r\rVisit bimorph.com/bimorph-nodes for support\n\nElement.IntersectsSolid (solids: Solid[], elements: Element[]): SolidIntersectionResult[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.FamilyInstance.GetHost",
      "Id": "8dfb289ae918432787b79c3335eb41a4",
      "Inputs": [
        {
          "Id": "67f40088d3664d94acbe54c89a7076ba",
          "Name": "familyInstance",
          "Description": "Revit.Elements.FamilyInstance",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9043b82c96ba4e17b034cccc6b6a1261",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets the host of this fmaily instance (if any). Eg. returns the wall of a window or door family instance.\n\nFamilyInstance.GetHost: Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.Geometry",
      "Id": "22c827d29f7845198278637f9c149187",
      "Inputs": [
        {
          "Id": "7f8ffdc1a8e94d8ca35e8bc3913494f3",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "90976f43415147abb4cb1c13634f5209",
          "Name": "var[]",
          "Description": "var[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get all of the Geometry associated with this object\n\nElement.Geometry ( ): var[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.FamilyInstance.FacingOrientation",
      "Id": "53a034a8acc54ff8bfb358166e175c67",
      "Inputs": [
        {
          "Id": "d2021eb8f6554b9d926c1ef1698a4d5c",
          "Name": "familyInstance",
          "Description": "Revit.Elements.FamilyInstance",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6423aef68b45450f867b0840e76d0fa0",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets the FacingOrientation of the family instance\n\nFamilyInstance.FacingOrientation: Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointDirectionLength@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector,double",
      "Id": "8bf33e353c224ba39ba52249e318cbca",
      "Inputs": [
        {
          "Id": "4795f14cfd2a40dba3d09009fe386ab6",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "525055a750934d30b6af3701c1597ed1",
          "Name": "direction",
          "Description": "Direction vector\n\nVector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9978ffa79f2745878d3c8da3ae5f694b",
          "Name": "length",
          "Description": "Length of line\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7f4aa0bcb99f43628abd080b120f5d47",
          "Name": "Line",
          "Description": "Line from start direction and length",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a straight Line starting at start Point, extending in Vector direction by specified length.\n\nLine.ByStartPointDirectionLength (startPoint: Point, direction: Vector, length: double = 1): Line"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.CoordinateSystem.Origin",
      "Id": "8bcfe50659294b71bb69e6ab31300f35",
      "Inputs": [
        {
          "Id": "2e9b3dfca68d456694a1cf13775f478b",
          "Name": "coordinateSystem",
          "Description": "Autodesk.DesignScript.Geometry.CoordinateSystem",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ce34c5fe49d74d91b8067656becca0dd",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a Point representing the CoordinateSystem origin.\n\nCoordinateSystem.Origin: Point"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nitems = UnwrapElement(IN[0]) #IN[0] \r\ngeoms = []\r\n\r\nfor item in items:\r\n\ttr = item.GetTransform()\r\n\toriginft = Vector.ByCoordinates( tr.Origin.X, tr.Origin.Y, tr.Origin.Z)\r\n\torigin = Vector.AsPoint (Vector.Scale(originft, 1))\r\n\tx = Vector.ByCoordinates( tr.BasisX.X, tr.BasisX.Y, tr.BasisX.Z)\r\n\ty = Vector.ByCoordinates( tr.BasisY.X, tr.BasisY.Y, tr.BasisY.Z)\r\n\tz =\tVector.ByCoordinates( tr.BasisZ.X, tr.BasisZ.Y, tr.BasisZ.Z)\r\n\r\n\tgeo = CoordinateSystem.ByOriginVectors(origin, x, y, z)\r\n\tgeoms.append(geo)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = geoms",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "72714044ba7343f397449953cf757c06",
      "Inputs": [
        {
          "Id": "154598bd234f47979439a1bfc7101e9a",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6ee9af54a512447797db3d6d7ec69275",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "DSRevitNodesUI.Views, DSRevitNodesUI",
      "SelectedIndex": 871,
      "SelectedString": "ZZ - DESIGN CHECK",
      "NodeType": "ExtensionNode",
      "Id": "2d8917e8ceca4bd4bc34b65d69deb2df",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c0467d44d4184df9962526c98355662a",
          "Name": "Views",
          "Description": "The selected Views",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All views available in the current document."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Results.SolidIntersectionResult.IntersectingElements",
      "Id": "de7ff91196604cd882cff0a3b618a3bc",
      "Inputs": [
        {
          "Id": "00a549cc5ecc4c9fa6e1dc1736688024",
          "Name": "solidIntersectionResult",
          "Description": "Results.SolidIntersectionResult",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e14b1bfe6a1642ad87ec3aa89058ca84",
          "Name": "Element[]",
          "Description": "Element[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "A list of elements which intersect with the Solid or an empty list if no elements intersect it. \r\rVisit bimorph.com/bimorph-nodes for support\n\nSolidIntersectionResult.IntersectingElements: Element[]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 700,
      "SelectedString": "OST_Walls",
      "NodeType": "ExtensionNode",
      "Id": "9804e8fe797b4c2993779e659cad720f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "263689034ce8431aa1aa3bc3a1c44fc1",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "3fedfafbfb1d465f9020a850adbd6a18",
      "Inputs": [
        {
          "Id": "bd7f17cd78c2407093c01b9fda6382a6",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6c5ac9ca5e42439b933a5c493c7f1972",
          "Name": "Elements",
          "Description": "An element class.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "67ec1244bf36462c92353fada610bc9d",
      "Inputs": [
        {
          "Id": "f273bd0375054c0c9e5b65d375c9c121",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "789e545c89a34e459e58715cfbfc7a65",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6efd3eb413a9441abb570721177a03c0",
          "Name": "item2",
          "Description": "Item Index #2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "542cb0f62d844e6f8a3ca0c6a431bb49",
          "Name": "item3",
          "Description": "Item Index #3",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "62b450fc91404cf583924ee384cd2395",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 256,
      "SelectedString": "OST_Furniture",
      "NodeType": "ExtensionNode",
      "Id": "80e6495a1189413c951cd46aa18223f8",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "61b3416e99204e6196f41c5c1cf2fb08",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 117,
      "SelectedString": "OST_Casework",
      "NodeType": "ExtensionNode",
      "Id": "4502f0bda12848519f119a43cf8c5a25",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "832e6192373442a29722d75cb1fb3cf1",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Cuboid.ByLengths@Autodesk.DesignScript.Geometry.CoordinateSystem,double,double,double",
      "Id": "cf6fee8b856347f0a2343398b9bc133d",
      "Inputs": [
        {
          "Id": "1d1eb7d690504e45a503ef1cc9150fcd",
          "Name": "coordinateSystem",
          "Description": "Parent coordinate system (center of cuboid)\n\nCoordinateSystem\nDefault value : Autodesk.DesignScript.Geometry.CoordinateSystem.ByOrigin(0, 0, 0)",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fe6fc579ca4a4270b32d457104ec7727",
          "Name": "width",
          "Description": "Width of cuboid\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "651977a158c14952bb54410d4b947d76",
          "Name": "length",
          "Description": "Length of cuboid\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9c95d01b753f42a79b1f97070deba730",
          "Name": "height",
          "Description": "Height of cuboid\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5264834f94224678a584c4c4ec0ef92b",
          "Name": "Cuboid",
          "Description": "Cuboid created from lengths",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a Cuboid centered at WCS origin, with width, length, and height.\n\nCuboid.ByLengths (coordinateSystem: CoordinateSystem = Autodesk.DesignScript.Geometry.CoordinateSystem.ByOrigin(0, 0, 0), width: double = 1, length: double = 1, height: double = 1): Cuboid"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Translate@Autodesk.DesignScript.Geometry.Vector,double",
      "Id": "93195678b7f641348734ba0bd77b7558",
      "Inputs": [
        {
          "Id": "ee6d7714e98a4e018e58ca1e73939cc4",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8341585fdf9643dea24a33fb32b05b0e",
          "Name": "direction",
          "Description": "Displacement direction.\n\nVector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8cffd98a71ee437fa709d04e4f10d9fa",
          "Name": "distance",
          "Description": "Displacement distance along given direction.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2a20d5b1148e492b8fd50311b269765c",
          "Name": "Geometry",
          "Description": "Transformed Geometry.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Translates any geometry type by the given distance in the given direction.\n\nGeometry.Translate (direction: Vector, distance: double): Geometry"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointDirectionLength@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector,double",
      "Id": "6b6455ef9330434d86b7f2e52c8877a9",
      "Inputs": [
        {
          "Id": "60f00c667a084f3995f0e5d48b955be2",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a049a4e6d49c481ca9ca501cc1e68d84",
          "Name": "direction",
          "Description": "Direction vector\n\nVector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ac83689ee36e4fbcad76dc3b2c0245a0",
          "Name": "length",
          "Description": "Length of line\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6d982fe3f77249099e49c3b86d20e62b",
          "Name": "Line",
          "Description": "Line from start direction and length",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a straight Line starting at start Point, extending in Vector direction by specified length.\n\nLine.ByStartPointDirectionLength (startPoint: Point, direction: Vector, length: double = 1): Line"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.EndPoint",
      "Id": "5654bd104d68438ca6158b29dcd5a10f",
      "Inputs": [
        {
          "Id": "b0e149d5d8d24cf8bfb0acee8a370e39",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "42601f5ee8bc43d2804df2ec2875f3a5",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the end Point along the Curve\n\nCurve.EndPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "f35a4902-48b5-40f2-8d0a-98edae74a72b",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "3b86f430b68b40edb9e93d723ba1e3f1",
      "Inputs": [
        {
          "Id": "e0d64f381968458d95604a1035d47f81",
          "Name": "familyInstance",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "28efdd607d5543e49f223ebd995e2b65",
          "Name": "vector",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets the hand orientation of a hosted object (e.g. a window or a door)"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Vector.Reverse",
      "Id": "6f2efe3b284441358be129b818fa6a28",
      "Inputs": [
        {
          "Id": "f0a80f80694546b3a94a688038e0116a",
          "Name": "vector",
          "Description": "Autodesk.DesignScript.Geometry.Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "16b8f6ffeb854646b3fc6e3ba08c5c61",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the reverse of the vector. Essentially this negates the X, Y, and Z components of the Vector.\n\nVector.Reverse ( ): Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Translate@Autodesk.DesignScript.Geometry.Vector,double",
      "Id": "992adbc0cce940878491a55d52b528e9",
      "Inputs": [
        {
          "Id": "cbcf34d438d743fc90ae1b4d8e714a0b",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4f1a294583e949009a97c198e4c19459",
          "Name": "direction",
          "Description": "Displacement direction.\n\nVector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3738caac7714495596b58a69acd4956e",
          "Name": "distance",
          "Description": "Displacement distance along given direction.\n\ndouble",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "55c0e75bdd1a4bac9dea7d6e77716f90",
          "Name": "Geometry",
          "Description": "Transformed Geometry.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Translates any geometry type by the given distance in the given direction.\n\nGeometry.Translate (direction: Vector, distance: double): Geometry"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 0.75,
      "Id": "1ff6a8e7d00d49abb94b4b16232c29cf",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6e922c00adab4ecc9012529a08fc013c",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 432,
      "SelectedString": "OST_PlumbingFixtures",
      "NodeType": "ExtensionNode",
      "Id": "a620062ad270457e970df1e5f7d5f346",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "37826eb31fbf4ced8b1e51b197ba8b11",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 341,
      "SelectedString": "OST_MechanicalEquipment",
      "NodeType": "ExtensionNode",
      "Id": "6212779b2d3d471683754cba361a8859",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8f49391889f14c288bfbff882f29ce87",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Geometry.Translate@double,double,double",
      "Id": "0250a66823694bfeac6bdf47bbb8ec82",
      "Inputs": [
        {
          "Id": "fe995e1bcec14249a0c293b7d1c73a6e",
          "Name": "geometry",
          "Description": "Autodesk.DesignScript.Geometry.Geometry",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cd068df6f9fd4c11955003c31eb97c82",
          "Name": "xTranslation",
          "Description": "Displacement along X-axis.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "218f8bac253d4dc4ae4934268ab056db",
          "Name": "yTranslation",
          "Description": "Displacement along Y-axis.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9579684739414514835af2ebed43f30a",
          "Name": "zTranslation",
          "Description": "Displacement along Z-axis.\n\ndouble\nDefault value : 0",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c601f285fcae439caea73a0eaf787c9b",
          "Name": "Geometry",
          "Description": "Transformed Geometry.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Longest",
      "Description": "Translates any given geometry by the given displacements in the x, y, and z directions defined in WCS respectively.\n\nGeometry.Translate (xTranslation: double = 0, yTranslation: double = 0, zTranslation: double = 0): Geometry"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 3.0,
      "Id": "1a59854309a94fe490328b8621f421ca",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "75ff2ff797924e65bafff0d6f8c50ec2",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "40e1fe8152ce4ee2a0dd57f9b87f28f9",
      "Inputs": [
        {
          "Id": "ef7d841aa5484750be0b21b49b960809",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "fae209830c3f4441836373aab54c7a3e",
          "Name": "parameterName",
          "Description": "The name of the parameter to set.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "836239321fd240b78916611c21a6eaa5",
          "Name": "value",
          "Description": "The value.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0bfeeb50634c469f92195f7b52c5d32e",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Set one of the element's parameters.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "3b036d2bd7ab44e3815911afefa7f621",
      "Inputs": [
        {
          "Id": "8a8f7d38b63a43ddbe3e1aaa026e9464",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "662001cdc94f49ebb2c8f5639d277ffb",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ac730aa42c6c4f82927b791f80acd620",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "58dd739d27f844a290324332a7a5439b",
      "Inputs": [
        {
          "Id": "3f1e7633030647739e482905513419f0",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "843db5b8163d42bab65cbb9a12fadc15",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "927c803cadac4d039e3515cb3ad132cc",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.TakeItems@var[]..[],int",
      "Id": "a25ed8fcfd744ed19aa792167eb148f9",
      "Inputs": [
        {
          "Id": "54ccba3143bd419facb9db45499fb3d6",
          "Name": "list",
          "Description": "List to take from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": true
        },
        {
          "Id": "f7755b7739c24af894e521535d4698e8",
          "Name": "amount",
          "Description": "Amount of items to take. If negative, items are taken from the end of the list.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "69ce788ce48043a7b10d923102e834ae",
          "Name": "list",
          "Description": "List of extracted items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Fetches an amount of items from the start of the list.\n\nList.TakeItems (list: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 1.0,
      "Id": "9897f185371c4aaa94bdea157d960af7",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "0a364476906f40438df44a64512b7c73",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "bbec49b874c94e1994b134dda75ac780",
      "Inputs": [
        {
          "Id": "bafe7e293a254b02aebbb4737e3aeabd",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8a0a1629612d4b53a81a7aaec756956f",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a180a1b7da4e49ffb533824e93557e43",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7c5291e091a546fb986ee7ff384856b0",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "DoorClearance",
      "Id": "3602395d266f4690babd67b6c4200ff2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a8394c3d31654d12bc68b4ac6a7f3724",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Review Intersection",
      "Id": "3c3b4f3eeaed4d328facda8bef6bdd0e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "573a16a466a94e23857ec5fd9e5c3948",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "a4606ccc0ca24e9ea5df1afa21e69253",
      "Inputs": [
        {
          "Id": "e03784a2a4d34b279a0d28c5211a8ae6",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "44ad05b0eeff4e249f0ce363ba9f5f85",
          "Name": "parameterName",
          "Description": "The name of the parameter to set.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d898f641c5ad4f45ab3f1b1f622d3dc2",
          "Name": "value",
          "Description": "The value.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0ab17d09a029477fa46d9ab0c798fb51",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Set one of the element's parameters.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "DoorClearance",
      "Id": "6568fa45f7d5414187d3ba87a207b9da",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d7bb11dea92141be99266207dce45567",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Clear",
      "Id": "71c6b2eff1cf484796e16bcf7e1f3a7c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "214a4b115cc047138bb6247af417cd7c",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "d6a016fbc77c481692302676fc117265",
      "Inputs": [
        {
          "Id": "7ab0aa2d35c343479391e0b6b5ec0cc3",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "13d62249a49440adb72b6de5bbfe0408",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "74918fb8da0b434eb9d55e8f6d649e17",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.FamilyInstance.GetHost",
      "Id": "8a75b90364414d6e9b59f893566eac8d",
      "Inputs": [
        {
          "Id": "1a7916bf93e145fbb79bdcd0f967033c",
          "Name": "familyInstance",
          "Description": "Revit.Elements.FamilyInstance",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6fda783421a0485ead859048b165086b",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets the host of this fmaily instance (if any). Eg. returns the wall of a window or door family instance.\n\nFamilyInstance.GetHost: Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.ElementType",
      "Id": "d9aee2a32e674ffbb94f76a6aa1131e1",
      "Inputs": [
        {
          "Id": "c679e2f633ee427d976bb3b57db15609",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "08fd1ce3bca64abeba566824bcd9c655",
          "Name": "ElementType",
          "Description": "Element Type or Null.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the ElementType for this Element. Returns null if the Element cannot have an ElementType assigned.\n\nElement.ElementType: ElementType"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "ca934010851b4ddb8840f8ffcd1193a5",
      "Inputs": [
        {
          "Id": "5999bf1e82f5486c9951249c77982aaa",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4aa2b31f984741d9a639c4823a5b6559",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "25664e41418c4644a06421e6e92fce45",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Width",
      "Id": "7692866c73a74eb0ac34b6fcb5439527",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "447e0ecbc3d240948540e5e7a04567a2",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Formula, CoreNodeModels",
      "Formula": "x/2+1.5",
      "NodeType": "FormulaNode",
      "Id": "4065b3e5417b43d0ad2e9119b031822f",
      "Inputs": [
        {
          "Id": "8e51ba5e6c0a4abc9291354ed6350040",
          "Name": "x",
          "Description": "variable",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0cde909d33cc448b8c59944f98002c58",
          "Name": "",
          "Description": "Result from formula",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Evaluates mathematical formulas. Uses NCalc: http://ncalc.codeplex.com/"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "f321d87c060749d9a24de343b1a9ea64",
      "Inputs": [
        {
          "Id": "dbc48fac79c44a3086e167d155263aa2",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bcb7c7ddcd6749eaaf0fed09640cd1e4",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "c4cce4089db04f5f9982ce36ed74ee8e",
      "Inputs": [
        {
          "Id": "937b6fe5e0794eacb42409f166283b50",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9cc0ada4467249deb6fb4d09ea237fe9",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "693eff5100084105b6f42a016c01001b",
      "Inputs": [
        {
          "Id": "f955389239a64e2b89dee9c2eddde949",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9dd477f987ba4f0da44f3e67adfe7a1f",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "f719640ca2574328bd3a9d797c66f8d0",
      "Inputs": [
        {
          "Id": "89aae41cdb414ed184ce7aeee34f8cb3",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c00a4ab247614a179f3cd5ddde5fd16d",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Number of doors to review: \" + number;",
      "Id": "32e027a09bbb4198834f64a2d7ed6c17",
      "Inputs": [
        {
          "Id": "e148b3967c934674a3d7ec52fb74e8f7",
          "Name": "number",
          "Description": "number",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4527eaae2b524ddcb9255378026dc414",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "24214d3e-6159-4b2c-97b4-0a35a13518d9",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "85d29fd126d34f32b3661a8c8225e4a4",
      "Inputs": [
        {
          "Id": "cbf436c8b8d24610bf0e84dd1e9cae2b",
          "Name": "curve",
          "Description": "Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f9025005b9c14121aff64bc65f970679",
          "Name": "view",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "edf4676810104105bb5ef28778530c21",
          "Name": "detailCurve",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a detail line based on a given curve. Unlike the OOTB node it can also draw circles."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "24214d3e-6159-4b2c-97b4-0a35a13518d9",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "9752da1bafb4478e96626a1a8eb991b2",
      "Inputs": [
        {
          "Id": "c08118ce96e34c04b7b922eb31dd82c5",
          "Name": "curve",
          "Description": "Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "71ade08539b947d38cf5e0bee5edc100",
          "Name": "view",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5d445c1c1bca43fd92a5906e194bf3a4",
          "Name": "detailCurve",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a detail line based on a given curve. Unlike the OOTB node it can also draw circles."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "8d205bb436ec48af988bf04d15e7758d",
      "Inputs": [
        {
          "Id": "581ec07c3f0c48078c7d55900918f309",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2c401adee79a4a6cb1ed0f2c797e86ab",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "927b7a14d99b4aa1aefdbfbcd2e3ee77",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Width",
      "Id": "fa6cf1a4ce9b401fa71d96ee23012e15",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "c2d55573abf8423f911c961e83e95bc2",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "DoorWidth;",
      "Id": "f1fcb29af83c4a58acfdcad41e1ffe2a",
      "Inputs": [
        {
          "Id": "97dada3b47d24f48a1c9fcc8f437c12c",
          "Name": "DoorWidth",
          "Description": "DoorWidth",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "541eb19591f7454491acec7fac1016bf",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x+1.5;",
      "Id": "e0788c1a1ee1465c80bc69f81dc4000f",
      "Inputs": [
        {
          "Id": "8ad4c85c24ae4d9aab64b7587f718b2a",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "04a41c9c88b74597a5b836f5d2365f45",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Replace, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "f9ffbc9011334ec99f11060276c926d8",
      "Inputs": [
        {
          "Id": "7daacd5235ea4d20b7c9dafc82c15488",
          "Name": "item",
          "Description": "Item to potentially be replaced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c6a0402edadd4e2bb98947c26ed3aaa5",
          "Name": "replaceWith",
          "Description": "Object to replace with",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "adc4e4464e154db183ee66f389e0106d",
          "Name": "condition",
          "Description": "Replacement function used to determine if an object should be replaced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b329f64adf4b41eeb90fe126f6d0a7e5",
          "Name": "var[]..[]",
          "Description": "Item, or list of items where condition was used to replace with item given in \"replaceWith\"",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Replaces an object with a given substitute if the original object satisfies a given condition."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "x>=y;",
      "Id": "44b8a92d8c4c4c30bb8435ae794c063c",
      "Inputs": [
        {
          "Id": "fd5adc037f2948b6bdc36dbfc5e1f272",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "da7e9f96b03f43ec94da65430499d757",
          "Name": "y",
          "Description": "y",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "69c90f3907114142bd09ca7126ba849e",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "6f692a377f58412c87ea82e0691fdd7b",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8a16554f8c4a4f2eb4b25dd87f02c12a",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "archilab.Lists.Lists.ReplaceNull@var[],var",
      "Id": "b74ad932c7554aabb0eb2c52689500b5",
      "Inputs": [
        {
          "Id": "d56c76dc676349ab85547c9cb42f3154",
          "Name": "list",
          "Description": "var[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f1ce0fa213324dd292f048a9dfc9940d",
          "Name": "replacement",
          "Description": "var",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7bc7fe5912a042078600632f278c45d6",
          "Name": "var[]",
          "Description": "var[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Lists.ReplaceNull (list: var[], replacement: var): var[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "false",
      "Id": "287b91e5b4464999815031eec27f2dca",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "993cea7c17594a36abedb8c519b9c5b1",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "85454642c6804a31b4d13c4e2e7e33e3",
      "Inputs": [
        {
          "Id": "5df690d0e94a43e6b90111d05d9be67e",
          "Name": "object",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "90904a591d254a6fbb0bb504fc003df7",
          "Name": "string",
          "Description": "String representation of the object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "b9c5afd3757b44e18595517ce9e4c1fc",
      "Inputs": [
        {
          "Id": "d8ef60e405b7439fb70f328067a7c795",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6455c8e022634fc583353e7591aff367",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "bfbfaedbd03e4bca9e77e5a535250c40",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "7d58a2a431884ab99b07ab2c573ed24e",
      "Inputs": [
        {
          "Id": "0791168a054a4f91b5f3c2f82366bcfa",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "83d141d1905b41c1a96365e2404fda74",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "00484dff5a244b84ba4cd0335b3d50ec",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "848e7c5f5f6b44cea6daf32b958478e5",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;",
      "Id": "7d14ed8c1a554d20a39912be52f7fc54",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a274480428c143e991853eaa497056fe",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1;",
      "Id": "09edd692196b44f38806d9abb9463ed8",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6da13d57436e43d4bc1b99f553307764",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">@var[]..[],var[]..[]",
      "Id": "91c4bd9316bb41248e88f53de7e2299c",
      "Inputs": [
        {
          "Id": "4e956f28877742e98ad40cd992e9d53f",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0789c16196c14b04a4d38bf0e5f7de4c",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9b2f178432444165b759a1bdaba556c3",
          "Name": "bool",
          "Description": "True if x is greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is greater than y\n\n> (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Replace, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "d2defe39224346a8b1dc0b3212ae2f5d",
      "Inputs": [
        {
          "Id": "cf4d23897130490a985f244d3ba5b545",
          "Name": "item",
          "Description": "Item to potentially be replaced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5e78e9a9c0f34d4dadd7e6c680537ab1",
          "Name": "replaceWith",
          "Description": "Object to replace with",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "18005226bf6744a398c9e05f4e3dc6cd",
          "Name": "condition",
          "Description": "Replacement function used to determine if an object should be replaced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "56f60f4dd19344ce9ad32758cae941a1",
          "Name": "var[]..[]",
          "Description": "Item, or list of items where condition was used to replace with item given in \"replaceWith\"",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Replaces an object with a given substitute if the original object satisfies a given condition."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "3;",
      "Id": "ec9b4a73582f4262a2cf617643ea37cf",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "f6b254aede1e49d8bf7a3baba069454d",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "af9c66d766bf4e758ea7bc86febdec52",
      "Inputs": [
        {
          "Id": "ce405e49263540e1817216e8cbaeac92",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "77c4ff5a66654cce818902a18f81292a",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4e8a4758ac0f463ab03f7e7dd32ed47e",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "a6c1db8ab0c64d558f7dd47b14fb85ca",
      "Inputs": [
        {
          "Id": "a322f14d1934465192ef38cf63f0e1ae",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5465fdf28c444663a0136b47b16ee746",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f36edac44dc5493c98f7545af3925bd5",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Replace, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "43ebcc1303e24c6694fafa8f79915723",
      "Inputs": [
        {
          "Id": "4603048d35fb4ddc876287c748519140",
          "Name": "item",
          "Description": "Item to potentially be replaced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8f425598c74a4966879a7d99d13ddc5c",
          "Name": "replaceWith",
          "Description": "Object to replace with",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6f4e8ef9e25241ac9f6601d388508a9b",
          "Name": "condition",
          "Description": "Replacement function used to determine if an object should be replaced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6367ebb85c7b4d079794e904e215c3d7",
          "Name": "var[]..[]",
          "Description": "Item, or list of items where condition was used to replace with item given in \"replaceWith\"",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Replaces an object with a given substitute if the original object satisfies a given condition."
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "98cbe793fdce4e3dbf0fa66ee81e279b",
      "Inputs": [
        {
          "Id": "1a2e5fa4402b44fead272f0f98641fff",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ea356665be2d4211a152bab5bd17dd04",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "879ac4237f95424da949f7023cd1fcc4",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a2d7be8e52684dc08ee4cf5ba66a5da0",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">=@var[]..[],var[]..[]",
      "Id": "74abb1408f204018a7baf391bbb3a612",
      "Inputs": [
        {
          "Id": "135f3e1b9eb246a7aa884a11875b2ef3",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a732b8b8e2ea4671bb7c8b3227c8e588",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "09b8d58138834fb1af8167fc81f4c54e",
          "Name": "bool",
          "Description": "True if x is equal or greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is greater or equals to y\n\n>= (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0.01;",
      "Id": "b028b4c08cb24f09849bbe5143e9ba28",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "567e186c8f8b48d6b3a718977cf26b79",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "0;\n1;",
      "Id": "ec16049633884140a938ce985fc31974",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d366f1e044e644d9b4069064a861d803",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "06062c1dfb854001b923533a6bc2a153",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "bcacdf7af0ad4daba48f971e64b5b896",
      "Inputs": [
        {
          "Id": "4ea4ef26bb754b8090bae6b743747c7a",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d76326e0332346c78c600f79f705208b",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c5b2f7e85fd74543a97ddb3ba34dd93b",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "cbc06bc3-4c8d-4b6a-bd05-e0f5b70427da",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "f7d3100ed54a44a99d1708351def2170",
      "Inputs": [
        {
          "Id": "7c8370331cb947a5972c476beeb88bbd",
          "Name": "seq",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9dc03ac057914f8682e2c066da1c17a1",
          "Name": "bool",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Just the inversion of the built-in Is Empty List node."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "f5430cb0678e416186a19f94435cd257",
      "Inputs": [
        {
          "Id": "2deddb513aaf4722a81117134167fcb3",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "de084b6153734ab59a46c348a25551e2",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8cdc285ca0474465ac2759408c9d436a",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "e4f8420427274ed69ba46064ad1a3e6e",
      "Inputs": [
        {
          "Id": "8896f1a7a0dc422d88c4f2f0138f5564",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4093bff656b148158f05fe81162f7e0e",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4020897c9636490599db75786820fb79",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Clean@var[]..[],bool",
      "Id": "9353680870f243c78767ed048286cce8",
      "Inputs": [
        {
          "Id": "3bf830cad7f948cfbbe1ec402f45212c",
          "Name": "list",
          "Description": "List containing nulls and empty sublists to clean\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "58e689090a204ce8ba88d7239dc4dd5c",
          "Name": "preserveIndices",
          "Description": "Provide an option to preserve the indices of the data\n\nbool\nDefault value : true",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0d14a5b0f4d848e09472381021bbc100",
          "Name": "list",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Cleans data of nulls and empty lists from a given list of arbitrary dimension\n\nList.Clean (list: var[]..[], preserveIndices: bool = true): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "c27f9d25097c4fa3855267481099b87f",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d1f6072f0ba7485483bd69f3e3502a51",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Selection between a true and false."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.SetDifference@var[],var[]",
      "Id": "69fd94a220f34d97896dc55a51eb85ac",
      "Inputs": [
        {
          "Id": "2c5e94fbf1aa41739cc353755f55a2c8",
          "Name": "list1",
          "Description": "List of objects to be included in the new list\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "291ade9dacb043f69b5716761328c3e7",
          "Name": "list2",
          "Description": "List of objects to be excluded in the new list\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b37bcda74a4640fc8687686993b34dec",
          "Name": "list",
          "Description": "The new list that contains objects in List1 but not in List2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns a new list that includes objects in List1 but excludes objects in List2.\n\nList.SetDifference (list1: var[], list2: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "4c948a677b25450aa3cdda2c6fdb460c",
      "Inputs": [
        {
          "Id": "dd2cffb4c3c9483e9841d6fd9882dc1d",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4d0790851a6c4b938c713e623f29d17c",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0e855bc17f0a459085e88b0a85420787",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "archilab.Lists.Lists.ReplaceEmptyList@var[][],var",
      "Id": "d6888ae01b42471c9213b4b634d04023",
      "Inputs": [
        {
          "Id": "6a8505e20f0741b2a442697661425aa7",
          "Name": "list",
          "Description": "var[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6912a4dc28b14f94b945cc6f96e7f048",
          "Name": "replacement",
          "Description": "var",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2eed39d6b29141c5928a7981f09c5de0",
          "Name": "var[][]",
          "Description": "var[][]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Lists.ReplaceEmptyList (list: var[][], replacement: var): var[][]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"No intersection\";",
      "Id": "0d940976b5134f5ba5f3d08c3689613a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "901a38ea0f6946b0a667c16a358bb012",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "bee48d9d9252459a98be648c3908f3e0",
      "Inputs": [
        {
          "Id": "e15cfef9d8634ce5a6b5c68713458ba0",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4b873642d6474496a710b2c41014c649",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "86b78343346a488a8e919b24d9ab2d0a",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "406065626dd54f1d8c48c62b5736c0d1",
      "Inputs": [
        {
          "Id": "d25a1f3df44947b1825e6c0b57d8a46d",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7952eac45bfd4791bcb0f5863e75dbed",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cea08b3c5b684e0caefbe50654ea0587",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.UniqueItems@var[]..[]",
      "Id": "e6685902035b40079a9fd30760f0bb6c",
      "Inputs": [
        {
          "Id": "daf64241100b406d8bd5fb8afcdefe3a",
          "Name": "list",
          "Description": "List to filter duplicates out of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e4fcf01495ca48cb89ba90b516a53364",
          "Name": "list",
          "Description": "Filtered list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list containing all unique items in the given list.\n\nList.UniqueItems (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.ElementType",
      "Id": "b6e4ab3b1c2b46e69d3273081a5b97a9",
      "Inputs": [
        {
          "Id": "58d161618a8e4d658ec2dee1eaacb188",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2e12b00024744e2c998b43137d66499f",
          "Name": "ElementType",
          "Description": "Element Type or Null.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the ElementType for this Element. Returns null if the Element cannot have an ElementType assigned.\n\nElement.ElementType: ElementType"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "ca694938aac24c4686dff0a528270d8d",
      "Inputs": [
        {
          "Id": "9a1e08b8bfcc402a9e7365466db1e7fd",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "15544a9bd3574bebbfa8d326d8477e95",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2c134e770c3d40c1b2dc8f02be7f905d",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Function\";\n\"0\";",
      "Id": "7b2ec93465d74358a56354e71c1a442e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ff341575d4f840fe9ee024d53b50af7c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "d05b490bf429403eb1918f3787cf8c3d",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "7837290a84104cd48d09b151835b9cc7",
      "Inputs": [
        {
          "Id": "20371b18f4b44bb994112c119cf34444",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e5021cd75a4248a28834d0ed4d561e11",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7bad87dd57334a898c41ebf3dd58b695",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a513addc7fc342dba6a1ecb7f78314ab",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "d2fd91123b6340c985920b3266686ccf",
      "Inputs": [
        {
          "Id": "731c23b2b7fa4790bbec114517046727",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "aab71557e3204f01a5a7a89cbb588889",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "210e49b13b2a4bb1935fec7b1cd2a1de",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "a5b73b5737eb462594dc5b344388ee99",
      "Inputs": [
        {
          "Id": "e917f37b569045ddbc0eb89ea6acb0f7",
          "Name": "object",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f8dce54078fa437cb7fc993e250579f4",
          "Name": "string",
          "Description": "String representation of the object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.ElementType",
      "Id": "e386559b80294ad19bf8e90b31fabd89",
      "Inputs": [
        {
          "Id": "a76cf2d4dd3646418d985f92591082dd",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "08bd593f32b1495da69c26e4e53685d5",
          "Name": "ElementType",
          "Description": "Element Type or Null.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the ElementType for this Element. Returns null if the Element cannot have an ElementType assigned.\n\nElement.ElementType: ElementType"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Levels, DSRevitNodesUI",
      "SelectedIndex": 0,
      "SelectedString": "MAIN LEVEL",
      "NodeType": "ExtensionNode",
      "Id": "b020753d7af343c9a6c74206e7d4c2d4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "50587e825b574849ad64dca1426ad284",
          "Name": "Levels",
          "Description": "The selected Levels",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select a level in the active document"
    },
    {
      "ConcreteType": "Dynamo.Nodes.DSModelElementsSelection, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "InstanceId": [
        "d4f62a3b-00f9-4b3d-9c51-c1d644e989d4-0046e060",
        "355c838c-b1d1-4783-8eb3-62e374f6b354-00471025",
        "355c838c-b1d1-4783-8eb3-62e374f6b354-00471071",
        "355c838c-b1d1-4783-8eb3-62e374f6b354-004715f0",
        "1fc920d9-850b-45f0-9326-05965c5ac582-004756f7"
      ],
      "Id": "3412d8fc15f044899e42d7b435939d0a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "827c7c5b8c6642c8bfe9c6cd49532619",
          "Name": "Elements",
          "Description": "The selected elements.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.ElementType",
      "Id": "33539daa0cc9432b87892cd7b520c16f",
      "Inputs": [
        {
          "Id": "f2bf543c218a4722a5fd3ea29d766641",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6a4f8ceb0cc14990bbec52c35653db97",
          "Name": "ElementType",
          "Description": "Element Type or Null.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the ElementType for this Element. Returns null if the Element cannot have an ElementType assigned.\n\nElement.ElementType: ElementType"
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfFamilyType, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "c419dbe9215048bd9ebc50cc344af58a",
      "Inputs": [
        {
          "Id": "b2fd029e16d94bf3ba26aa7baf7ebb6b",
          "Name": "Family Type",
          "Description": "The Family Type.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "179f1b7384e844e486af5f1b4912c59d",
          "Name": "Elements",
          "Description": "The list of elements matching the query.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified family type from the model."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "8666932940844b18a1e823ef0e018ade",
      "Inputs": [
        {
          "Id": "4f3fc5927d5948e6a10fdb25410a3ad9",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ff5a08ec8ed249ecb082691a26d35da6",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "efba9f557ca643c299a6ea8db234a8a9",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "d8533f6762464f90bcb5b239e81fd06c",
      "Inputs": [
        {
          "Id": "acdea677236e4329a21ab9e14cfb3e1b",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "37773d6cb0504a8a8782f4a93d6c4ee2",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c345e199b76c4dadad28c055a6a7171e",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "66b5d5b7a66d4505924baa1e52e5870f",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "356e8daed04540aa9c76576aefa513b1",
      "Inputs": [
        {
          "Id": "d6c10fb62b5a4f95b29c3d002d8bb693",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "87b6f7c0a62949c19851ad4de336524e",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0e62d1cd5d344c7db37cb4930b230d73",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "80f5b19077684b999602bc93b0ef9d8f",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Level",
      "Id": "5c6f518a4bd542a0a2a8e3df2af8d5c5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8982c1cfbbf94ca59f5d582bf569a901",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "70c0f7e1cfc24baaac48b4e6e2f686a3",
      "Inputs": [
        {
          "Id": "7b32af77499c41d0ba8ac21cb68d8e60",
          "Name": "object",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8c15b87b76c245f482dea7e6828cd6ee",
          "Name": "string",
          "Description": "String representation of the object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "ae5a7d65fe6349fb85e5483ca89689e3",
      "Inputs": [
        {
          "Id": "74707e1c1ce64440ad10dbac97259829",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bc1b046d138e4279a20f64ec0871ad54",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "299539582baa4434a9778d509bfa0566",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "f03ea94544c043c7b73748f1ad4ff0d9",
      "Inputs": [
        {
          "Id": "9e850c90ddfe491ba6e5f7ea04c1f0f9",
          "Name": "object",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e8443783d28247539a93404f3908c394",
          "Name": "string",
          "Description": "String representation of the object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Watch3DNodeModels.Watch3D, Watch3DNodeModels",
      "WatchWidth": 200.0,
      "WatchHeight": 200.0,
      "WasExecuted": true,
      "Camera": {
        "Name": "793900bd-9afe-4cb3-bf8a-93468caa7675 Preview",
        "EyeX": -17.0,
        "EyeY": 24.0,
        "EyeZ": 50.0,
        "LookX": 12.0,
        "LookY": -13.0,
        "LookZ": -58.0,
        "UpX": 0.0,
        "UpY": 1.0,
        "UpZ": 0.0
      },
      "NodeType": "ExtensionNode",
      "Id": "793900bd9afe4cb3bf8a93468caa7675",
      "Inputs": [
        {
          "Id": "4eb964dc287440598bb8e17337e9ab3a",
          "Name": "",
          "Description": "Incoming geometry objects.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "90f51392f0e54e959c2e33b3e004b662",
          "Name": "",
          "Description": "Incoming geometry objects.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Shows a dynamic preview of geometry."
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "05814505842d4f50a034f853fab965cd",
      "Inputs": [
        {
          "Id": "fe2bf76ebfb049eeb3eb2f820304b66f",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c8469d93458e4c9ab5a66d832ccb61bb",
          "Name": "Elements",
          "Description": "An element class.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.SetDifference@var[],var[]",
      "Id": "16f6fdf99dac4d0dba1b2d083d97305b",
      "Inputs": [
        {
          "Id": "59a46f9050b0443a8ffe948b1e837017",
          "Name": "list1",
          "Description": "List of objects to be included in the new list\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "f5e36f96e6ab45e29d3b64ebdf044631",
          "Name": "list2",
          "Description": "List of objects to be excluded in the new list\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f6455acf63514ff5b143abac4bac7336",
          "Name": "list",
          "Description": "The new list that contains objects in List1 but not in List2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns a new list that includes objects in List1 but excludes objects in List2.\n\nList.SetDifference (list1: var[], list2: var[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "50902ad4155545faaf84b52063b68d58",
      "Inputs": [
        {
          "Id": "bea134d7d6df4954be2b8625bb5de131",
          "Name": "item0",
          "Description": "Item Index #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "381f23ba9dab4e3eb046f5673cd4722f",
          "Name": "item1",
          "Description": "Item Index #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "831e4b1e3caf4a6284f04380bc8bcadf",
          "Name": "list",
          "Description": "A list (type: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Makes a new list out of the given inputs"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.UniqueItems@var[]..[]",
      "Id": "ae334125c8744198a8278f365791f0da",
      "Inputs": [
        {
          "Id": "66422a259263441093866c18f735cae6",
          "Name": "list",
          "Description": "List to filter duplicates out of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3447f97f12ac444589e00b6e05cead63",
          "Name": "list",
          "Description": "Filtered list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a new list containing all unique items in the given list.\n\nList.UniqueItems (list: var[]..[]): var[]..[]"
    }
  ],
  "Connectors": [
    {
      "Start": "949e728ac69446e0a7bd073e3492b3ea",
      "End": "00a549cc5ecc4c9fa6e1dc1736688024",
      "Id": "3a75212c38e64354ac2f69dec076f95c",
      "IsHidden": "False"
    },
    {
      "Start": "9043b82c96ba4e17b034cccc6b6a1261",
      "End": "7f8ffdc1a8e94d8ca35e8bc3913494f3",
      "Id": "bf923b5dc8be45838112b8f257f6840d",
      "IsHidden": "False"
    },
    {
      "Start": "9043b82c96ba4e17b034cccc6b6a1261",
      "End": "f5e36f96e6ab45e29d3b64ebdf044631",
      "Id": "6faa5823e7bf440ab598c5f5e9cc29d5",
      "IsHidden": "False"
    },
    {
      "Start": "6423aef68b45450f867b0840e76d0fa0",
      "End": "525055a750934d30b6af3701c1597ed1",
      "Id": "7507fab5d47348f393c6bf95e27c55a0",
      "IsHidden": "False"
    },
    {
      "Start": "6423aef68b45450f867b0840e76d0fa0",
      "End": "8341585fdf9643dea24a33fb32b05b0e",
      "Id": "35ebc3e846bd4d88b2ba811036cc303f",
      "IsHidden": "False"
    },
    {
      "Start": "7f4aa0bcb99f43628abd080b120f5d47",
      "End": "b0e149d5d8d24cf8bfb0acee8a370e39",
      "Id": "2d8e05b41f43416b964bebbbd6d98a02",
      "IsHidden": "False"
    },
    {
      "Start": "7f4aa0bcb99f43628abd080b120f5d47",
      "End": "cbf436c8b8d24610bf0e84dd1e9cae2b",
      "Id": "aa13a8a33f0c4733a6dcd2e61b3498ec",
      "IsHidden": "False"
    },
    {
      "Start": "ce34c5fe49d74d91b8067656becca0dd",
      "End": "4795f14cfd2a40dba3d09009fe386ab6",
      "Id": "3bdfaee1c9c147bcbb11437f25b4c734",
      "IsHidden": "False"
    },
    {
      "Start": "6ee9af54a512447797db3d6d7ec69275",
      "End": "2e9b3dfca68d456694a1cf13775f478b",
      "Id": "7ebbaab29ff44da687ec92bfa276a301",
      "IsHidden": "False"
    },
    {
      "Start": "6ee9af54a512447797db3d6d7ec69275",
      "End": "1d1eb7d690504e45a503ef1cc9150fcd",
      "Id": "b16be0f1f16948c2b5dbc1cecd732814",
      "IsHidden": "False"
    },
    {
      "Start": "c0467d44d4184df9962526c98355662a",
      "End": "f9025005b9c14121aff64bc65f970679",
      "Id": "906af352609a4397b6e231d1d3679db3",
      "IsHidden": "False"
    },
    {
      "Start": "c0467d44d4184df9962526c98355662a",
      "End": "71ade08539b947d38cf5e0bee5edc100",
      "Id": "0b5e426b169c4b89a07bdfd42a81448b",
      "IsHidden": "False"
    },
    {
      "Start": "e14b1bfe6a1642ad87ec3aa89058ca84",
      "End": "54ccba3143bd419facb9db45499fb3d6",
      "Id": "468d984aa0214c5c8d3eb797c550da07",
      "IsHidden": "False"
    },
    {
      "Start": "263689034ce8431aa1aa3bc3a1c44fc1",
      "End": "bd7f17cd78c2407093c01b9fda6382a6",
      "Id": "e845f8a7d88347f7aad87c8e6238e9b0",
      "IsHidden": "False"
    },
    {
      "Start": "6c5ac9ca5e42439b933a5c493c7f1972",
      "End": "59a46f9050b0443a8ffe948b1e837017",
      "Id": "f399cb7fb0c044a2bf57c49d6b761202",
      "IsHidden": "False"
    },
    {
      "Start": "62b450fc91404cf583924ee384cd2395",
      "End": "fe2bf76ebfb049eeb3eb2f820304b66f",
      "Id": "57658c81b9104bcfa0992cb9aa57c8c5",
      "IsHidden": "False"
    },
    {
      "Start": "61b3416e99204e6196f41c5c1cf2fb08",
      "End": "f273bd0375054c0c9e5b65d375c9c121",
      "Id": "10b095676c5447159c0f14cc6da86b59",
      "IsHidden": "False"
    },
    {
      "Start": "832e6192373442a29722d75cb1fb3cf1",
      "End": "789e545c89a34e459e58715cfbfc7a65",
      "Id": "f57df13a59f34ba7a7b9f4501539cd10",
      "IsHidden": "False"
    },
    {
      "Start": "5264834f94224678a584c4c4ec0ef92b",
      "End": "ee6d7714e98a4e018e58ca1e73939cc4",
      "Id": "8f1a4c64a53a4954a51e7775f135b017",
      "IsHidden": "False"
    },
    {
      "Start": "2a20d5b1148e492b8fd50311b269765c",
      "End": "cbcf34d438d743fc90ae1b4d8e714a0b",
      "Id": "e2f8748e2f54472ba33e0dc9817f2b87",
      "IsHidden": "False"
    },
    {
      "Start": "6d982fe3f77249099e49c3b86d20e62b",
      "End": "c08118ce96e34c04b7b922eb31dd82c5",
      "Id": "56925c3cb28c448696835c5a697ed3f2",
      "IsHidden": "False"
    },
    {
      "Start": "42601f5ee8bc43d2804df2ec2875f3a5",
      "End": "60f00c667a084f3995f0e5d48b955be2",
      "Id": "e57e2d908e104d21a207ff45758438d4",
      "IsHidden": "False"
    },
    {
      "Start": "28efdd607d5543e49f223ebd995e2b65",
      "End": "f0a80f80694546b3a94a688038e0116a",
      "Id": "273f2ab9e1774f7388cc94557bbccd9c",
      "IsHidden": "False"
    },
    {
      "Start": "16b8f6ffeb854646b3fc6e3ba08c5c61",
      "End": "a049a4e6d49c481ca9ca501cc1e68d84",
      "Id": "b0c07fa030174fc9a220fc5636ac59fe",
      "IsHidden": "False"
    },
    {
      "Start": "16b8f6ffeb854646b3fc6e3ba08c5c61",
      "End": "4f1a294583e949009a97c198e4c19459",
      "Id": "5e3618a8604a4d228052af361ecb5d7b",
      "IsHidden": "False"
    },
    {
      "Start": "55c0e75bdd1a4bac9dea7d6e77716f90",
      "End": "fe995e1bcec14249a0c293b7d1c73a6e",
      "Id": "b94011b07dac4b759501749fdf3c9128",
      "IsHidden": "False"
    },
    {
      "Start": "6e922c00adab4ecc9012529a08fc013c",
      "End": "3738caac7714495596b58a69acd4956e",
      "Id": "727d3ccf71b9491d98147e4cd08c750e",
      "IsHidden": "False"
    },
    {
      "Start": "37826eb31fbf4ced8b1e51b197ba8b11",
      "End": "6efd3eb413a9441abb570721177a03c0",
      "Id": "56601f5d9d214440b99cf5d812ba188b",
      "IsHidden": "False"
    },
    {
      "Start": "8f49391889f14c288bfbff882f29ce87",
      "End": "542cb0f62d844e6f8a3ca0c6a431bb49",
      "Id": "b0cd5ed15cee49bcac8e80c6c5fdd6a6",
      "IsHidden": "False"
    },
    {
      "Start": "c601f285fcae439caea73a0eaf787c9b",
      "End": "7ee1da6bedf6477e90564e721bfd31bc",
      "Id": "6152bf1625a741f9953d74a11820451b",
      "IsHidden": "False"
    },
    {
      "Start": "c601f285fcae439caea73a0eaf787c9b",
      "End": "4eb964dc287440598bb8e17337e9ab3a",
      "Id": "4d9759501e59442489eb62bc4b112fa9",
      "IsHidden": "False"
    },
    {
      "Start": "75ff2ff797924e65bafff0d6f8c50ec2",
      "End": "9579684739414514835af2ebed43f30a",
      "Id": "f03e8ea8405140608874f9191fdafbd0",
      "IsHidden": "False"
    },
    {
      "Start": "0bfeeb50634c469f92195f7b52c5d32e",
      "End": "f955389239a64e2b89dee9c2eddde949",
      "Id": "4baec33327754209a29af71754a89fdf",
      "IsHidden": "False"
    },
    {
      "Start": "ac730aa42c6c4f82927b791f80acd620",
      "End": "296c73e8b2774e00a32eb43a66a7e074",
      "Id": "be0f565f9398491d84cedcbea76f2a87",
      "IsHidden": "False"
    },
    {
      "Start": "927c803cadac4d039e3515cb3ad132cc",
      "End": "8896f1a7a0dc422d88c4f2f0138f5564",
      "Id": "c77c5bfe802f4f158b56c58f753cda59",
      "IsHidden": "False"
    },
    {
      "Start": "69ce788ce48043a7b10d923102e834ae",
      "End": "7c8370331cb947a5972c476beeb88bbd",
      "Id": "3b5db5302cc6432d8fb6a597b23c615a",
      "IsHidden": "False"
    },
    {
      "Start": "69ce788ce48043a7b10d923102e834ae",
      "End": "bafe7e293a254b02aebbb4737e3aeabd",
      "Id": "0a4cf6be6f0d4da2ae292ba8cc083cbe",
      "IsHidden": "False"
    },
    {
      "Start": "69ce788ce48043a7b10d923102e834ae",
      "End": "6a8505e20f0741b2a442697661425aa7",
      "Id": "3e2ad7383db6442484f815e7bbe7fb97",
      "IsHidden": "False"
    },
    {
      "Start": "0a364476906f40438df44a64512b7c73",
      "End": "f7755b7739c24af894e521535d4698e8",
      "Id": "4347da32615144869beb5450b22ffba2",
      "IsHidden": "False"
    },
    {
      "Start": "a180a1b7da4e49ffb533824e93557e43",
      "End": "2deddb513aaf4722a81117134167fcb3",
      "Id": "6170851d63c240f9a346ff119a9b5e30",
      "IsHidden": "False"
    },
    {
      "Start": "a8394c3d31654d12bc68b4ac6a7f3724",
      "End": "fae209830c3f4441836373aab54c7a3e",
      "Id": "a1502d574b794dfc9d0fc4306f0d667a",
      "IsHidden": "False"
    },
    {
      "Start": "573a16a466a94e23857ec5fd9e5c3948",
      "End": "836239321fd240b78916611c21a6eaa5",
      "Id": "4d1aa5eaf88b428f847165027e853b72",
      "IsHidden": "False"
    },
    {
      "Start": "d7bb11dea92141be99266207dce45567",
      "End": "44ad05b0eeff4e249f0ce363ba9f5f85",
      "Id": "c45357a6f2564f798f466f893007b1a7",
      "IsHidden": "False"
    },
    {
      "Start": "214a4b115cc047138bb6247af417cd7c",
      "End": "d898f641c5ad4f45ab3f1b1f622d3dc2",
      "Id": "eb2dca64ca2249158bbb9a1a6659af44",
      "IsHidden": "False"
    },
    {
      "Start": "74918fb8da0b434eb9d55e8f6d649e17",
      "End": "66422a259263441093866c18f735cae6",
      "Id": "ac09fa421d5d4466b7abbc96b9215ca5",
      "IsHidden": "False"
    },
    {
      "Start": "6fda783421a0485ead859048b165086b",
      "End": "c679e2f633ee427d976bb3b57db15609",
      "Id": "708ff94091f44e44bbd6e176b232a781",
      "IsHidden": "False"
    },
    {
      "Start": "08fd1ce3bca64abeba566824bcd9c655",
      "End": "5999bf1e82f5486c9951249c77982aaa",
      "Id": "f1f44e8da5a443009db738e2e01231f5",
      "IsHidden": "False"
    },
    {
      "Start": "25664e41418c4644a06421e6e92fce45",
      "End": "135f3e1b9eb246a7aa884a11875b2ef3",
      "Id": "c33b4433c6474354aab5a2b377ad37e3",
      "IsHidden": "False"
    },
    {
      "Start": "25664e41418c4644a06421e6e92fce45",
      "End": "8f425598c74a4966879a7d99d13ddc5c",
      "Id": "f6c7f431e7294927afe37ebcd2c9d4db",
      "IsHidden": "False"
    },
    {
      "Start": "447e0ecbc3d240948540e5e7a04567a2",
      "End": "4aa2b31f984741d9a639c4823a5b6559",
      "Id": "7804843ac8f04012becdc6d70033d6b7",
      "IsHidden": "False"
    },
    {
      "Start": "0cde909d33cc448b8c59944f98002c58",
      "End": "8cffd98a71ee437fa709d04e4f10d9fa",
      "Id": "beaf70687d234258b68a31450bc27bcd",
      "IsHidden": "False"
    },
    {
      "Start": "bcb7c7ddcd6749eaaf0fed09640cd1e4",
      "End": "937b6fe5e0794eacb42409f166283b50",
      "Id": "78a757a3172f43d6b9806276b2b1fbdf",
      "IsHidden": "False"
    },
    {
      "Start": "9dd477f987ba4f0da44f3e67adfe7a1f",
      "End": "e148b3967c934674a3d7ec52fb74e8f7",
      "Id": "07a03ab4646548558853e5584792a81f",
      "IsHidden": "False"
    },
    {
      "Start": "4527eaae2b524ddcb9255378026dc414",
      "End": "89aae41cdb414ed184ce7aeee34f8cb3",
      "Id": "4746dd3a48b84453b62ff1939c520155",
      "IsHidden": "False"
    },
    {
      "Start": "927b7a14d99b4aa1aefdbfbcd2e3ee77",
      "End": "fd5adc037f2948b6bdc36dbfc5e1f272",
      "Id": "ea7203812ec0452283cf763e784ccdd2",
      "IsHidden": "False"
    },
    {
      "Start": "927b7a14d99b4aa1aefdbfbcd2e3ee77",
      "End": "c6a0402edadd4e2bb98947c26ed3aaa5",
      "Id": "711de14afc7942f7a326a82493f07f09",
      "IsHidden": "False"
    },
    {
      "Start": "c2d55573abf8423f911c961e83e95bc2",
      "End": "2c401adee79a4a6cb1ed0f2c797e86ab",
      "Id": "58d6c5630333437b91d7d3798f2fdbac",
      "IsHidden": "False"
    },
    {
      "Start": "541eb19591f7454491acec7fac1016bf",
      "End": "8ad4c85c24ae4d9aab64b7587f718b2a",
      "Id": "a234a55431b94684a67d4c9b9dfbabda",
      "IsHidden": "False"
    },
    {
      "Start": "541eb19591f7454491acec7fac1016bf",
      "End": "651977a158c14952bb54410d4b947d76",
      "Id": "1fb09cbf2fd0449689ce3877c52cf5cc",
      "IsHidden": "False"
    },
    {
      "Start": "541eb19591f7454491acec7fac1016bf",
      "End": "9c95d01b753f42a79b1f97070deba730",
      "Id": "a5c095c6d1b549a4acff39b6dcf14cdb",
      "IsHidden": "False"
    },
    {
      "Start": "541eb19591f7454491acec7fac1016bf",
      "End": "9978ffa79f2745878d3c8da3ae5f694b",
      "Id": "d1e24a468b824781bc56c194f1a0490f",
      "IsHidden": "False"
    },
    {
      "Start": "541eb19591f7454491acec7fac1016bf",
      "End": "ac83689ee36e4fbcad76dc3b2c0245a0",
      "Id": "8dd1bea2d9dd4757b6a52c6801616004",
      "IsHidden": "False"
    },
    {
      "Start": "04a41c9c88b74597a5b836f5d2365f45",
      "End": "fe6fc579ca4a4270b32d457104ec7727",
      "Id": "1aca0f02c46046cca22cb0f3044491ab",
      "IsHidden": "False"
    },
    {
      "Start": "b329f64adf4b41eeb90fe126f6d0a7e5",
      "End": "cf4d23897130490a985f244d3ba5b545",
      "Id": "2a1fa3a26e6b4826bcd2b6b9a83720c0",
      "IsHidden": "False"
    },
    {
      "Start": "69c90f3907114142bd09ca7126ba849e",
      "End": "d56c76dc676349ab85547c9cb42f3154",
      "Id": "b6a57295be104ad28ea5ed61e8864bc1",
      "IsHidden": "False"
    },
    {
      "Start": "8a16554f8c4a4f2eb4b25dd87f02c12a",
      "End": "da7e9f96b03f43ec94da65430499d757",
      "Id": "92da8c5642234ee89b62da29bcb3c282",
      "IsHidden": "False"
    },
    {
      "Start": "7bc7fe5912a042078600632f278c45d6",
      "End": "5df690d0e94a43e6b90111d05d9be67e",
      "Id": "393e0c2762c347e19500bdfce7654e3c",
      "IsHidden": "False"
    },
    {
      "Start": "993cea7c17594a36abedb8c519b9c5b1",
      "End": "f1ce0fa213324dd292f048a9dfc9940d",
      "Id": "2c4b904c5862425abb868adee23ead7d",
      "IsHidden": "False"
    },
    {
      "Start": "993cea7c17594a36abedb8c519b9c5b1",
      "End": "6455c8e022634fc583353e7591aff367",
      "Id": "36ba285fda644e17840e1f2f2a50e963",
      "IsHidden": "False"
    },
    {
      "Start": "90904a591d254a6fbb0bb504fc003df7",
      "End": "d8ef60e405b7439fb70f328067a7c795",
      "Id": "4cd3ca98ed6b4fdcb1e1fbda13ad7f76",
      "IsHidden": "False"
    },
    {
      "Start": "bfbfaedbd03e4bca9e77e5a535250c40",
      "End": "0791168a054a4f91b5f3c2f82366bcfa",
      "Id": "15463938a8f54ae792c4c288512ca183",
      "IsHidden": "False"
    },
    {
      "Start": "848e7c5f5f6b44cea6daf32b958478e5",
      "End": "7daacd5235ea4d20b7c9dafc82c15488",
      "Id": "5788eba491974938903952d278f4e3fd",
      "IsHidden": "False"
    },
    {
      "Start": "a274480428c143e991853eaa497056fe",
      "End": "83d141d1905b41c1a96365e2404fda74",
      "Id": "9f890a811b8e474fbe7c3ab12f9e2540",
      "IsHidden": "False"
    },
    {
      "Start": "a274480428c143e991853eaa497056fe",
      "End": "0789c16196c14b04a4d38bf0e5f7de4c",
      "Id": "056cc17b74d04106a88e735b9f14068f",
      "IsHidden": "False"
    },
    {
      "Start": "a274480428c143e991853eaa497056fe",
      "End": "77c4ff5a66654cce818902a18f81292a",
      "Id": "97e1fbe074004470b092c5eaff5069a5",
      "IsHidden": "False"
    },
    {
      "Start": "6da13d57436e43d4bc1b99f553307764",
      "End": "00484dff5a244b84ba4cd0335b3d50ec",
      "Id": "43daafef75104da5a85b8f2e5ddf4fe9",
      "IsHidden": "False"
    },
    {
      "Start": "9b2f178432444165b759a1bdaba556c3",
      "End": "adc4e4464e154db183ee66f389e0106d",
      "Id": "9e49651ed1ea42b0b254bda50ad81855",
      "IsHidden": "False"
    },
    {
      "Start": "56f60f4dd19344ce9ad32758cae941a1",
      "End": "97dada3b47d24f48a1c9fcc8f437c12c",
      "Id": "cf662f8600f94c63a5c643d3545da538",
      "IsHidden": "False"
    },
    {
      "Start": "f6b254aede1e49d8bf7a3baba069454d",
      "End": "5e78e9a9c0f34d4dadd7e6c680537ab1",
      "Id": "6d6a0e8b9c2643c3afa192f025a27273",
      "IsHidden": "False"
    },
    {
      "Start": "4e8a4758ac0f463ab03f7e7dd32ed47e",
      "End": "18005226bf6744a398c9e05f4e3dc6cd",
      "Id": "325374d82d13451bbc4c4bda4ba3a31a",
      "IsHidden": "False"
    },
    {
      "Start": "6367ebb85c7b4d079794e904e215c3d7",
      "End": "8e51ba5e6c0a4abc9291354ed6350040",
      "Id": "3a78864e69b34925808190225e73e6ee",
      "IsHidden": "False"
    },
    {
      "Start": "a2d7be8e52684dc08ee4cf5ba66a5da0",
      "End": "4603048d35fb4ddc876287c748519140",
      "Id": "cb15540ea2b142bca2aae53a7f79bc19",
      "IsHidden": "False"
    },
    {
      "Start": "09b8d58138834fb1af8167fc81f4c54e",
      "End": "1a2e5fa4402b44fead272f0f98641fff",
      "Id": "72768609ab8a415fa1ada23802e84ce0",
      "IsHidden": "False"
    },
    {
      "Start": "567e186c8f8b48d6b3a718977cf26b79",
      "End": "a732b8b8e2ea4671bb7c8b3227c8e588",
      "Id": "c9422fc56f8847faa7fddcb603cb8510",
      "IsHidden": "False"
    },
    {
      "Start": "d366f1e044e644d9b4069064a861d803",
      "End": "ea356665be2d4211a152bab5bd17dd04",
      "Id": "47ea2e9f5a174b719a5935838fafac37",
      "IsHidden": "False"
    },
    {
      "Start": "d366f1e044e644d9b4069064a861d803",
      "End": "d76326e0332346c78c600f79f705208b",
      "Id": "693c236dba5841dc9b7c4f75b73a997d",
      "IsHidden": "False"
    },
    {
      "Start": "06062c1dfb854001b923533a6bc2a153",
      "End": "879ac4237f95424da949f7023cd1fcc4",
      "Id": "35f4a4c61ae3419a85789a06c36e018e",
      "IsHidden": "False"
    },
    {
      "Start": "c5b2f7e85fd74543a97ddb3ba34dd93b",
      "End": "6f4e8ef9e25241ac9f6601d388508a9b",
      "Id": "f9f03cbae11c4e3e8fbabef5af90f134",
      "IsHidden": "False"
    },
    {
      "Start": "9dc03ac057914f8682e2c066da1c17a1",
      "End": "8a0a1629612d4b53a81a7aaec756956f",
      "Id": "36aeac7e891747a289b6a4f407273e24",
      "IsHidden": "False"
    },
    {
      "Start": "8cdc285ca0474465ac2759408c9d436a",
      "End": "4d0790851a6c4b938c713e623f29d17c",
      "Id": "b39184b28fba458f9fea96d1a108dea1",
      "IsHidden": "False"
    },
    {
      "Start": "4020897c9636490599db75786820fb79",
      "End": "3bf830cad7f948cfbbe1ec402f45212c",
      "Id": "941b313d1d7041dcb87ea0a4926fa6fc",
      "IsHidden": "False"
    },
    {
      "Start": "0d14a5b0f4d848e09472381021bbc100",
      "End": "ef7d841aa5484750be0b21b49b960809",
      "Id": "0bd90a4878b6497cb4664d3886f633d1",
      "IsHidden": "False"
    },
    {
      "Start": "0d14a5b0f4d848e09472381021bbc100",
      "End": "291ade9dacb043f69b5716761328c3e7",
      "Id": "61c78c2ac71a496d8ba16f3b58fb2120",
      "IsHidden": "False"
    },
    {
      "Start": "d1f6072f0ba7485483bd69f3e3502a51",
      "End": "58e689090a204ce8ba88d7239dc4dd5c",
      "Id": "7ac04178ecb24c9c9c5f085a0a0cd95a",
      "IsHidden": "False"
    },
    {
      "Start": "b37bcda74a4640fc8687686993b34dec",
      "End": "e03784a2a4d34b279a0d28c5211a8ae6",
      "Id": "6580bf5304554b32b0f98129c4c4ec15",
      "IsHidden": "False"
    },
    {
      "Start": "0e855bc17f0a459085e88b0a85420787",
      "End": "d25a1f3df44947b1825e6c0b57d8a46d",
      "Id": "c7f42a2b13d845829f7011291f1b9f07",
      "IsHidden": "False"
    },
    {
      "Start": "2eed39d6b29141c5928a7981f09c5de0",
      "End": "e15cfef9d8634ce5a6b5c68713458ba0",
      "Id": "ea204baf57cd4db182ec453e255fe4e7",
      "IsHidden": "False"
    },
    {
      "Start": "901a38ea0f6946b0a667c16a358bb012",
      "End": "6912a4dc28b14f94b945cc6f96e7f048",
      "Id": "5c852396b30742e99a61f6159ad4c0be",
      "IsHidden": "False"
    },
    {
      "Start": "86b78343346a488a8e919b24d9ab2d0a",
      "End": "dd2cffb4c3c9483e9841d6fd9882dc1d",
      "Id": "8e1f5e6d76534fffa5d8c5588b4691dc",
      "IsHidden": "False"
    },
    {
      "Start": "cea08b3c5b684e0caefbe50654ea0587",
      "End": "daf64241100b406d8bd5fb8afcdefe3a",
      "Id": "a99c189f19244211a860afef35116685",
      "IsHidden": "False"
    },
    {
      "Start": "e4fcf01495ca48cb89ba90b516a53364",
      "End": "843db5b8163d42bab65cbb9a12fadc15",
      "Id": "de8fa03e237c4da39b5483568fdc4e24",
      "IsHidden": "False"
    },
    {
      "Start": "2e12b00024744e2c998b43137d66499f",
      "End": "9a1e08b8bfcc402a9e7365466db1e7fd",
      "Id": "634fab1e3cbd4672be5dc45ac02a14d9",
      "IsHidden": "False"
    },
    {
      "Start": "2c134e770c3d40c1b2dc8f02be7f905d",
      "End": "e917f37b569045ddbc0eb89ea6acb0f7",
      "Id": "b3172342275b483cad8d95990afafbcf",
      "IsHidden": "False"
    },
    {
      "Start": "ff341575d4f840fe9ee024d53b50af7c",
      "End": "15544a9bd3574bebbfa8d326d8477e95",
      "Id": "5302688845fd4ec78fea1e322065c7fc",
      "IsHidden": "False"
    },
    {
      "Start": "d05b490bf429403eb1918f3787cf8c3d",
      "End": "aab71557e3204f01a5a7a89cbb588889",
      "Id": "d7c62bd597724c77a0e0b50b1426d82f",
      "IsHidden": "False"
    },
    {
      "Start": "7bad87dd57334a898c41ebf3dd58b695",
      "End": "67f40088d3664d94acbe54c89a7076ba",
      "Id": "d644ffe6932748189b8612953562f91e",
      "IsHidden": "False"
    },
    {
      "Start": "7bad87dd57334a898c41ebf3dd58b695",
      "End": "dbc48fac79c44a3086e167d155263aa2",
      "Id": "3d6eaeaa56464c3da5f6aa14b3df3255",
      "IsHidden": "False"
    },
    {
      "Start": "7bad87dd57334a898c41ebf3dd58b695",
      "End": "154598bd234f47979439a1bfc7101e9a",
      "Id": "bc23f413701c451485327743b56e1889",
      "IsHidden": "False"
    },
    {
      "Start": "7bad87dd57334a898c41ebf3dd58b695",
      "End": "e0d64f381968458d95604a1035d47f81",
      "Id": "a1b37f521da741409e43f0159c2f40f7",
      "IsHidden": "False"
    },
    {
      "Start": "7bad87dd57334a898c41ebf3dd58b695",
      "End": "3f1e7633030647739e482905513419f0",
      "Id": "382f814aa0a349438687ca4a8c872b8f",
      "IsHidden": "False"
    },
    {
      "Start": "7bad87dd57334a898c41ebf3dd58b695",
      "End": "d2021eb8f6554b9d926c1ef1698a4d5c",
      "Id": "8235e49ec33746db9a0fb6e97b54f54e",
      "IsHidden": "False"
    },
    {
      "Start": "7bad87dd57334a898c41ebf3dd58b695",
      "End": "2c5e94fbf1aa41739cc353755f55a2c8",
      "Id": "3c9c1be8aae44fcc8e5c15be69d93cbe",
      "IsHidden": "False"
    },
    {
      "Start": "7bad87dd57334a898c41ebf3dd58b695",
      "End": "1a7916bf93e145fbb79bdcd0f967033c",
      "Id": "81fae790c74141d1bb32900eb4385f80",
      "IsHidden": "False"
    },
    {
      "Start": "7bad87dd57334a898c41ebf3dd58b695",
      "End": "a76cf2d4dd3646418d985f92591082dd",
      "Id": "db04c1ad250347488895ca54ca4e0c23",
      "IsHidden": "False"
    },
    {
      "Start": "210e49b13b2a4bb1935fec7b1cd2a1de",
      "End": "e5021cd75a4248a28834d0ed4d561e11",
      "Id": "f49114e21ec9492396e929e6e80ac282",
      "IsHidden": "False"
    },
    {
      "Start": "f8dce54078fa437cb7fc993e250579f4",
      "End": "731c23b2b7fa4790bbec114517046727",
      "Id": "de3315ea193f486189145326c5096bf7",
      "IsHidden": "False"
    },
    {
      "Start": "08bd593f32b1495da69c26e4e53685d5",
      "End": "581ec07c3f0c48078c7d55900918f309",
      "Id": "12bfd9d964a647c2a57a3ab410674c4f",
      "IsHidden": "False"
    },
    {
      "Start": "50587e825b574849ad64dca1426ad284",
      "End": "7b32af77499c41d0ba8ac21cb68d8e60",
      "Id": "13d07b9e27ef48cb976a3b9c58a47d91",
      "IsHidden": "False"
    },
    {
      "Start": "827c7c5b8c6642c8bfe9c6cd49532619",
      "End": "f2bf543c218a4722a5fd3ea29d766641",
      "Id": "c8a8d5765bf54d678505578048ca0c5b",
      "IsHidden": "False"
    },
    {
      "Start": "6a4f8ceb0cc14990bbec52c35653db97",
      "End": "b2fd029e16d94bf3ba26aa7baf7ebb6b",
      "Id": "fe9376d43f2e4b688963076f5bd7caf1",
      "IsHidden": "False"
    },
    {
      "Start": "179f1b7384e844e486af5f1b4912c59d",
      "End": "74707e1c1ce64440ad10dbac97259829",
      "Id": "e42ddaa7294b420ca43e7bfb2bae622e",
      "IsHidden": "False"
    },
    {
      "Start": "efba9f557ca643c299a6ea8db234a8a9",
      "End": "9e850c90ddfe491ba6e5f7ea04c1f0f9",
      "Id": "a9d2dd4af1d04f8d914e9db05f735b97",
      "IsHidden": "False"
    },
    {
      "Start": "c345e199b76c4dadad28c055a6a7171e",
      "End": "7ab0aa2d35c343479391e0b6b5ec0cc3",
      "Id": "b0a514b0aa244180a4a172197a7492b4",
      "IsHidden": "False"
    },
    {
      "Start": "80f5b19077684b999602bc93b0ef9d8f",
      "End": "37773d6cb0504a8a8782f4a93d6c4ee2",
      "Id": "a93d1de195b94d53952c3c7e66a0074d",
      "IsHidden": "False"
    },
    {
      "Start": "8982c1cfbbf94ca59f5d582bf569a901",
      "End": "ff5a08ec8ed249ecb082691a26d35da6",
      "Id": "280932dcc17b4f22b7f247134b2ee3fd",
      "IsHidden": "False"
    },
    {
      "Start": "8c15b87b76c245f482dea7e6828cd6ee",
      "End": "87b6f7c0a62949c19851ad4de336524e",
      "Id": "4aa24032a33c4b0a948c0c4e3a96d95a",
      "IsHidden": "False"
    },
    {
      "Start": "299539582baa4434a9778d509bfa0566",
      "End": "4f3fc5927d5948e6a10fdb25410a3ad9",
      "Id": "641fd48aaa94451692dc1a43d2e2091a",
      "IsHidden": "False"
    },
    {
      "Start": "299539582baa4434a9778d509bfa0566",
      "End": "acdea677236e4329a21ab9e14cfb3e1b",
      "Id": "dc75d59b1ceb4a689f171dca1b541131",
      "IsHidden": "False"
    },
    {
      "Start": "e8443783d28247539a93404f3908c394",
      "End": "d6c10fb62b5a4f95b29c3d002d8bb693",
      "Id": "e1c2dfeac9774acfa074e5da5ad969a8",
      "IsHidden": "False"
    },
    {
      "Start": "c8469d93458e4c9ab5a66d832ccb61bb",
      "End": "381f23ba9dab4e3eb046f5673cd4722f",
      "Id": "68e8d303ca8847be9b805eb6374ceef9",
      "IsHidden": "False"
    },
    {
      "Start": "f6455acf63514ff5b143abac4bac7336",
      "End": "bea134d7d6df4954be2b8625bb5de131",
      "Id": "b4bd31db8f0341c6bcc9d020726bf917",
      "IsHidden": "False"
    },
    {
      "Start": "831e4b1e3caf4a6284f04380bc8bcadf",
      "End": "8a8f7d38b63a43ddbe3e1aaa026e9464",
      "Id": "fa6fc0640e23452b81c37f1c77dd1a58",
      "IsHidden": "False"
    },
    {
      "Start": "3447f97f12ac444589e00b6e05cead63",
      "End": "58d161618a8e4d658ec2dee1eaacb188",
      "Id": "8839dd81d6cc49c3920885c806c8642e",
      "IsHidden": "False"
    },
    {
      "Start": "3447f97f12ac444589e00b6e05cead63",
      "End": "20371b18f4b44bb994112c119cf34444",
      "Id": "dfe8e09bb181440caffcc30817068442",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [
    "f35a4902-48b5-40f2-8d0a-98edae74a72b",
    "24214d3e-6159-4b2c-97b4-0a35a13518d9",
    "cbc06bc3-4c8d-4b6a-bd05-e0f5b70427da"
  ],
  "NodeLibraryDependencies": [
    {
      "Name": "bimorphNodes",
      "Version": "5.1.3",
      "ReferenceType": "Package",
      "Nodes": [
        "92ce2968291b417ca6fb475ca77fb094",
        "de7ff91196604cd882cff0a3b618a3bc"
      ]
    },
    {
      "Name": "Clockwork for Dynamo 2.x",
      "Version": "2.6.0",
      "ReferenceType": "Package",
      "Nodes": [
        "3b86f430b68b40edb9e93d723ba1e3f1",
        "85d29fd126d34f32b3661a8c8225e4a4",
        "9752da1bafb4478e96626a1a8eb991b2",
        "f7d3100ed54a44a99d1708351def2170"
      ]
    },
    {
      "Name": "archi-lab.net",
      "Version": "2024.217.1024",
      "ReferenceType": "Package",
      "Nodes": [
        "b74ad932c7554aabb0eb2c52689500b5",
        "d6888ae01b42471c9213b4b634d04023"
      ]
    }
  ],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.13",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "2.0",
      "Data": {}
    }
  ],
  "Author": "None provided",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.16.2.5624",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -1203.687255859375,
      "EyeY": 609.419189453125,
      "EyeZ": -422.004150390625,
      "LookX": 172.5189208984375,
      "LookY": -427.83892822265625,
      "LookZ": -65.225128173828125,
      "UpX": 0.759608805179596,
      "UpY": 0.58353531360626221,
      "UpZ": -0.28719571232795715
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Name": "Element.IntersectsSolid",
        "ShowGeometry": true,
        "Id": "92ce2968291b417ca6fb475ca77fb094",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5420.0017495404027,
        "Y": 1772.473019020827
      },
      {
        "Name": "FamilyInstance.GetHost",
        "ShowGeometry": true,
        "Id": "8dfb289ae918432787b79c3335eb41a4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 870.36504031243066,
        "Y": 1486.8980271637452
      },
      {
        "Name": "Element.Geometry",
        "ShowGeometry": true,
        "Id": "22c827d29f7845198278637f9c149187",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1652.477201206882,
        "Y": 1305.3685980525668
      },
      {
        "Name": "FamilyInstance.FacingOrientation",
        "ShowGeometry": true,
        "Id": "53a034a8acc54ff8bfb358166e175c67",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2222.6399341724423,
        "Y": 2206.3994440988276
      },
      {
        "Name": "Line.ByStartPointDirectionLength",
        "ShowGeometry": true,
        "Id": "8bf33e353c224ba39ba52249e318cbca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2751.9547274573993,
        "Y": 2053.6641331627379
      },
      {
        "Name": "CoordinateSystem.Origin",
        "ShowGeometry": true,
        "Id": "8bcfe50659294b71bb69e6ab31300f35",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2279.5533650225352,
        "Y": 2053.6641331627379
      },
      {
        "Name": "get CS",
        "ShowGeometry": true,
        "Id": "72714044ba7343f397449953cf757c06",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1850.6161020583584,
        "Y": 2053.6641331627379
      },
      {
        "Name": "Select View to Highlight Issues (it should be at the end of the list, such as ZZ - DESIGN CHECK)",
        "ShowGeometry": true,
        "Id": "2d8917e8ceca4bd4bc34b65d69deb2df",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2365.9295985806643,
        "Y": 2838.4465275545467
      },
      {
        "Name": "SolidIntersectionResult.IntersectingElements",
        "ShowGeometry": true,
        "Id": "de7ff91196604cd882cff0a3b618a3bc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5806.1654775405514,
        "Y": 962.33870462623452
      },
      {
        "Name": "Categories",
        "ShowGeometry": false,
        "Id": "9804e8fe797b4c2993779e659cad720f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3950.6789190187465,
        "Y": 873.38886334236031
      },
      {
        "Name": "All Elements of Category",
        "ShowGeometry": false,
        "Id": "3fedfafbfb1d465f9020a850adbd6a18",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4326.4578260595372,
        "Y": 876.96541899788326
      },
      {
        "Name": "List Create",
        "ShowGeometry": true,
        "Id": "67ec1244bf36462c92353fada610bc9d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4372.3967027849621,
        "Y": 1170.5411232965712
      },
      {
        "Name": "Categories",
        "ShowGeometry": false,
        "Id": "80e6495a1189413c951cd46aa18223f8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3950.6789190187465,
        "Y": 1032.541388031394
      },
      {
        "Name": "Categories",
        "ShowGeometry": false,
        "Id": "4502f0bda12848519f119a43cf8c5a25",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3950.6789190187465,
        "Y": 1209.1818567863554
      },
      {
        "Name": "Cuboid.ByLengths",
        "ShowGeometry": false,
        "Id": "cf6fee8b856347f0a2343398b9bc133d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3801.1648300693578,
        "Y": 2053.3902772640904
      },
      {
        "Name": "Geometry.Translate",
        "ShowGeometry": true,
        "Id": "93195678b7f641348734ba0bd77b7558",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4167.0036131219758,
        "Y": 1897.6199526189114
      },
      {
        "Name": "Line.ByStartPointDirectionLength",
        "ShowGeometry": true,
        "Id": "6b6455ef9330434d86b7f2e52c8877a9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3511.4890189544672,
        "Y": 3057.471606320617
      },
      {
        "Name": "Curve.EndPoint",
        "ShowGeometry": true,
        "Id": "5654bd104d68438ca6158b29dcd5a10f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3275.7432815539,
        "Y": 3025.1985121138341
      },
      {
        "Name": "FamilyInstance.HandOrientation",
        "ShowGeometry": true,
        "Id": "3b86f430b68b40edb9e93d723ba1e3f1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 604.755393822556,
        "Y": 2089.1425264320392
      },
      {
        "Name": "Vector.Reverse",
        "ShowGeometry": true,
        "Id": "6f2efe3b284441358be129b818fa6a28",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1094.3897272948616,
        "Y": 2089.1425264320392
      },
      {
        "Name": "Geometry.Translate",
        "ShowGeometry": false,
        "Id": "992adbc0cce940878491a55d52b528e9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4541.0743406438523,
        "Y": 1920.139523032919
      },
      {
        "Name": "Number",
        "ShowGeometry": true,
        "Id": "1ff6a8e7d00d49abb94b4b16232c29cf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4341.060807312916,
        "Y": 2143.0776068896444
      },
      {
        "Name": "Categories",
        "ShowGeometry": false,
        "Id": "a620062ad270457e970df1e5f7d5f346",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3950.6789190187465,
        "Y": 1381.1245529140986
      },
      {
        "Name": "Categories",
        "ShowGeometry": false,
        "Id": "6212779b2d3d471683754cba361a8859",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3950.6789190187465,
        "Y": 1559.9451388474361
      },
      {
        "Name": "Geometry.Translate",
        "ShowGeometry": false,
        "Id": "0250a66823694bfeac6bdf47bbb8ec82",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4906.1558431727735,
        "Y": 2041.735495178166
      },
      {
        "Name": "Number",
        "ShowGeometry": true,
        "Id": "1a59854309a94fe490328b8621f421ca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4672.4450803290529,
        "Y": 2143.7892487119652
      },
      {
        "Name": "Element.SetParameterByName",
        "ShowGeometry": true,
        "Id": "40e1fe8152ce4ee2a0dd57f9b87f28f9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8561.1021181452688,
        "Y": 2026.2348328787461
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "3b036d2bd7ab44e3815911afefa7f621",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5080.9147250383967,
        "Y": 1188.449810694357
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "58dd739d27f844a290324332a7a5439b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7711.8694800783023,
        "Y": 2034.6439320771426
      },
      {
        "Name": "List.TakeItems",
        "ShowGeometry": true,
        "Id": "a25ed8fcfd744ed19aa792167eb148f9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6467.3098999148615,
        "Y": 970.630533629906
      },
      {
        "Name": "Number",
        "ShowGeometry": true,
        "Id": "9897f185371c4aaa94bdea157d960af7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6260.8271306382021,
        "Y": 1046.2329159905687
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "bbec49b874c94e1994b134dda75ac780",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6730.4067132292885,
        "Y": 1551.9413224522684
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "3602395d266f4690babd67b6c4200ff2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8256.230239898392,
        "Y": 2031.1830363903705
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "3c3b4f3eeaed4d328facda8bef6bdd0e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8238.4547927822277,
        "Y": 2170.0111905936656
      },
      {
        "Name": "Element.SetParameterByName",
        "ShowGeometry": true,
        "Id": "a4606ccc0ca24e9ea5df1afa21e69253",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9842.3794595873878,
        "Y": 1498.3791866921317
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "6568fa45f7d5414187d3ba87a207b9da",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9589.3361594834751,
        "Y": 1616.0376970416025
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "71c6b2eff1cf484796e16bcf7e1f3a7c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9622.2299269611558,
        "Y": 1747.4806820139563
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "d6a016fbc77c481692302676fc117265",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1033.6925048135345,
        "Y": 1310.4701114921979
      },
      {
        "Name": "FamilyInstance.GetHost",
        "ShowGeometry": true,
        "Id": "8a75b90364414d6e9b59f893566eac8d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 536.74098652129965,
        "Y": 650.60928499852082
      },
      {
        "Name": "Element.ElementType",
        "ShowGeometry": true,
        "Id": "d9aee2a32e674ffbb94f76a6aa1131e1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 828.09871243358316,
        "Y": 646.68172668903958
      },
      {
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Id": "ca934010851b4ddb8840f8ffcd1193a5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1154.7135641278617,
        "Y": 587.22269409472938
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "7692866c73a74eb0ac34b6fcb5439527",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 965.2433986358194,
        "Y": 934.36908272972141
      },
      {
        "Name": "Formula",
        "ShowGeometry": true,
        "Id": "4065b3e5417b43d0ad2e9119b031822f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3792.3052498472689,
        "Y": 2286.9017594769862
      },
      {
        "Name": "List.Count",
        "ShowGeometry": true,
        "Id": "f321d87c060749d9a24de343b1a9ea64",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 811.6424333637417,
        "Y": 1640.5916902697779
      },
      {
        "Name": "Number of checked doors",
        "ShowGeometry": true,
        "Id": "c4cce4089db04f5f9982ce36ed74ee8e",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Excluded": false,
        "X": 1048.4094516928174,
        "Y": 1644.2939368632865
      },
      {
        "Name": "List.Count",
        "ShowGeometry": true,
        "Id": "693eff5100084105b6f42a016c01001b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8895.784344479307,
        "Y": 2028.2077352102021
      },
      {
        "Name": "Results",
        "ShowGeometry": true,
        "Id": "f719640ca2574328bd3a9d797c66f8d0",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Excluded": false,
        "X": 9840.08153760888,
        "Y": 2028.2077352102021
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "32e027a09bbb4198834f64a2d7ed6c17",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9157.656157696927,
        "Y": 2028.2077352102021
      },
      {
        "Name": "DetailCurve.ByCurve+",
        "ShowGeometry": false,
        "Id": "85d29fd126d34f32b3661a8c8225e4a4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3895.4544829948936,
        "Y": 2821.6551082237797
      },
      {
        "Name": "DetailCurve.ByCurve+",
        "ShowGeometry": false,
        "Id": "9752da1bafb4478e96626a1a8eb991b2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3895.4544829948936,
        "Y": 3092.6716063206172
      },
      {
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Id": "8d205bb436ec48af988bf04d15e7758d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -675.44541833397489,
        "Y": 576.60648743735021
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "fa6cf1a4ce9b401fa71d96ee23012e15",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -965.4348471695132,
        "Y": 633.54490047370268
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "f1fcb29af83c4a58acfdcad41e1ffe2a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3199.329827745184,
        "Y": 2366.483182625851
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "e0788c1a1ee1465c80bc69f81dc4000f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3508.2704751940969,
        "Y": 1993.267460904412
      },
      {
        "Name": "ReplaceByCondition",
        "ShowGeometry": true,
        "Id": "f9ffbc9011334ec99f11060276c926d8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1261.0153151336785,
        "Y": 87.535261298022078
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "44b8a92d8c4c4c30bb8435ae794c063c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -290.07140271650735,
        "Y": -152.91933731410319
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "6f692a377f58412c87ea82e0691fdd7b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -156.82696245154284,
        "Y": 228.85324503988033
      },
      {
        "Name": "Lists.ReplaceNull",
        "ShowGeometry": true,
        "Id": "b74ad932c7554aabb0eb2c52689500b5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -57.48425407000866,
        "Y": -155.68414490378967
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "287b91e5b4464999815031eec27f2dca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 269.04152346310514,
        "Y": -13.377808749544158
      },
      {
        "Name": "String from Object",
        "ShowGeometry": true,
        "Id": "85454642c6804a31b4d13c4e2e7e33e3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 231.96376961789838,
        "Y": -155.66591872623147
      },
      {
        "Name": "==",
        "ShowGeometry": true,
        "Id": "b9c5afd3757b44e18595517ce9e4c1fc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 536.028811123714,
        "Y": -147.67150747731984
      },
      {
        "Name": "If",
        "ShowGeometry": true,
        "Id": "7d58a2a431884ab99b07ab2c573ed24e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 927.06344607663368,
        "Y": -172.86738595060825
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "7d14ed8c1a554d20a39912be52f7fc54",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 720.09447487462228,
        "Y": -55.219923379839344
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "09edd692196b44f38806d9abb9463ed8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 742.63373935299637,
        "Y": 73.636940424022214
      },
      {
        "Name": ">",
        "ShowGeometry": true,
        "Id": "91c4bd9316bb41248e88f53de7e2299c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1001.6607315891169,
        "Y": 219.05997721922103
      },
      {
        "Name": "ReplaceByCondition",
        "ShowGeometry": true,
        "Id": "d2defe39224346a8b1dc0b3212ae2f5d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1771.2897372607836,
        "Y": -51.910741634853508
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "ec9b4a73582f4262a2cf617643ea37cf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1549.2712654466877,
        "Y": 116.50242513084197
      },
      {
        "Name": "==",
        "ShowGeometry": true,
        "Id": "af9c66d766bf4e758ea7bc86febdec52",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1527.3645341477688,
        "Y": 253.06047108645123
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "a6c1db8ab0c64d558f7dd47b14fb85ca",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6356.9749061221537,
        "Y": 717.84897065711937
      },
      {
        "Name": "ReplaceByCondition",
        "ShowGeometry": true,
        "Id": "43ebcc1303e24c6694fafa8f79915723",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2589.5959810660638,
        "Y": 807.94884618354968
      },
      {
        "Name": "If",
        "ShowGeometry": true,
        "Id": "98cbe793fdce4e3dbf0fa66ee81e279b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2005.5786807334894,
        "Y": 717.65551187666915
      },
      {
        "Name": ">=",
        "ShowGeometry": true,
        "Id": "74abb1408f204018a7baf391bbb3a612",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1700.0864107427533,
        "Y": 645.88384115115264
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "b028b4c08cb24f09849bbe5143e9ba28",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1567.1665624525351,
        "Y": 849.37176999381177
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "ec16049633884140a938ce985fc31974",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1733.3669581244187,
        "Y": 847.74947424287052
      },
      {
        "Name": "==",
        "ShowGeometry": true,
        "Id": "bcacdf7af0ad4daba48f971e64b5b896",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2304.1598955115765,
        "Y": 957.8791453572951
      },
      {
        "Name": "List.IsNotEmpty",
        "ShowGeometry": true,
        "Id": "f7d3100ed54a44a99d1708351def2170",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6406.9583745216423,
        "Y": 1561.4021476730325
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "f5430cb0678e416186a19f94435cd257",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7074.16543945414,
        "Y": 1558.77142563239
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "e4f8420427274ed69ba46064ad1a3e6e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7968.0657676274232,
        "Y": 2080.5005990468321
      },
      {
        "Name": "List.Clean",
        "ShowGeometry": true,
        "Id": "9353680870f243c78767ed048286cce8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8237.1012614206466,
        "Y": 2307.8013461634018
      },
      {
        "Name": "Boolean",
        "ShowGeometry": true,
        "Id": "c27f9d25097c4fa3855267481099b87f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7957.5979974119973,
        "Y": 2541.1525444008266
      },
      {
        "Name": "List.SetDifference",
        "ShowGeometry": true,
        "Id": "69fd94a220f34d97896dc55a51eb85ac",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9233.0068310877032,
        "Y": 1727.9215786586838
      },
      {
        "Name": "List.AllIndicesOf",
        "ShowGeometry": true,
        "Id": "4c948a677b25450aa3cdda2c6fdb460c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7657.7205271181319,
        "Y": 956.68950535036549
      },
      {
        "Name": "Lists.ReplaceEmptyList",
        "ShowGeometry": true,
        "Id": "d6888ae01b42471c9213b4b634d04023",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6942.1137963196561,
        "Y": 956.68950535036549
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "0d940976b5134f5ba5f3d08c3689613a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6784.0456109652123,
        "Y": 1180.703902323341
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "bee48d9d9252459a98be648c3908f3e0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7300.18065446937,
        "Y": 956.68950535036549
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "406065626dd54f1d8c48c62b5736c0d1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7894.8262294744554,
        "Y": 956.68950535036549
      },
      {
        "Name": "List.UniqueItems",
        "ShowGeometry": true,
        "Id": "e6685902035b40079a9fd30760f0bb6c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8246.8002632861753,
        "Y": 956.68950535036549
      },
      {
        "Name": "Element.ElementType",
        "ShowGeometry": true,
        "Id": "b6e4ab3b1c2b46e69d3273081a5b97a9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -521.31517111683149,
        "Y": 1290.1139754559888
      },
      {
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Id": "ca694938aac24c4686dff0a528270d8d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -141.85761503680169,
        "Y": 1258.1290984180459
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "7b2ec93465d74358a56354e71c1a442e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 19.862360583096915,
        "Y": 1716.1619990251509
      },
      {
        "Name": "FINAL LIST OF DOORS",
        "ShowGeometry": true,
        "Id": "7837290a84104cd48d09b151835b9cc7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 426.27110522742282,
        "Y": 1365.8679667689935
      },
      {
        "Name": "==",
        "ShowGeometry": true,
        "Id": "d2fd91123b6340c985920b3266686ccf",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 256.27955095025459,
        "Y": 1705.1579235476904
      },
      {
        "Name": "String from Object",
        "ShowGeometry": true,
        "Id": "a5b73b5737eb462594dc5b344388ee99",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14.170616697239325,
        "Y": 1571.9153519418228
      },
      {
        "Name": "Element.ElementType",
        "ShowGeometry": true,
        "Id": "e386559b80294ad19bf8e90b31fabd89",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -994.32779261726466,
        "Y": 487.61692571827109
      },
      {
        "Name": "Select Level to run checking",
        "ShowGeometry": true,
        "Id": "b020753d7af343c9a6c74206e7d4c2d4",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3286.4239604459581,
        "Y": 1431.8510694760903
      },
      {
        "Name": "Select Model Elements",
        "ShowGeometry": true,
        "Id": "3412d8fc15f044899e42d7b435939d0a",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -3272.1559894505158,
        "Y": 1145.11818116979
      },
      {
        "Name": "Element.ElementType",
        "ShowGeometry": true,
        "Id": "33539daa0cc9432b87892cd7b520c16f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2940.5803542778917,
        "Y": 1009.2279693712223
      },
      {
        "Name": "All Elements of Family Type",
        "ShowGeometry": true,
        "Id": "c419dbe9215048bd9ebc50cc344af58a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2648.8633186243223,
        "Y": 1076.074582110698
      },
      {
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Id": "8666932940844b18a1e823ef0e018ade",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2258.39585276882,
        "Y": 1082.69727555448
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "d8533f6762464f90bcb5b239e81fd06c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1365.46453176002,
        "Y": 1299.1287085249
      },
      {
        "Name": "String.Contains",
        "ShowGeometry": true,
        "Id": "356e8daed04540aa9c76576aefa513b1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1675.85366959764,
        "Y": 1377.54520255368
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "5c6f518a4bd542a0a2a8e3df2af8d5c5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2363.780238220575,
        "Y": 1286.846163207377
      },
      {
        "Name": "String from Object",
        "ShowGeometry": true,
        "Id": "70c0f7e1cfc24baaac48b4e6e2f686a3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2203.8664243091062,
        "Y": 1430.91797300096
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "ae5a7d65fe6349fb85e5483ca89689e3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -2378.04652991468,
        "Y": 896.837513738525
      },
      {
        "Name": "String from Object",
        "ShowGeometry": true,
        "Id": "f03ea94544c043c7b73748f1ad4ff0d9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1924.0844786071,
        "Y": 1270.98455112995
      },
      {
        "Name": "Watch 3D",
        "ShowGeometry": true,
        "Id": "793900bd9afe4cb3bf8a93468caa7675",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5414.92302324746,
        "Y": 2147.5285448621539
      },
      {
        "Name": "All Elements of Category",
        "ShowGeometry": false,
        "Id": "05814505842d4f50a034f853fab965cd",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4555.2945667184085,
        "Y": 1249.5825951230611
      },
      {
        "Name": "List.SetDifference",
        "ShowGeometry": true,
        "Id": "16f6fdf99dac4d0dba1b2d083d97305b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4685.07079009947,
        "Y": 872.05918262729131
      },
      {
        "Name": "List Create",
        "ShowGeometry": true,
        "Id": "50902ad4155545faaf84b52063b68d58",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4892.1446256366753,
        "Y": 1337.5986111267605
      },
      {
        "Name": "List.UniqueItems",
        "ShowGeometry": true,
        "Id": "ae334125c8744198a8278f365791f0da",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -788.01253495871742,
        "Y": 1253.7329552003919
      }
    ],
    "Annotations": [
      {
        "Id": "641484221bc641fca1311fc92bb7be9e",
        "Title": "Intersects doors with walls, furniture, casework, plumbing fixture and mechanical equipment",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "3fedfafbfb1d465f9020a850adbd6a18",
          "9804e8fe797b4c2993779e659cad720f",
          "80e6495a1189413c951cd46aa18223f8",
          "67ec1244bf36462c92353fada610bc9d",
          "4502f0bda12848519f119a43cf8c5a25",
          "a620062ad270457e970df1e5f7d5f346",
          "6212779b2d3d471683754cba361a8859",
          "3b036d2bd7ab44e3815911afefa7f621",
          "16f6fdf99dac4d0dba1b2d083d97305b",
          "05814505842d4f50a034f853fab965cd",
          "50902ad4155545faaf84b52063b68d58"
        ],
        "HasNestedGroups": false,
        "Left": 3940.6789190187465,
        "Top": 727.05918262729131,
        "Width": 1345.2358060196502,
        "Height": 976.88595622014475,
        "FontSize": 48.0,
        "InitialTop": 872.05918262729131,
        "InitialHeight": 832.88595622014475,
        "TextblockHeight": 135.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "134f3b61b6ef4ebe95049e31f1937216",
        "Title": "Runs intersection",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "92ce2968291b417ca6fb475ca77fb094"
        ],
        "HasNestedGroups": false,
        "Left": 5410.0017495404027,
        "Top": 1699.473019020827,
        "Width": 349.0,
        "Height": 235.0,
        "FontSize": 36.0,
        "InitialTop": 1772.473019020827,
        "InitialHeight": 145.0,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "a50f57eb3eae41a0917717f6ea374c63",
        "Title": "Gets results and clean lists",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "de7ff91196604cd882cff0a3b618a3bc",
          "a25ed8fcfd744ed19aa792167eb148f9",
          "9897f185371c4aaa94bdea157d960af7"
        ],
        "HasNestedGroups": false,
        "Left": 5796.1654775405514,
        "Top": 889.33870462623452,
        "Width": 876.14442237431012,
        "Height": 288.89421136433418,
        "FontSize": 36.0,
        "InitialTop": 962.33870462623452,
        "InitialHeight": 228.89421136433418,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "169f1b11c47340d9866c631f356cdb9d",
        "Title": "Gets coordinates and create vector following facing orientation",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "53a034a8acc54ff8bfb358166e175c67",
          "8bf33e353c224ba39ba52249e318cbca",
          "8bcfe50659294b71bb69e6ab31300f35",
          "72714044ba7343f397449953cf757c06"
        ],
        "HasNestedGroups": false,
        "Left": 1840.6161020583584,
        "Top": 1980.6641331627379,
        "Width": 1245.3386253990409,
        "Height": 357.73531093608972,
        "FontSize": 36.0,
        "InitialTop": 2053.6641331627379,
        "InitialHeight": 297.73531093608972,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "d8400386a5e94f43b4e51f37623b5fd1",
        "Title": "Filter #1: Filter elements by function (Interior)",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "8dfb289ae918432787b79c3335eb41a4",
          "f321d87c060749d9a24de343b1a9ea64",
          "c4cce4089db04f5f9982ce36ed74ee8e",
          "ca694938aac24c4686dff0a528270d8d",
          "7b2ec93465d74358a56354e71c1a442e",
          "a5b73b5737eb462594dc5b344388ee99",
          "d2fd91123b6340c985920b3266686ccf",
          "7837290a84104cd48d09b151835b9cc7"
        ],
        "HasNestedGroups": false,
        "Left": -151.85761503680169,
        "Top": 1185.1290984180459,
        "Width": 1487.267066729619,
        "Height": 682.02882512964447,
        "FontSize": 36.0,
        "InitialTop": 1258.1290984180459,
        "InitialHeight": 603.03290060710492,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "a05d766b675d4db7b77deb4f1463a01a",
        "Title": "Creates cuboid on endpoint of curves. move cuboid in the z axis",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "cf6fee8b856347f0a2343398b9bc133d",
          "93195678b7f641348734ba0bd77b7558",
          "992adbc0cce940878491a55d52b528e9",
          "1ff6a8e7d00d49abb94b4b16232c29cf",
          "0250a66823694bfeac6bdf47bbb8ec82",
          "1a59854309a94fe490328b8621f421ca",
          "4065b3e5417b43d0ad2e9119b031822f"
        ],
        "HasNestedGroups": false,
        "Left": 3782.3052498472689,
        "Top": 1824.6199526189114,
        "Width": 1391.8505933255046,
        "Height": 594.28180685807479,
        "FontSize": 36.0,
        "InitialTop": 1897.6199526189114,
        "InitialHeight": 534.28180685807479,
        "TextblockHeight": 63.0,
        "Background": "#FFE8F7AD"
      },
      {
        "Id": "13682f65506e4df99c669c0a243662ce",
        "Title": "Gets hand orientation and reverse the vector to direct it to the pull-side area",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "3b86f430b68b40edb9e93d723ba1e3f1",
          "6f2efe3b284441358be129b818fa6a28"
        ],
        "HasNestedGroups": false,
        "Left": 594.755393822556,
        "Top": 1973.1425264320392,
        "Width": 714.63433347230557,
        "Height": 248.0,
        "FontSize": 36.0,
        "InitialTop": 2089.1425264320392,
        "InitialHeight": 145.0,
        "TextblockHeight": 106.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "efdb61f49e8744a69d9640ad7f3f25b2",
        "Title": "Creates curve in revit just for check",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "6b6455ef9330434d86b7f2e52c8877a9",
          "5654bd104d68438ca6158b29dcd5a10f",
          "9752da1bafb4478e96626a1a8eb991b2",
          "85d29fd126d34f32b3661a8c8225e4a4"
        ],
        "HasNestedGroups": false,
        "Left": 3265.7432815539,
        "Top": 2748.6551082237797,
        "Width": 873.71120144099359,
        "Height": 518.01649809683749,
        "FontSize": 36.0,
        "InitialTop": 2821.6551082237797,
        "InitialHeight": 416.01649809683749,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "69887bbf519f491eb55ad9ccbf86d02b",
        "Title": "Sets value \"Review Intersection \" for parameter",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "40e1fe8152ce4ee2a0dd57f9b87f28f9",
          "58dd739d27f844a290324332a7a5439b",
          "3602395d266f4690babd67b6c4200ff2",
          "3c3b4f3eeaed4d328facda8bef6bdd0e",
          "e4f8420427274ed69ba46064ad1a3e6e",
          "9353680870f243c78767ed048286cce8"
        ],
        "HasNestedGroups": false,
        "Left": 7701.8694800783023,
        "Top": 1953.2348328787461,
        "Width": 1172.2326380669665,
        "Height": 516.56651328465568,
        "FontSize": 36.0,
        "InitialTop": 2026.2348328787461,
        "InitialHeight": 426.56651328465568,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "a5c37ab86198403d98f35d9909c8ebaf",
        "Title": "Sets value \"Clear \" for parameter",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "a4606ccc0ca24e9ea5df1afa21e69253",
          "6568fa45f7d5414187d3ba87a207b9da",
          "71c6b2eff1cf484796e16bcf7e1f3a7c"
        ],
        "HasNestedGroups": false,
        "Left": 9579.3361594834751,
        "Top": 1425.3791866921317,
        "Width": 576.04330010391277,
        "Height": 454.10149532182459,
        "FontSize": 36.0,
        "InitialTop": 1498.3791866921317,
        "InitialHeight": 394.10149532182459,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "cb911b28945e40b68a366ffeb3dccc66",
        "Title": "Gets wall thickness",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "8a75b90364414d6e9b59f893566eac8d",
          "d9aee2a32e674ffbb94f76a6aa1131e1",
          "ca934010851b4ddb8840f8ffcd1193a5",
          "7692866c73a74eb0ac34b6fcb5439527"
        ],
        "HasNestedGroups": false,
        "Left": 526.74098652129965,
        "Top": 514.22269409472938,
        "Width": 983.972577606562,
        "Height": 552.146388634992,
        "FontSize": 36.0,
        "InitialTop": 587.22269409472938,
        "InitialHeight": 492.14638863499204,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "f61a29150f44439ba6126419b9a29a0f",
        "Title": "Filters lists by intersection or clear",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "bbec49b874c94e1994b134dda75ac780",
          "f7d3100ed54a44a99d1708351def2170",
          "f5430cb0678e416186a19f94435cd257"
        ],
        "HasNestedGroups": false,
        "Left": 6396.9583745216423,
        "Top": 1478.9413224522684,
        "Width": 882.20706493249781,
        "Height": 241.83010318012157,
        "FontSize": 36.0,
        "InitialTop": 1551.9413224522684,
        "InitialHeight": 154.46082522076404,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "dcf4225a8ec14b958ec737df7d236b93",
        "Title": "Shows output",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "693eff5100084105b6f42a016c01001b",
          "f719640ca2574328bd3a9d797c66f8d0",
          "32e027a09bbb4198834f64a2d7ed6c17"
        ],
        "HasNestedGroups": false,
        "Left": 8885.784344479307,
        "Top": 1955.2077352102021,
        "Width": 1241.2971931295724,
        "Height": 209.00000000000023,
        "FontSize": 36.0,
        "InitialTop": 2028.2077352102021,
        "InitialHeight": 145.00000000000023,
        "TextblockHeight": 63.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "4c0ab672f9ae4b4495524b541bee493e",
        "Title": "Creates geometry ",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "22c827d29f7845198278637f9c149187"
        ],
        "HasNestedGroups": false,
        "Left": 1642.477201206882,
        "Top": 1189.3685980525668,
        "Width": 231.0,
        "Height": 248.0,
        "FontSize": 36.0,
        "InitialTop": 1305.3685980525668,
        "InitialHeight": 145.0,
        "TextblockHeight": 106.0,
        "Background": "#FFE8F7AD"
      },
      {
        "Id": "aa97e49b8f62472e88377c772f6b4e22",
        "Title": "INPUTS",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "0e127ffab3454c6199d8fb35fefd6613"
        ],
        "HasNestedGroups": false,
        "Left": -3613.5400595343244,
        "Top": 1138.8474206850797,
        "Width": 310.0,
        "Height": 137.0,
        "FontSize": 24.0,
        "InitialTop": 1197.8474206850797,
        "InitialHeight": 145.0,
        "TextblockHeight": 49.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "5d51a30544214f3d868d93a59cc2df30",
        "Title": "DYNAMO GEOMETRIES",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 24.995762289442155,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "bcde4ea7c6ea4ff7b0a7a617862f39a3"
        ],
        "HasNestedGroups": false,
        "Left": -3614.6646044461386,
        "Top": 1303.1151546104882,
        "Width": 313.99576228944215,
        "Height": 123.0,
        "FontSize": 24.0,
        "InitialTop": 1362.1151546104882,
        "InitialHeight": 145.0,
        "TextblockHeight": 49.0,
        "Background": "#FFE8F7AD"
      },
      {
        "Id": "9ec7fc5de7c34034afcbcc70f3b0d3d5",
        "Title": "PROCESSES",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "3db3586e81c649698a8141e223247553"
        ],
        "HasNestedGroups": false,
        "Left": -3613.5400595343244,
        "Top": 1462.4515057074366,
        "Width": 318.0,
        "Height": 137.0,
        "FontSize": 24.0,
        "InitialTop": 1521.4515057074366,
        "InitialHeight": 145.0,
        "TextblockHeight": 49.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "c00abd3c083746398be2e06fb0fb0b05",
        "Title": "OUTPUTS",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "a2a2eeca5e3a4ea7883ab0a2d07d9d48"
        ],
        "HasNestedGroups": false,
        "Left": -3613.5400595343244,
        "Top": 1625.9809428418027,
        "Width": 316.0,
        "Height": 137.0,
        "FontSize": 24.0,
        "InitialTop": 1684.9809428418027,
        "InitialHeight": 145.0,
        "TextblockHeight": 49.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "2c51c51338c94697829a93ddd5a5afff",
        "Title": "INSTRUCTIONS",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 10.450306165518327,
        "HeightAdjustment": 1.0380402335322287,
        "Nodes": [
          "f3e55c0df27341bd8c034ba753a25231"
        ],
        "HasNestedGroups": false,
        "Left": -3613.5400595343244,
        "Top": 1786.1954612101433,
        "Width": 316.45030616551833,
        "Height": 124.03804023353223,
        "FontSize": 24.0,
        "InitialTop": 1845.1954612101433,
        "InitialHeight": 145.0,
        "TextblockHeight": 49.0,
        "Background": "#FFB5B5B5"
      },
      {
        "Id": "cd217ec1a1f94e59835f6895f51d302e",
        "Title": "Gets doors width",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "8d205bb436ec48af988bf04d15e7758d",
          "fa6cf1a4ce9b401fa71d96ee23012e15",
          "e386559b80294ad19bf8e90b31fabd89"
        ],
        "HasNestedGroups": false,
        "Left": -1004.3277926172647,
        "Top": 414.61692571827109,
        "Width": 684.88237428328978,
        "Height": 350.92797475543159,
        "FontSize": 36.0,
        "InitialTop": 487.61692571827109,
        "InitialHeight": 290.92797475543159,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "27ef8e793d47487bb90bc3a515203985",
        "Title": "Replace empty lists with \"No intersection\"",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "d6888ae01b42471c9213b4b634d04023",
          "0d940976b5134f5ba5f3d08c3689613a",
          "bee48d9d9252459a98be648c3908f3e0"
        ],
        "HasNestedGroups": false,
        "Left": 6774.0456109652123,
        "Top": 883.68950535036549,
        "Width": 731.13504350415769,
        "Height": 429.01439697297553,
        "FontSize": 36.0,
        "InitialTop": 956.68950535036549,
        "InitialHeight": 369.01439697297553,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "4b7ac07f10dd48589d13d37113a4ef2e",
        "Title": "Get indices of intersecting items",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "4c948a677b25450aa3cdda2c6fdb460c",
          "406065626dd54f1d8c48c62b5736c0d1",
          "e6685902035b40079a9fd30760f0bb6c"
        ],
        "HasNestedGroups": false,
        "Left": 7647.7205271181319,
        "Top": 883.68950535036549,
        "Width": 809.07973616804338,
        "Height": 234.99999999999989,
        "FontSize": 36.0,
        "InitialTop": 956.68950535036549,
        "InitialHeight": 144.99999999999989,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "8172f0449d0d4a5c8901a393f8cdf598",
        "Title": "get original list of doors and subtract elements from list of intersecting items",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "69fd94a220f34d97896dc55a51eb85ac"
        ],
        "HasNestedGroups": false,
        "Left": 9223.0068310877032,
        "Top": 1395.9215786586838,
        "Width": 225.0,
        "Height": 494.0,
        "FontSize": 36.0,
        "InitialTop": 1727.9215786586838,
        "InitialHeight": 145.0,
        "TextblockHeight": 322.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "f2febef3bb4f4a4ab12cc16a84de2668",
        "Title": "Retrieve element types",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "d6a016fbc77c481692302676fc117265",
          "b6e4ab3b1c2b46e69d3273081a5b97a9",
          "ae334125c8744198a8278f365791f0da"
        ],
        "HasNestedGroups": false,
        "Left": -1043.6925048135345,
        "Top": 1180.7329552003919,
        "Width": 784.377333696703,
        "Height": 291.73715629180606,
        "FontSize": 36.0,
        "InitialTop": 1253.7329552003919,
        "InitialHeight": 201.73715629180606,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "47320f4245544783b73d4799ae030d2f",
        "Title": "Adds value for null results of wall width",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "43ebcc1303e24c6694fafa8f79915723",
          "98cbe793fdce4e3dbf0fa66ee81e279b",
          "74abb1408f204018a7baf391bbb3a612",
          "ec16049633884140a938ce985fc31974",
          "bcacdf7af0ad4daba48f971e64b5b896",
          "b028b4c08cb24f09849bbe5143e9ba28"
        ],
        "HasNestedGroups": false,
        "Left": 1557.1665624525351,
        "Top": 572.88384115115264,
        "Width": 1265.4294186135287,
        "Height": 546.99530420614246,
        "FontSize": 36.0,
        "InitialTop": 645.88384115115264,
        "InitialHeight": 456.99530420614246,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "45576911e2114bf0af7aef0ae7d191f1",
        "Title": "Adds value for null results of door width",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "f9ffbc9011334ec99f11060276c926d8",
          "44b8a92d8c4c4c30bb8435ae794c063c",
          "6f692a377f58412c87ea82e0691fdd7b",
          "b74ad932c7554aabb0eb2c52689500b5",
          "287b91e5b4464999815031eec27f2dca",
          "85454642c6804a31b4d13c4e2e7e33e3",
          "b9c5afd3757b44e18595517ce9e4c1fc",
          "7d58a2a431884ab99b07ab2c573ed24e",
          "7d14ed8c1a554d20a39912be52f7fc54",
          "09edd692196b44f38806d9abb9463ed8",
          "91c4bd9316bb41248e88f53de7e2299c",
          "d2defe39224346a8b1dc0b3212ae2f5d",
          "ec9b4a73582f4262a2cf617643ea37cf",
          "af9c66d766bf4e758ea7bc86febdec52"
        ],
        "HasNestedGroups": false,
        "Left": -300.07140271650735,
        "Top": -245.86738595060825,
        "Width": 2304.3611399772908,
        "Height": 660.92785703705954,
        "FontSize": 36.0,
        "InitialTop": -172.86738595060825,
        "InitialHeight": 570.92785703705954,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "c88fb5df9ae646f69756193a71cedaf7",
        "Title": "Selects model elements and the level",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "3412d8fc15f044899e42d7b435939d0a",
          "b020753d7af343c9a6c74206e7d4c2d4"
        ],
        "HasNestedGroups": false,
        "Left": -3296.4239604459581,
        "Top": 985.11818116979,
        "Width": 303.0,
        "Height": 578.73288830630031,
        "FontSize": 36.0,
        "InitialTop": 1145.11818116979,
        "InitialHeight": 431.73288830630031,
        "TextblockHeight": 150.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "6426d8a91b774172b2774e9982c7e7f5",
        "Title": "Filters by type and levels",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "33539daa0cc9432b87892cd7b520c16f",
          "c419dbe9215048bd9ebc50cc344af58a",
          "8666932940844b18a1e823ef0e018ade",
          "d8533f6762464f90bcb5b239e81fd06c",
          "356e8daed04540aa9c76576aefa513b1",
          "5c6f518a4bd542a0a2a8e3df2af8d5c5",
          "70c0f7e1cfc24baaac48b4e6e2f686a3",
          "ae5a7d65fe6349fb85e5483ca89689e3",
          "f03ea94544c043c7b73748f1ad4ff0d9"
        ],
        "HasNestedGroups": false,
        "Left": -2950.5803542778917,
        "Top": 823.837513738525,
        "Width": 1830.1158225178717,
        "Height": 750.70768881515494,
        "FontSize": 36.0,
        "InitialTop": 896.837513738525,
        "InitialHeight": 679.080459262435,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "5dbd48448fcd4eabb3aaf2c83c9825fb",
        "Title": "Selects views",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "2d8917e8ceca4bd4bc34b65d69deb2df"
        ],
        "HasNestedGroups": false,
        "Left": 2355.9295985806643,
        "Top": 2765.4465275545467,
        "Width": 807.0,
        "Height": 205.0,
        "FontSize": 36.0,
        "InitialTop": 2838.4465275545467,
        "InitialHeight": 162.0,
        "TextblockHeight": 63.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "ba58f977c2194348b361607a7c593585",
        "Title": "Door Clearance Checking",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -3608.3069283297064,
        "Top": 942.06679301903478,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "07ed5fadb5454db2870ecf569ac27c33",
        "Title": "Information:\nDate: Jun-2024\nDeveloped By: Ingrid Freire\nas a part of her Master's dissertation\n\nEuropean Master in Building Information Modelling\nUniversidade do Minho",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -3610.818759900952,
        "Top": 986.9124277620183,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "0e127ffab3454c6199d8fb35fefd6613",
        "Title": "These groups of nodes will represent information that should be manually or automatically added in order to run the algorithm",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -3603.5400595343244,
        "Top": 1205.8474206850797,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "bcde4ea7c6ea4ff7b0a7a617862f39a3",
        "Title": "These groups will contain nodes that generate geometries to be interpreted by Dynamo ",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -3604.6646044461386,
        "Top": 1370.1151546104882,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "3db3586e81c649698a8141e223247553",
        "Title": "These groups of nodes will represent actions such as retrieve information, perform intersections, create lists, flatten lists, etc.",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -3603.5400595343244,
        "Top": 1529.4515057074366,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "a2a2eeca5e3a4ea7883ab0a2d07d9d48",
        "Title": "These groups will include nodes that will show the results generated. These outputs will be also shown in Dynamo Player",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -3603.5400595343244,
        "Top": 1692.9809428418027,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "f3e55c0df27341bd8c034ba753a25231",
        "Title": "These nodes will indicate important instruction to adjust elements in the Dynamo Scripts",
        "DescriptionText": null,
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [],
        "HasNestedGroups": false,
        "Left": -3603.5400595343244,
        "Top": 1853.1954612101433,
        "Width": 0.0,
        "Height": 0.0,
        "FontSize": 36.0,
        "InitialTop": 0.0,
        "InitialHeight": 0.0,
        "TextblockHeight": 0.0,
        "Background": "#FFC1D676"
      }
    ],
    "X": -58.510875170545319,
    "Y": 198.72714999460158,
    "Zoom": 0.0903046781358281
  }
}