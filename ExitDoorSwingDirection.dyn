{
  "Uuid": "4458bc97-6c2a-463e-a1c1-73fa3b66eaad",
  "IsCustomNode": false,
  "Description": "",
  "Name": "ExitDoorSwingDirection",
  "ElementResolver": {
    "ResolutionMap": {}
  },
  "Inputs": [
    {
      "Id": "f4bbf1ee69d7481d89a11c41d162d325",
      "Name": "Select Phase",
      "Type": "selection",
      "Type2": "dropdownSelection",
      "Value": "",
      "Description": "Select an existing Revit Phase from the active document.",
      "SelectedIndex": -1
    }
  ],
  "Outputs": [
    {
      "Id": "0231d7056d0d417ea2f1bb3766a762f9",
      "Name": "Results",
      "Type": "unknown",
      "InitialValue": "",
      "Description": "Visualize the node's output"
    }
  ],
  "Nodes": [
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 172,
      "SelectedString": "OST_Doors",
      "NodeType": "ExtensionNode",
      "Id": "3fe70a45480a4d1eac8dfde5728097b3",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d4247c3cbfea49c9a6648ab5ef174195",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "57155cb9ac694e88885c913632217735",
      "Inputs": [
        {
          "Id": "27f46ebf392545d68c6b54e94449367f",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4633d2b933d8442cac18c9a900000851",
          "Name": "Elements",
          "Description": "An element class.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "22afc586-3029-4a8c-ade8-183c160acd2e",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "2ae288d331af48189e12d40c123806fc",
      "Inputs": [
        {
          "Id": "50899b33ec73437298a416b98e6364d1",
          "Name": "door",
          "Description": "FamilyInstance[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9f1f44882c7840f3998bf1794ef50507",
          "Name": "phase",
          "Description": " If no phase is specified, the node will use the last phase in the project\n\nvar\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9e7ac1739ee8435ab22de1f04b0e36e1",
          "Name": "fromRoom",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8c2ad7d4a727465fbdb8eb85f48e7f9b",
          "Name": "toRoom",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e7324a25716446f5a1de5b9a4ac833c0",
          "Name": "roomCount",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets the rooms that are connected by a given door"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Room.Number",
      "Id": "cbcf853a6af84a03abe4cde87d8d7400",
      "Inputs": [
        {
          "Id": "d448d979df394d108c7536b6fe3876bc",
          "Name": "room",
          "Description": "Revit.Elements.Room",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "95fd5a3e1a1946cba3f8a73c892f7ad0",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get room number\n\nRoom.Number: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Room.Number",
      "Id": "4b0f70dd7e3d46669c00e7e32c174b27",
      "Inputs": [
        {
          "Id": "b93cb0d4c65d44d3b2716b66fb133a21",
          "Name": "room",
          "Description": "Revit.Elements.Room",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "467a60b454e8491da9b3c6619fdfc9c0",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get room number\n\nRoom.Number: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "2dd1e892-6338-4fba-8345-f7a9f418bb57",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "d63877b1c2664147a24cf415109f4d4c",
      "Inputs": [
        {
          "Id": "f66d7b3c8ef24483b2f9061302fcc6d8",
          "Name": "seq",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e728d902e4e94424b8d190ff92782132",
          "Name": "replacement",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a748a8263c6b40b19de917f2e36d9040",
          "Name": "seq",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all null values within a given list with a substitute"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "2dd1e892-6338-4fba-8345-f7a9f418bb57",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "d4429193aa3641bea1dfd43457db0a1d",
      "Inputs": [
        {
          "Id": "8b918074e78341ad826502427d79c950",
          "Name": "seq",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3a659fee6d334a24b8082cc3c986ed87",
          "Name": "replacement",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "52d3b5e048784b8189cb9e4d05ae3d03",
          "Name": "seq",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces all null values within a given list with a substitute"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Exterior",
      "Id": "9c0fa99154414447b7082f56290e3d1a",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "222338049bbd4136b050691ddb41e835",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "c2ec2844c704479fb42503b627a8cb4b",
      "Inputs": [
        {
          "Id": "178d2aa10ef64ee09a929e3f9227ea91",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e68ffe93c2db4824943c40c1350fab6b",
          "Name": "parameterName",
          "Description": "The name of the parameter to set.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "494f3d70aac54512a08297f0308c9a97",
          "Name": "value",
          "Description": "The value.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "02897000b11c4022849375810b3f8458",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Set one of the element's parameters.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Doors_From",
      "Id": "b569fd489abe47fc887ff7f32efc36e1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8a1282c48df3466aa0d17229c204fddf",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "fb496eab73b0455e97575c9c7a3c1c2c",
      "Inputs": [
        {
          "Id": "8ca5cac064564b1f8aba4b8eb5391987",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "aa66d0f576fd43279da1234a115b553b",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0bf95dca1ec343d59303d9596a1283d9",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6f5622dae0254fe1a348bf06ea40a3bc",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "eff2f5ba9d1e450a976ab64b14314945",
      "Inputs": [
        {
          "Id": "d25f77bdbb0f406daa96b5424da81ffd",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "38e8b6f71992405990e593c437fb7f91",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "468f58fca4394b8f8bc10ebf8ad63191",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "1506e5194f9d4dfdb726a1f06b48d5be",
      "Inputs": [
        {
          "Id": "90a6622f985a4664aebc87cf53991a0a",
          "Name": "object",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a1cf4389bdca4cb18d6942583c043c65",
          "Name": "string",
          "Description": "String representation of the object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "7c6c03d7-a142-4e96-9150-6b3846efa3c2",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "8cbe0ba31d0145f689ce0a78ca1048c8",
      "Inputs": [
        {
          "Id": "415d8f52a17b42ba9a31381f0aa2e7b9",
          "Name": "seq",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0121e9c18b1b47458a4836dc5d825f7e",
          "Name": "indices",
          "Description": "int[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8e442269e17b45f59e7f61035abbbb33",
          "Name": "replacement",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "574ae0a4304240a4bbc741e374a685b0",
          "Name": "seq",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces the item at a given index of a list by another item. Unlike the OOTB node, it can replace items at multiple indeces."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "(EXTERIOR)",
      "Id": "837e2925763c42238fe427bdce4a7921",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5946ae8e5310457a819c5724805d82f9",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "b4bd55a5ecd5426b9161f54c2f6ec5a7",
      "Inputs": [
        {
          "Id": "d8e8ba050f3b400ab17a01af232e39cf",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "483cf4a4a2e544438272641cfe2c6476",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.OfRepeatedItem@var[]..[],int",
      "Id": "f6f5b391aa0843088d8e83b23bdf7351",
      "Inputs": [
        {
          "Id": "c8df329825ff4ae394dd0c5528793143",
          "Name": "item",
          "Description": "The item to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "652c833b7e5145da984b78d2d4e7d73c",
          "Name": "amount",
          "Description": "The number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "41b23b7b322546c69f3b1ff677777891",
          "Name": "list",
          "Description": "List of repeated items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a list containing the given item the given number of times.\n\nList.OfRepeatedItem (item: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Combine, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "38e1acc76f764c41827fefaf610bd2a9",
      "Inputs": [
        {
          "Id": "a9b62e822daa4d0ca11743cbe7e056d5",
          "Name": "combineFunction",
          "Description": "Function to use as combinator",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1b8050c3c97947efb223b8835eed74a1",
          "Name": "list0",
          "Description": "List #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a89ca1ec9922423d88039a833f8ba7fc",
          "Name": "list1",
          "Description": "List #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0636b13ee9234038ae3f957dd588bb8d",
          "Name": "list",
          "Description": "Combined lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Applies a combinator to each element in two sequences"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "88125758082e43b48e4342558c0abb37",
      "Inputs": [
        {
          "Id": "2d7493eafea44976b98870b40c7886fb",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a43d9a1e56da4d82bb4ccbfe8999331c",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e9fcff1af0b94c749f16cdb73aea6911",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Concat@string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "49a1b687c6854b75a308c0c6961c6de6",
      "Inputs": [
        {
          "Id": "6b8dc30e3f0041b4b977711ba0e9aeb3",
          "Name": "string0",
          "Description": "List of strings to concatenate.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b5b64ecaa4704629acdf55ee91c7e3ea",
          "Name": "string",
          "Description": "String made from list of strings.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string.\n\nString.Concat (strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "3db30438a0f74abd8d54248889bb0a1d",
      "Inputs": [
        {
          "Id": "2d15e7dda5da4146b396e2f724119153",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9e5fd037efdd47e3a82e0c1f06291b56",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7f4f7d05a92e4990a5edd1b01d67d145",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "DSRevitNodesUI.RevitPhases, DSRevitNodesUI",
      "SelectedIndex": -1,
      "SelectedString": "",
      "NodeType": "ExtensionNode",
      "Id": "f4bbf1ee69d7481d89a11c41d162d325",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "935c1b966c074fb792ec53d0a147756d",
          "Name": "Phase",
          "Description": "The selected Phase",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Select an existing Revit Phase from the active document."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "f28b8d83-e5aa-4788-915c-984845cc9a63",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "9a5b8e52ba144e62bf63fc91daeee1c8",
      "Inputs": [
        {
          "Id": "26d328aaa8cd49f8b6785ebaa8ad8b12",
          "Name": "familyType",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "82856a662ee044bc8736f970c198496d",
          "Name": "function",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the Function property of a given family type (if it has that property)"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.ElementType",
      "Id": "5bb8293393ba46929ccd8c5ed7ba7c55",
      "Inputs": [
        {
          "Id": "eaa2cbe6dd2c4f20b412292c7cce060f",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7a08a4ff0dfd4640a3993da20db46334",
          "Name": "ElementType",
          "Description": "Element Type or Null.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the ElementType for this Element. Returns null if the Element cannot have an ElementType assigned.\n\nElement.ElementType: ElementType"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "430d594e2300437daa9a2bc0ec04606f",
      "Inputs": [
        {
          "Id": "ba9d4c746679464ca2057e5e0ef08ad9",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a02899f1cde5430183ea412803b3dbf1",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "85597ba4f1fa43b58f02c596f63e57cb",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "14afe35224494c5a9df645a2c99da2d1",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "009b854ebb614efc969a87a378f88be7",
      "Inputs": [
        {
          "Id": "6389ff78f39c49f38cec6e67d6393a80",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e821dc01a03243f5896a34be00fcb964",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d2ea64e9445440edb1f968271037b643",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Exterior\";",
      "Id": "1d0324bbfe2a43499c8bd580b1aadbfe",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ab05f4b02c5644058b383617be470575",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "afa071e8c85f4601b9925c7187070e55",
      "Inputs": [
        {
          "Id": "5bc9b6b6114c4b1ab80dfefbc208d9a1",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9f3fc743fa224a8faae32cefb380836a",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "a93b99e3f0564d9fb3b34ab64965fe2a",
      "Inputs": [
        {
          "Id": "84428dd9bd9a4f1dbdfeb5a269de64a8",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0119f0ed168b41f2a8d74c2f1ca39c99",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c5574d0d4d2347e6a71bce061d19e893",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "f0faf985e05845a688c29604c4f87028",
      "Inputs": [
        {
          "Id": "861c95a01ef644c98684f122265360fb",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c5c5bbfad2fa42a1bebe8de95d487afd",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "57483e2025504febbf19b8c9cc1649d2",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "202a1bd34e0b40efae929024baff4d42",
      "Inputs": [
        {
          "Id": "a5f73d13df8647809c9798907f6c0b01",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "fd6a1d4d32a442d9955e0330f5a02655",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": true
        }
      ],
      "Outputs": [
        {
          "Id": "3428dfbe56e64bc5abb4a2205a5588cf",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "324b7eb3d93d4934a1dae6b5612cb83f",
      "Inputs": [
        {
          "Id": "59e592447768412c91aac5e327051e50",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4256f539b2b246558945324475bd786f",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "35cffe34da114ded8a15a710ba8661b5",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "047b5cd5dd8d4a4eaadd0046910031c4",
      "Inputs": [
        {
          "Id": "94419ef958444b399df1199c22aa0c1e",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c204ccd596c546578200b3d031a4fa3b",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e616eaed79eb451889774ca8101a65a3",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2c76d8719e844bddbe5007433fbebf87",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "7fdce0bb85af4f25bafe9b0a2e4d14df",
      "Inputs": [
        {
          "Id": "91b2396305834542b2fa13cb3b947672",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "70959967fc4e49789606f20f21fbd29b",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "2056c511db66497f8db9d0cb46d52952",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "99be1e257c3b4e2f95c8be43df33d806",
      "Inputs": [
        {
          "Id": "bb11502f465f4c3d980704183239a206",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "04c3aed1bd524a51b7be5f5601c4971a",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "51d5413f95db48e990ea303f9bab5162",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AllIndicesOf@var[]..[],var",
      "Id": "10704a9c99114420922e9e0cf118ae75",
      "Inputs": [
        {
          "Id": "0dc918d5cffd498e8fc5a0aa2e74901a",
          "Name": "list",
          "Description": "List to search in. If this argument is null, an empty list is returned.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        },
        {
          "Id": "92a67a134fa148e48d69e352f1ebd99d",
          "Name": "item",
          "Description": "Item to look for.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": true,
          "KeepListStructure": true
        }
      ],
      "Outputs": [
        {
          "Id": "8ee4a9929a5b465081cbc9e8aa10e998",
          "Name": "indices",
          "Description": "A list of zero-based indices of all occurrences of the item if found, or an empty list if the item does not exist in the list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Given an item, returns the zero-based indices of all its occurrences in the list. If the item cannot be found, an empty list is returned.\n\nList.AllIndicesOf (list: var[]..[], item: var): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "fc2eb322b9b44763a0a06c856471870d",
      "Inputs": [
        {
          "Id": "b1fba2a4ffb148ffbe76b9a25536f68c",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "24ac238a00844c579f142422c4bb2f5b",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cdda0f8047c946d78cf05dd3103cde7b",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "9d3a372e0e454fa38402e06b97ff81c7",
      "Inputs": [
        {
          "Id": "eadd93a211a740b683395dfdb4760af8",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "15fc3af7ec764365836883cc3cc5c52d",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ea90120199cb47fcbb525a3605f1b4cf",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.FromObject, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "bcec851601c341c686ac3c9fe754dbec",
      "Inputs": [
        {
          "Id": "ce72370cae604c29a882ddc1e987a6a2",
          "Name": "object",
          "Description": "Object to be serialized",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "60508916d4094c59b3e23a77b8e20b98",
          "Name": "string",
          "Description": "String representation of the object",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Convert an object to a string representation."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "(EXTERIOR)",
      "Id": "76681aeab47a4def930f8f32837c78d0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "34e7ba9003f84c55b477e07b1c984aa0",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "ac68c496d9b0487d9c4cfb7cf4c98e40",
      "Inputs": [
        {
          "Id": "5e6fd78022354bc0aefdd3a6afe77583",
          "Name": "list",
          "Description": "List to get the item count of.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d966eed3107640619de336a76065aff5",
          "Name": "int",
          "Description": "List length.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the number of items stored in the given list.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.OfRepeatedItem@var[]..[],int",
      "Id": "03d8478c987b4401a8369a54dc090a24",
      "Inputs": [
        {
          "Id": "8a7b58c16aad472691a3ecd7f5bb98b1",
          "Name": "item",
          "Description": "The item to repeat.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "70e12c3aed384c0596fbab2bc9719f5a",
          "Name": "amount",
          "Description": "The number of times to repeat.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8648e6abfd6744cab7c32f28ade0b1f2",
          "Name": "list",
          "Description": "List of repeated items.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a list containing the given item the given number of times.\n\nList.OfRepeatedItem (item: var[]..[], amount: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "0931360cb80b42518052ccdc32e2bc51",
      "Inputs": [
        {
          "Id": "34c83f116f2a43f1a213ffed9d26e82d",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5e778344c3b443969ac7e3fe7ed945a5",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fb4ec924313a459d9b923319b3d19e05",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Combine, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "da7941c38a684b9a9eb99db7e789f315",
      "Inputs": [
        {
          "Id": "d42386fa8c5042f7928607ff46169436",
          "Name": "combineFunction",
          "Description": "Function to use as combinator",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2c6d3e5744b946578a1dd3b48bf08c03",
          "Name": "list0",
          "Description": "List #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "706b6721002f43c3a675461cb722d0ce",
          "Name": "list1",
          "Description": "List #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "114bffd1f31f488982839817b104f5b7",
          "Name": "list",
          "Description": "Combined lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Applies a combinator to each element in two sequences"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.String.Concat@string[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "936919a859f949168835dfd8a4b3c0ba",
      "Inputs": [
        {
          "Id": "766a261cb13349d098f99a9fdbdf3545",
          "Name": "string0",
          "Description": "List of strings to concatenate.\n\nstring[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "454ffc6810364ce08b9ba10ed18a80fa",
          "Name": "string",
          "Description": "String made from list of strings.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Concatenates multiple strings into a single string.\n\nString.Concat (strings: string[]): string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "44264f0c4aed4cd0ad629a72fb3002be",
      "Inputs": [
        {
          "Id": "014cb2913de546cc93de9eb6cc40de53",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "91c5cc94dbcb4e55ba43ac02353d3d6c",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "83e5485b04454b6391e2610fc5660a23",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "7c6c03d7-a142-4e96-9150-6b3846efa3c2",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "4716e65323764f71b7f10200958680e0",
      "Inputs": [
        {
          "Id": "d5e945d029434b639bce049f0250adb6",
          "Name": "seq",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a7acf24194b2474c978a7630dea4af00",
          "Name": "indices",
          "Description": "int[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e96ccc54d16844af94f7ed8a855d1bf4",
          "Name": "replacement",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8cb6f39671cf412da58916f16e7f0934",
          "Name": "seq",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Replaces the item at a given index of a list by another item. Unlike the OOTB node, it can replace items at multiple indeces."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "Doors_To",
      "Id": "1955679e8a614c51b695feba658ff407",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "db79e75f7387414ea99a5664c9887b1d",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "2fb875134d73434a8e07a5b318e17538",
      "Inputs": [
        {
          "Id": "696106552ab843b3a014bb376790642f",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "04527145dd8f4288a560f41703d18c16",
          "Name": "parameterName",
          "Description": "The name of the parameter to set.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "e6ea0d2368ba4005b1ba7cbe84b8e268",
          "Name": "value",
          "Description": "The value.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "58040e8632c34b47b42dfe7844561082",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Set one of the element's parameters.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "f040dc9489bb472c88ef7bcadab680ec",
      "Inputs": [
        {
          "Id": "ba1a3f40f92b4505a9b9aedd80039667",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b86936f1ec804fc0b432e20d9ea1ed17",
          "Name": "parameterName",
          "Description": "The name of the parameter to set.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bdfe71330c104b898e7375e966dd42b1",
          "Name": "value",
          "Description": "The value.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7f5578bf49a0421498f27052dbf791fd",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Set one of the element's parameters.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Transpose@var[]..[]",
      "Id": "b72135b26f564087b7b7c337775f0ca4",
      "Inputs": [
        {
          "Id": "cb073c27a2574a14948226fd30094f1e",
          "Name": "lists",
          "Description": "List of lists to be transposed\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "8179c2f8f84d4c059713d7c63ca2383d",
          "Name": "lists",
          "Description": "List of transposed lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Swaps rows and columns in a list of lists. If there are some rows that are shorter than others, null values are inserted as place holders in the resultant array such that it is always rectangular.\n\nList.Transpose (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.AnyTrue@var[]..[]",
      "Id": "211f694e40f54fdfa06db9be525d5eb8",
      "Inputs": [
        {
          "Id": "2ca69d0878244cb2a8687f161b888bfe",
          "Name": "list",
          "Description": "List to be checked on whether any item is true.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cd82e4eef51e4b4d9752a995cc5949d9",
          "Name": "bool",
          "Description": "Whether any item is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if any item in the given list is a boolean and has a true value.\n\nList.AnyTrue (list: var[]..[]): bool"
    },
    {
      "ConcreteType": "DSRevitNodesUI.ElementsOfCategory, DSRevitNodesUI",
      "NodeType": "ExtensionNode",
      "Id": "0442d98c13404a4f9f3ad8dc86ddd235",
      "Inputs": [
        {
          "Id": "d608dc07586d4f0e81c03975d47a1228",
          "Name": "Category",
          "Description": "The Category",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "adafdf978ddb43729daafba7c358123e",
          "Name": "Elements",
          "Description": "An element class.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Get all elements of the specified category from the model."
    },
    {
      "ConcreteType": "DSRevitNodesUI.Categories, DSRevitNodesUI",
      "SelectedIndex": 497,
      "SelectedString": "OST_Rooms",
      "NodeType": "ExtensionNode",
      "Id": "d8f94e6b19c14a13a92eb6cbebeb066e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "35db672fec7c42248ab989ef7d2739da",
          "Name": "Category",
          "Description": "The selected Category.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All built-in categories."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.EndPoint",
      "Id": "e2b249a59d27406097d06b46f9f2adb8",
      "Inputs": [
        {
          "Id": "7c76393f85864b47a996f407986a3b2e",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "f4c151661c46490aaa05386dd615c7a2",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the end Point along the Curve\n\nCurve.EndPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Room.IsInsideRoom@Autodesk.DesignScript.Geometry.Point",
      "Id": "f69c027530634a93b26c0053ae472fd1",
      "Inputs": [
        {
          "Id": "07de995838a341f89aae5b1246d502fd",
          "Name": "room",
          "Description": "Revit.Elements.Room",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c10f0b734525405993fd2a8bd94e72f5",
          "Name": "point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4571e80f5905484c92a53cdfb8b2eefb",
          "Name": "bool",
          "Description": "bool",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "CrossProduct",
      "Description": "Check if a point is inside of a room\n\nRoom.IsInsideRoom (point: Point): bool"
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import sys\r\nimport clr\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nitems = UnwrapElement(IN[0]) #IN[0] \r\ngeoms = []\r\n\r\nfor item in items:\r\n\ttr = item.GetTransform()\r\n\toriginft = Vector.ByCoordinates( tr.Origin.X, tr.Origin.Y, tr.Origin.Z)\r\n\torigin = Vector.AsPoint (Vector.Scale(originft, 1))\r\n\tx = Vector.ByCoordinates( tr.BasisX.X, tr.BasisX.Y, tr.BasisX.Z)\r\n\ty = Vector.ByCoordinates( tr.BasisY.X, tr.BasisY.Y, tr.BasisY.Z)\r\n\tz =\tVector.ByCoordinates( tr.BasisZ.X, tr.BasisZ.Y, tr.BasisZ.Z)\r\n\r\n\tgeo = CoordinateSystem.ByOriginVectors(origin, x, y, z)\r\n\tgeoms.append(geo)\r\n\r\n# Assign your output to the OUT variable.\r\nOUT = geoms",
      "Engine": "CPython3",
      "EngineName": "CPython3",
      "VariableInputPorts": true,
      "Id": "730caf75ffb14fcd9b523d71eb0ae328",
      "Inputs": [
        {
          "Id": "656f755284bf4568b7eab42eaeb8af3c",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "318c23e6a01d438cb3b8e3d8fd1e7318",
          "Name": "OUT",
          "Description": "Result of the python script",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Runs an embedded Python script."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "ExitDirection",
      "Id": "009504a239ca4533b7f02ac52b66f026",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b80101b99f65458988bda21829c35480",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "2a1691ddc38d48ecb156924a36cc9740",
      "Inputs": [
        {
          "Id": "eab7989e066740b4b6e5dabdff1d1d3c",
          "Name": "test",
          "Description": "Boolean test",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "8cf02e9553ee43bcba6d20763ed8e018",
          "Name": "true",
          "Description": "Returned if test is true",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "07086687661e4a0dbea8dacb27a6ff65",
          "Name": "false",
          "Description": "Returned if test is false",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "611596b8ed0143beb516aa525c02c2ff",
          "Name": "result",
          "Description": "Result block produced",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns the result of either True or False input depending on what boolean value is toggled in the test input. Supports recursion which requires that only a single branch be executed. It's critical that that both True and False branches are isolated and do not interact with each other!"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Revise Swing Direction\";\n\"PASS\";",
      "Id": "e3084fea5610404ea79c5b73f13c30b1",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "fdd6a5ec3e1d4a1a85da89633f6491fb",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "da0862b9630448f39dce29a43f9f3a21",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.FamilyInstance.FacingOrientation",
      "Id": "38dfc02e28e5439999382285426e527a",
      "Inputs": [
        {
          "Id": "fc160d6e3b46457ebc5a3f1e71a38161",
          "Name": "familyInstance",
          "Description": "Revit.Elements.FamilyInstance",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1c29ef86e14e444b9e9f4da96dcc8fb7",
          "Name": "Vector",
          "Description": "Vector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets the FacingOrientation of the family instance\n\nFamilyInstance.FacingOrientation: Vector"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.DetailCurve.ByCurve@Revit.Elements.Views.View,Autodesk.DesignScript.Geometry.Curve",
      "Id": "98e6146425c04b1c9e769f5f4441cf79",
      "Inputs": [
        {
          "Id": "79d857e23c484aefaf9606de19503b66",
          "Name": "view",
          "Description": "View to place the detail curve on\n\nView",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "76171fcedb444b09a1bfb117fb19b3a6",
          "Name": "curve",
          "Description": "Curve to create detailcurve from\n\nCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4e1f9bb5834a4940a9c4398773b0cfd9",
          "Name": "DetailCurve",
          "Description": "DetailCurve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Construct a Revit DetailCurve element from a curve\n\nDetailCurve.ByCurve (view: View, curve: Curve): DetailCurve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.CoordinateSystem.Origin",
      "Id": "0b2d107116f74431a3f996f1905b002e",
      "Inputs": [
        {
          "Id": "cd54fc9317924489b16ebbe41906dfff",
          "Name": "coordinateSystem",
          "Description": "Autodesk.DesignScript.Geometry.CoordinateSystem",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1caf0b1eaacb4329b6ac63e1befe2a7c",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Creates a Point representing the CoordinateSystem origin.\n\nCoordinateSystem.Origin: Point"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 2.0,
      "Id": "78e2f0bd882645118c17b48eebce14d6",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "de24f0f2665f45a7be8db467819a8a2f",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Line.ByStartPointDirectionLength@Autodesk.DesignScript.Geometry.Point,Autodesk.DesignScript.Geometry.Vector,double",
      "Id": "f8b86e539c794c04a2c9f1c7ff237789",
      "Inputs": [
        {
          "Id": "f58f7cb59a2843e2af4d313b1a533899",
          "Name": "startPoint",
          "Description": "Line start point\n\nPoint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "72cde8da4ef64fa697aa4ee11a23e7c7",
          "Name": "direction",
          "Description": "Direction vector\n\nVector",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a8235a8075bc4e50b8dc8b0700fc11fd",
          "Name": "length",
          "Description": "Length of line\n\ndouble\nDefault value : 1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1d318f7f0eb4451aafb861936789cf43",
          "Name": "Line",
          "Description": "Line from start direction and length",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Create a straight Line starting at start Point, extending in Vector direction by specified length.\n\nLine.ByStartPointDirectionLength (startPoint: Point, direction: Vector, length: double = 1): Line"
    },
    {
      "ConcreteType": "DSRevitNodesUI.Views, DSRevitNodesUI",
      "SelectedIndex": -1,
      "SelectedString": "",
      "NodeType": "ExtensionNode",
      "Id": "8aa0d66d7acf4c508620fc1922b98073",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b8690354f3084a5a9a031acddf0060a4",
          "Name": "Views",
          "Description": "The selected Views",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "All views available in the current document."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.DoubleInput, CoreNodeModels",
      "NodeType": "NumberInputNode",
      "NumberType": "Double",
      "InputValue": 1.0,
      "Id": "088a609cf1924a12bce84141906d8bbe",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "a4b3d7a521864caca758a3e86464734f",
          "Name": "",
          "Description": "Double",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a number."
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "ExitDoor",
      "Id": "28f1a34229af43468c80ed5505cbed38",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "854804a4f79f4684b398e779194953f5",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "5aa12ca81acc4b2ab5ab5ae6c9030ed3",
      "Inputs": [
        {
          "Id": "6e7f890afa3a408e9e9e893594a2e163",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "56a80d5ac0a04fc2935159141bd24ccc",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b5a35d91da5c43b581e8d2c84ab99e58",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "==@var[]..[],var[]..[]",
      "Id": "0b28ac81fe0241b4bc995a25f1ad6bf0",
      "Inputs": [
        {
          "Id": "14421351da7f4a06a5730196786e18ff",
          "Name": "x",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "759815a825914888ba93007d6349dce1",
          "Name": "y",
          "Description": "Basic type object to compare (e.g. bool, int, double, string, etc.)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6fbb1ec31a7342db814c3c32c825599b",
          "Name": "bool",
          "Description": "Result of equality check",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x and y are equal\n\n== (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.FilterByBoolMask@var[]..[],var[]..[]",
      "Id": "b7fbbffcdc024650a9cb5f6e486ab153",
      "Inputs": [
        {
          "Id": "19493947f4544bff91be6c6ddaceef1e",
          "Name": "list",
          "Description": "List to filter.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2db87f1cc505453687439b97c745787d",
          "Name": "mask",
          "Description": "List of booleans representing a mask.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "72ba021b4d9e474ebf169377a69dfb03",
          "Name": "in",
          "Description": "Items whose mask index is true.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5fdf40507d3744a09dd181fb5cb47b75",
          "Name": "out",
          "Description": "Items whose mask index is false.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Filters a sequence by looking up corresponding indices in a separate list of booleans.\n\nList.FilterByBoolMask (list: var[]..[], mask: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "8b527e69880742a88b76451a3e1d6dc2",
      "Inputs": [
        {
          "Id": "e1778fe23be14a0e89b10e539d5763bb",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1d2fb20f8ea94ed9bbc9f7b4229aed59",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "4d7c6c7413444070b7935cd61c0671ce",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"DoorOccupantLoad\";",
      "Id": "932e9e396465401db3727298fb95b848",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "4dc121ecb0b94f54a7fbf8699a1508cc",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "da7cef85bdf7465081bb0938db40e112",
      "Inputs": [
        {
          "Id": "eb16035dc6834121bd4a265fb5ad48b3",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "04a6ff3c93694d64b2dfc6003a375260",
          "Name": "parameterName",
          "Description": "The name of the parameter to set.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "53eb885a45db4da1a8962c55ac66934e",
          "Name": "value",
          "Description": "The value.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "df2d92325ec945bdb19b03d8c005ce84",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Set one of the element's parameters.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"ExitDirection\";",
      "Id": "4376048231804dfb8a84cafb864f95df",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "ce3cecbd9d8846c1aa635d198bd50005",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Occupant Load < 50\";",
      "Id": "1c31610f8bfc462c8f7227bff538b60c",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "541e4069a62547f6b2d03917b320d482",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "6b7a196f9df04e758fae4e47cf6d8200",
      "Inputs": [
        {
          "Id": "26ae7a9bd436409b9c591e64272fad35",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "26e6f106a94e49e7a6b729f0cb3cc77c",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ffee749d45534ff3a0709799038128a9",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Combine, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "f3eeb6eca5ba4abc8c8b4cf95a889b07",
      "Inputs": [
        {
          "Id": "57b1ec0efc7d466c8435a2ed92114452",
          "Name": "combineFunction",
          "Description": "Function to use as combinator",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "26935c6959d54f76b7780b868f517429",
          "Name": "list0",
          "Description": "List #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6a46a79d50bc4472b8344bc6052b636e",
          "Name": "list1",
          "Description": "List #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "55cd4169232c44f59c6a1dbaaec4dc3c",
          "Name": "list",
          "Description": "Combined lists",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Applies a combinator to each element in two sequences"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "doors50;\ndoornot50;",
      "Id": "7cef5f80fc1c46c7a14afa8b586233a0",
      "Inputs": [
        {
          "Id": "427ea34564a94afeb4b7dff890eb811f",
          "Name": "doors50",
          "Description": "doors50",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "eb0843fd8ff44437b125796ee51e2e5c",
          "Name": "doornot50",
          "Description": "doornot50",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5a8450116541483599456d7b714b4eea",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7ea4956cfef24d8281e6df8b840082bc",
          "Name": "",
          "Description": "Value of expression at line 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "ea74f0b3e19145ca97dd7a8802809cdb",
      "Inputs": [
        {
          "Id": "73d8b72021b34d1597678e3d5b770f08",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3c77a8add8a44604894f9416d6c6257b",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0916ab68cd2e4672a4f2c7cc2dd5aae7",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.GetParameterValueByName@string",
      "Id": "ec9672d72c86466bbfac5f8ffe78d3e4",
      "Inputs": [
        {
          "Id": "0afd2b42e8174466b2d64b4e79ee5847",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5054b4a1405844c885802718b57d5bd8",
          "Name": "parameterName",
          "Description": "The name of the parameter whose value you want to obtain.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b2657bd6f7094d3f9c362e5dbce45cb9",
          "Name": "var[]..[]",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get the value of one of the element's parameters.\n\nElement.GetParameterValueByName (parameterName: string): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Mark\";",
      "Id": "cda3dbec94f7426d800202a7b3db842e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "6029c66f83cd4f17971b5bf509e9852b",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Door: \" +x+\" - Result: \" +y;",
      "Id": "a407677245db4e46b5bd9e23437691e3",
      "Inputs": [
        {
          "Id": "2d8ea00da14c463c9f0bef24140f939e",
          "Name": "x",
          "Description": "x",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ebba99363eee48b99875b8be58e0a636",
          "Name": "y",
          "Description": "y",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "88ff4b0eeb6046a2b7ee1146e3604830",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "CoreNodeModels.Watch, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "0231d7056d0d417ea2f1bb3766a762f9",
      "Inputs": [
        {
          "Id": "5eb943db93f14603bc7d1ec93090677b",
          "Name": "",
          "Description": "Node to show output from",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "6ffad81f63984b4dafc64660d51f8fad",
          "Name": "",
          "Description": "Node output",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Visualize the node's output"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"(EXTERIOR)\";",
      "Id": "4f979d3bd6844d2894f3ecb6e3bfd8c5",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "b630dfef4c8a46aaa6f6e7e399cade7c",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "List.SortByFunction@var[]..[],Function",
      "Id": "2106a857ed4949b9896a79d2aef824b8",
      "Inputs": [
        {
          "Id": "c6b1081ff09745e09d3ca4ed258b0ce7",
          "Name": "list",
          "Description": "list of values\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": true
        },
        {
          "Id": "a157e7edff334a169b631c630633a749",
          "Name": "sortFunction",
          "Description": "function used to sort list\n\nFunction",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3b7e64c210a84b4e9e94e8e0f9b2a066",
          "Name": "sortedList",
          "Description": "type: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Use a function to determine how list items should be sorted.\n\nList.SortByFunction (list: var[]..[], sortFunction: Function): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.Contains@string,string,bool",
      "Id": "08b84b0ac55845dba01bfd9f66006455",
      "Inputs": [
        {
          "Id": "e2852c3106ec4ab5ae49ddd0e94931e8",
          "Name": "string",
          "Description": "String to search in\n\nstring",
          "UsingDefaultValue": false,
          "Level": 1,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "be2da6df469a42979d0724a14974fadf",
          "Name": "searchFor",
          "Description": "Substring to search for\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b1a26503ea0544499169e281638ddf58",
          "Name": "ignoreCase",
          "Description": "Whether or not comparison takes case into account\n\nbool\nDefault value : false",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "becb7b2f570f4f38989fd32063aa49fe",
          "Name": "bool",
          "Description": "Whether the string contains the substring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Determines if the given string contains the given substring.\n\nString.Contains (string: string, searchFor: string, ignoreCase: bool = false): bool"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.LastItem@var[]..[]",
      "Id": "aef28c48373946c099cffc932169a90d",
      "Inputs": [
        {
          "Id": "e57bbe08e80d45a7b27407b9f33332fc",
          "Name": "list",
          "Description": "List to get the last item of\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": true,
          "KeepListStructure": true
        }
      ],
      "Outputs": [
        {
          "Id": "11f502eda27640b187db78ded64bb973",
          "Name": "item",
          "Description": "Last item in the list",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Retrieves the last item in a list.\n\nList.LastItem (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "d6c0d347260b43108c23f34f118324d4",
      "Inputs": [
        {
          "Id": "d76a17e5fa7a467fb80bd3daa59c12ca",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ca591774bb1146a083d678da9caddd7f",
          "Name": "parameterName",
          "Description": "The name of the parameter to set.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "605f85bc24cd4cdaa3075a8f02f8397e",
          "Name": "value",
          "Description": "The value.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ec22b256db2441429163829ac2268ff9",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Set one of the element's parameters.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "DoorLocation",
      "Id": "1273d30b8c4648f78c2ec5991cf64182",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "3efdf89e7e89440abca735740c421a47",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "InteriorDoorsList;",
      "Id": "158c2ace8a2a40018b05a94d9c592742",
      "Inputs": [
        {
          "Id": "bf19f604fff7498bb2694e3a5d17e6ce",
          "Name": "InteriorDoorsList",
          "Description": "InteriorDoorsList",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b8b58e462908434eb56ea947178c77a6",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "22afc586-3029-4a8c-ade8-183c160acd2e",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "d13145e59c9742089d33f8f61dce7b45",
      "Inputs": [
        {
          "Id": "4a9f35d028cf4132b02e000b0f8e5a6d",
          "Name": "door",
          "Description": "FamilyInstance[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "cdf23321fe18419a9c030ae52e31ee3e",
          "Name": "phase",
          "Description": " If no phase is specified, the node will use the last phase in the project\n\nvar\nDefault value : null",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fbbdd35ed4024ed08ec3cf0f30f1d32c",
          "Name": "fromRoom",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "80c2e525102d4d3d8bd38e9da4ae47a1",
          "Name": "toRoom",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4f17be11aca0480ea79583ea5d684a23",
          "Name": "roomCount",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Gets the rooms that are connected by a given door"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "9acfcca1f0c34835aefa7d46150eb70b",
      "Inputs": [
        {
          "Id": "b94795230ef24610a7ff567730cd0a45",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "48ee80c88c0d40c9b8ca00db2878f3ee",
          "Name": "parameterName",
          "Description": "The name of the parameter to set.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "586edf142fe54e21bd2792844f54a11d",
          "Name": "value",
          "Description": "The value.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "e35f17cbb3b34743aad6f24204aa5418",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Set one of the element's parameters.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "DoorLocation",
      "Id": "be62bda43d4942b8a0e89406ce352a50",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "8c1bfeec5e8e4deaa960b2602f41aae0",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Creates a string."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Room.Number",
      "Id": "5aaf0206ab0c448c8fb4fdfc6ab96a14",
      "Inputs": [
        {
          "Id": "bf3c960c955a4606b30c0336b7f0b17c",
          "Name": "room",
          "Description": "Revit.Elements.Room",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5f20848230a348b597c0c98a74e7bea4",
          "Name": "string",
          "Description": "string",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Get room number\n\nRoom.Number: string"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.String.ToNumber@string",
      "Id": "a2b9b01e17e040568588feef6900f92b",
      "Inputs": [
        {
          "Id": "552d16ed1f3e4f01989388bcf75ebdaa",
          "Name": "string",
          "Description": "String to be converted\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1e10bb07c1ba4096836f6cb430013a59",
          "Name": "number",
          "Description": "Integer or double-type number",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Converts a string to an integer or a double.\n\nString.ToNumber (string: string): var[]..[]"
    },
    {
      "ConcreteType": "CoreNodeModels.HigherOrder.Filter, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "bcade11e0b7f45e5a700fb8ddfff2df6",
      "Inputs": [
        {
          "Id": "e4cf3fee14d84b28beeb018bb79da56e",
          "Name": "list",
          "Description": "List to filter",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9e3f4906babf43508a75c070879df594",
          "Name": "condition",
          "Description": "Filter function used to determine if an element is filtered in or out",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "926f298bf8e94d93bb08aca75d9045ab",
          "Name": "in",
          "Description": "List containing all elements \"x\" where condition(x) = True",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "bbef1a3bc303401c9e6a86a90e318cf0",
          "Name": "out",
          "Description": "List containing all elements \"x\" where condition(x) = False",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Filters a sequence by a given condition such that for an arbitrary element \"x,\" condition(x) = True or False."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": ">=@var[]..[],var[]..[]",
      "Id": "74e43556c77a42cea526bf625a52a335",
      "Inputs": [
        {
          "Id": "823e95814fef4300a206caaaf288e4c2",
          "Name": "x",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ae25477c94c946818eba836de273c99c",
          "Name": "y",
          "Description": "Integer or double value\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "7cb91f1e48534c1bbe70c73d4bb5a76c",
          "Name": "bool",
          "Description": "True if x is equal or greater than y, false if not",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Compares if x is greater or equals to y\n\n>= (x: var[]..[], y: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "50;",
      "Id": "41f31ba6394141878f8cf022954a2b14",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "68c89c5c026b4191af9324dadfd7ffb1",
          "Name": "",
          "Description": "Value of expression at line 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Allows for DesignScript code to be authored directly"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CustomNodes.Function, DynamoCore",
      "FunctionSignature": "858e6bd7-c0fa-4568-a225-ef815e68f8e3",
      "FunctionType": "Graph",
      "NodeType": "FunctionNode",
      "Id": "331a8fd02c6d4f74ba9be8d392e01751",
      "Inputs": [
        {
          "Id": "94f45fd58e6e47928d907cd49738f72a",
          "Name": "list",
          "Description": "var[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a522b2212458406883abf59ffac2db72",
          "Name": "value",
          "Description": "var",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "16f357cc502a4b26945e7b101f6369d7",
          "Name": "indices",
          "Description": "return value",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "list all of the indices of a list that match the specified value. Capable of handling null values, part of the SmartCopyMonitor workflow."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Flatten@var[]..[],int",
      "Id": "493e80bf1da043829225bb440060dff9",
      "Inputs": [
        {
          "Id": "8f3a1bbfb6ee4df5a3684b34ef1a0652",
          "Name": "list",
          "Description": "List to flatten.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a444e97366384cd5bde3ba6fecb82c75",
          "Name": "amount",
          "Description": "Layers of list nesting to remove (-1 will remove all list nestings)\n\nint\nDefault value : -1",
          "UsingDefaultValue": true,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d0f87955dd394b3396a02a283f2b30bf",
          "Name": "list",
          "Description": "Flattened list by amount",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Flattens a nested list of lists by a certain amount.\n\nList.Flatten (list: var[]..[], amount: int = -1): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.GetItemAtIndex@var[]..[],int",
      "Id": "04def2abdc0b4ee396c316a6a40fd891",
      "Inputs": [
        {
          "Id": "b4d11a3a81b34f538defc559537876a6",
          "Name": "list",
          "Description": "List to fetch an item from.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "7e2f47457cd6479d8c355ccfd779aab2",
          "Name": "index",
          "Description": "Index of the item to be fetched.\n\nint",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "819d12a1ecde4947af5590079411d4a5",
          "Name": "item",
          "Description": "Item in the list at the given index.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns an item from the given list that's located at the specified index.\n\nList.GetItemAtIndex (list: var[]..[], index: int): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.SetDifference@var[],var[]",
      "Id": "636031525ee24d9694c8856d5c75549b",
      "Inputs": [
        {
          "Id": "9d71104c7f9f40bc867045b15c658abb",
          "Name": "list1",
          "Description": "List of objects to be included in the new list\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "5cab8be51505421c93b66202a04d5c44",
          "Name": "list2",
          "Description": "List of objects to be excluded in the new list\n\nvar[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3c9284527cd6485398dda22698a1ed5a",
          "Name": "list",
          "Description": "The new list that contains objects in List1 but not in List2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Returns a new list that includes objects in List1 but excludes objects in List2.\n\nList.SetDifference (list1: var[], list2: var[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSVarArgFunction, DynamoCore",
      "FunctionSignature": "DSCore.List.Join@var[]..[]",
      "FunctionType": "VariableArgument",
      "NodeType": "FunctionNode",
      "Id": "931cfb5111c0463486102693add7c0a9",
      "Inputs": [
        {
          "Id": "cfd07a05dfa64c98bb0f9898b3f69b6c",
          "Name": "list0",
          "Description": "Lists to join into one.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6e54dbc7154c490ebe5a4b4dfae86231",
          "Name": "list1",
          "Description": "var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "18e86a383750417da2e3fd2aacfe2d08",
          "Name": "list",
          "Description": "Joined list.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Concatenates all given lists into a single list.\n\nList.Join (lists: var[]..[]): var[]..[]"
    }
  ],
  "Connectors": [
    {
      "Start": "d4247c3cbfea49c9a6648ab5ef174195",
      "End": "27f46ebf392545d68c6b54e94449367f",
      "Id": "f89a085fb97347028570039acc08e275",
      "IsHidden": "False"
    },
    {
      "Start": "4633d2b933d8442cac18c9a900000851",
      "End": "eaa2cbe6dd2c4f20b412292c7cce060f",
      "Id": "9e605544fced4b668899d730ef7d9949",
      "IsHidden": "False"
    },
    {
      "Start": "4633d2b933d8442cac18c9a900000851",
      "End": "ba9d4c746679464ca2057e5e0ef08ad9",
      "Id": "20ac15d64b784d7bb740c50a79a1ffa2",
      "IsHidden": "False"
    },
    {
      "Start": "9e7ac1739ee8435ab22de1f04b0e36e1",
      "End": "d448d979df394d108c7536b6fe3876bc",
      "Id": "dbc15d8b98da474ba917a46b67f9cc28",
      "IsHidden": "False"
    },
    {
      "Start": "8c2ad7d4a727465fbdb8eb85f48e7f9b",
      "End": "b93cb0d4c65d44d3b2716b66fb133a21",
      "Id": "d5d8c1427497481a8d86994e44edca37",
      "IsHidden": "False"
    },
    {
      "Start": "95fd5a3e1a1946cba3f8a73c892f7ad0",
      "End": "f66d7b3c8ef24483b2f9061302fcc6d8",
      "Id": "aca6d326f0d840adb50c54d57f163226",
      "IsHidden": "False"
    },
    {
      "Start": "467a60b454e8491da9b3c6619fdfc9c0",
      "End": "8b918074e78341ad826502427d79c950",
      "Id": "6415dce3ad3b44edb5f7777795044c2b",
      "IsHidden": "False"
    },
    {
      "Start": "a748a8263c6b40b19de917f2e36d9040",
      "End": "d25f77bdbb0f406daa96b5424da81ffd",
      "Id": "78ab172f50324cc1aa273c5a1c56eaba",
      "IsHidden": "False"
    },
    {
      "Start": "a748a8263c6b40b19de917f2e36d9040",
      "End": "8ca5cac064564b1f8aba4b8eb5391987",
      "Id": "204599d5d375443494c0bc8aab00cc9f",
      "IsHidden": "False"
    },
    {
      "Start": "a748a8263c6b40b19de917f2e36d9040",
      "End": "415d8f52a17b42ba9a31381f0aa2e7b9",
      "Id": "763a163536694927b908d716ab55adb7",
      "IsHidden": "False"
    },
    {
      "Start": "a748a8263c6b40b19de917f2e36d9040",
      "End": "a5f73d13df8647809c9798907f6c0b01",
      "Id": "66fe4160b54e40ddab87182b9623f971",
      "IsHidden": "False"
    },
    {
      "Start": "a748a8263c6b40b19de917f2e36d9040",
      "End": "eadd93a211a740b683395dfdb4760af8",
      "Id": "78f3cde4de0249cd8f47790f97ab9f0b",
      "IsHidden": "False"
    },
    {
      "Start": "52d3b5e048784b8189cb9e4d05ae3d03",
      "End": "861c95a01ef644c98684f122265360fb",
      "Id": "a1172655fefb475295b895ca946bf55e",
      "IsHidden": "False"
    },
    {
      "Start": "52d3b5e048784b8189cb9e4d05ae3d03",
      "End": "0dc918d5cffd498e8fc5a0aa2e74901a",
      "Id": "f8736ac27b3a4a979a007288e0039f74",
      "IsHidden": "False"
    },
    {
      "Start": "52d3b5e048784b8189cb9e4d05ae3d03",
      "End": "d5e945d029434b639bce049f0250adb6",
      "Id": "10b6775bdce14d0085d01214f6dfe43e",
      "IsHidden": "False"
    },
    {
      "Start": "52d3b5e048784b8189cb9e4d05ae3d03",
      "End": "91b2396305834542b2fa13cb3b947672",
      "Id": "114ed2698a714c4da944475f3b008229",
      "IsHidden": "False"
    },
    {
      "Start": "52d3b5e048784b8189cb9e4d05ae3d03",
      "End": "94419ef958444b399df1199c22aa0c1e",
      "Id": "d32d5670ff0d49229d156c1c1b7b0d3b",
      "IsHidden": "False"
    },
    {
      "Start": "222338049bbd4136b050691ddb41e835",
      "End": "e728d902e4e94424b8d190ff92782132",
      "Id": "d48aad42e34747b88ec2644f8c78e5a7",
      "IsHidden": "False"
    },
    {
      "Start": "222338049bbd4136b050691ddb41e835",
      "End": "3a659fee6d334a24b8082cc3c986ed87",
      "Id": "fdcee37e81eb46e3bdb3d691db33fcfb",
      "IsHidden": "False"
    },
    {
      "Start": "222338049bbd4136b050691ddb41e835",
      "End": "38e8b6f71992405990e593c437fb7f91",
      "Id": "9d165813395747ee9df9688100720e01",
      "IsHidden": "False"
    },
    {
      "Start": "222338049bbd4136b050691ddb41e835",
      "End": "70959967fc4e49789606f20f21fbd29b",
      "Id": "1c38fcc4e7d74655a7b59ff40a942f29",
      "IsHidden": "False"
    },
    {
      "Start": "8a1282c48df3466aa0d17229c204fddf",
      "End": "e68ffe93c2db4824943c40c1350fab6b",
      "Id": "df305510c946446fb770217f771ae123",
      "IsHidden": "False"
    },
    {
      "Start": "0bf95dca1ec343d59303d9596a1283d9",
      "End": "84428dd9bd9a4f1dbdfeb5a269de64a8",
      "Id": "e1479a9474d34bf382d70b51d92ab0cc",
      "IsHidden": "False"
    },
    {
      "Start": "468f58fca4394b8f8bc10ebf8ad63191",
      "End": "aa66d0f576fd43279da1234a115b553b",
      "Id": "3f9e68b2c78d42158f3e9f67317e11bb",
      "IsHidden": "False"
    },
    {
      "Start": "a1cf4389bdca4cb18d6942583c043c65",
      "End": "d8e8ba050f3b400ab17a01af232e39cf",
      "Id": "d21ed1886c284dcc865297b49958222e",
      "IsHidden": "False"
    },
    {
      "Start": "a1cf4389bdca4cb18d6942583c043c65",
      "End": "1b8050c3c97947efb223b8835eed74a1",
      "Id": "ff3307a7aa9d4af7ba556d2ca1c41966",
      "IsHidden": "False"
    },
    {
      "Start": "574ae0a4304240a4bbc741e374a685b0",
      "End": "494f3d70aac54512a08297f0308c9a97",
      "Id": "47fe2dc4e9f3433cb7eb4136ee070f88",
      "IsHidden": "False"
    },
    {
      "Start": "574ae0a4304240a4bbc741e374a685b0",
      "End": "26935c6959d54f76b7780b868f517429",
      "Id": "d55ca45f25914c0085468aa8062ccb2f",
      "IsHidden": "False"
    },
    {
      "Start": "5946ae8e5310457a819c5724805d82f9",
      "End": "c8df329825ff4ae394dd0c5528793143",
      "Id": "ec02e6b44f1840dcb0d7d0fbfcf76892",
      "IsHidden": "False"
    },
    {
      "Start": "483cf4a4a2e544438272641cfe2c6476",
      "End": "652c833b7e5145da984b78d2d4e7d73c",
      "Id": "b48c11bc84a449b08405049f741c4cd8",
      "IsHidden": "False"
    },
    {
      "Start": "41b23b7b322546c69f3b1ff677777891",
      "End": "a89ca1ec9922423d88039a833f8ba7fc",
      "Id": "28e4ee9f6aea4a2b94265703fabfb55f",
      "IsHidden": "False"
    },
    {
      "Start": "0636b13ee9234038ae3f957dd588bb8d",
      "End": "6b8dc30e3f0041b4b977711ba0e9aeb3",
      "Id": "1a52e53a8e0b425697c63a2fa8f36720",
      "IsHidden": "False"
    },
    {
      "Start": "e9fcff1af0b94c749f16cdb73aea6911",
      "End": "a9b62e822daa4d0ca11743cbe7e056d5",
      "Id": "990d56f395e142848651170a285e80ca",
      "IsHidden": "False"
    },
    {
      "Start": "b5b64ecaa4704629acdf55ee91c7e3ea",
      "End": "2d15e7dda5da4146b396e2f724119153",
      "Id": "ca17cc7bab2a4839b23c72d1fd74b28a",
      "IsHidden": "False"
    },
    {
      "Start": "7f4f7d05a92e4990a5edd1b01d67d145",
      "End": "8e442269e17b45f59e7f61035abbbb33",
      "Id": "19018156a6f848aca6756dc9eaa4c5c4",
      "IsHidden": "False"
    },
    {
      "Start": "935c1b966c074fb792ec53d0a147756d",
      "End": "9f1f44882c7840f3998bf1794ef50507",
      "Id": "84bd3e39260b4401af31cbc0827b497c",
      "IsHidden": "False"
    },
    {
      "Start": "935c1b966c074fb792ec53d0a147756d",
      "End": "cdf23321fe18419a9c030ae52e31ee3e",
      "Id": "df82ed8fad2f4cf58430da1ccb491f76",
      "IsHidden": "False"
    },
    {
      "Start": "82856a662ee044bc8736f970c198496d",
      "End": "6389ff78f39c49f38cec6e67d6393a80",
      "Id": "30bde9741a40494697ba1a30703f6491",
      "IsHidden": "False"
    },
    {
      "Start": "7a08a4ff0dfd4640a3993da20db46334",
      "End": "26d328aaa8cd49f8b6785ebaa8ad8b12",
      "Id": "3918892124c448949756f65da5c7b9ff",
      "IsHidden": "False"
    },
    {
      "Start": "85597ba4f1fa43b58f02c596f63e57cb",
      "End": "5bc9b6b6114c4b1ab80dfefbc208d9a1",
      "Id": "4f184b3aa1a74eab897907e23be84de4",
      "IsHidden": "False"
    },
    {
      "Start": "14afe35224494c5a9df645a2c99da2d1",
      "End": "bf19f604fff7498bb2694e3a5d17e6ce",
      "Id": "6b90df5e13d4415f8fa9f696536e267b",
      "IsHidden": "False"
    },
    {
      "Start": "d2ea64e9445440edb1f968271037b643",
      "End": "a02899f1cde5430183ea412803b3dbf1",
      "Id": "23f8852ca03746a2900b049f5fd989c8",
      "IsHidden": "False"
    },
    {
      "Start": "ab05f4b02c5644058b383617be470575",
      "End": "e821dc01a03243f5896a34be00fcb964",
      "Id": "4d52b4e50a304b2aa6c505be6c0fd50f",
      "IsHidden": "False"
    },
    {
      "Start": "9f3fc743fa224a8faae32cefb380836a",
      "End": "50899b33ec73437298a416b98e6364d1",
      "Id": "6d8202b0539045fbb0a8f8deb2e2abb1",
      "IsHidden": "False"
    },
    {
      "Start": "9f3fc743fa224a8faae32cefb380836a",
      "End": "6e7f890afa3a408e9e9e893594a2e163",
      "Id": "c4a9b1a11fd243faa6a309fa517fac16",
      "IsHidden": "False"
    },
    {
      "Start": "9f3fc743fa224a8faae32cefb380836a",
      "End": "19493947f4544bff91be6c6ddaceef1e",
      "Id": "63a0b697278546ea98b8b85481f18fea",
      "IsHidden": "False"
    },
    {
      "Start": "9f3fc743fa224a8faae32cefb380836a",
      "End": "178d2aa10ef64ee09a929e3f9227ea91",
      "Id": "b2952a67648342f19a88a24c9f962901",
      "IsHidden": "False"
    },
    {
      "Start": "9f3fc743fa224a8faae32cefb380836a",
      "End": "696106552ab843b3a014bb376790642f",
      "Id": "a8c045eb1dd447d3817ca78ffaf69ba6",
      "IsHidden": "False"
    },
    {
      "Start": "9f3fc743fa224a8faae32cefb380836a",
      "End": "d76a17e5fa7a467fb80bd3daa59c12ca",
      "Id": "ba0f9c1df0224eba9fcdc0319417f828",
      "IsHidden": "False"
    },
    {
      "Start": "c5574d0d4d2347e6a71bce061d19e893",
      "End": "fd6a1d4d32a442d9955e0330f5a02655",
      "Id": "5ad8dfd924944fb882af2e8616741cb1",
      "IsHidden": "False"
    },
    {
      "Start": "57483e2025504febbf19b8c9cc1649d2",
      "End": "90a6622f985a4664aebc87cf53991a0a",
      "Id": "ed15b3f797a846d59bebedafb9f71801",
      "IsHidden": "False"
    },
    {
      "Start": "3428dfbe56e64bc5abb4a2205a5588cf",
      "End": "59e592447768412c91aac5e327051e50",
      "Id": "6e394d86a815468b802cc3a8be0326be",
      "IsHidden": "False"
    },
    {
      "Start": "35cffe34da114ded8a15a710ba8661b5",
      "End": "c5c5bbfad2fa42a1bebe8de95d487afd",
      "Id": "854af9162d5e4331a623d4cbc83d2a30",
      "IsHidden": "False"
    },
    {
      "Start": "35cffe34da114ded8a15a710ba8661b5",
      "End": "0121e9c18b1b47458a4836dc5d825f7e",
      "Id": "fe9d079f449943e08a831e1f22793ed9",
      "IsHidden": "False"
    },
    {
      "Start": "e616eaed79eb451889774ca8101a65a3",
      "End": "bb11502f465f4c3d980704183239a206",
      "Id": "80e67a458bd14fccbc4d17b2f025f341",
      "IsHidden": "False"
    },
    {
      "Start": "2056c511db66497f8db9d0cb46d52952",
      "End": "c204ccd596c546578200b3d031a4fa3b",
      "Id": "d30d3242d2d84d9a80e0de1dbf0c92ea",
      "IsHidden": "False"
    },
    {
      "Start": "51d5413f95db48e990ea303f9bab5162",
      "End": "92a67a134fa148e48d69e352f1ebd99d",
      "Id": "789f2d4755424aa3a8cb347ad63ea36f",
      "IsHidden": "False"
    },
    {
      "Start": "8ee4a9929a5b465081cbc9e8aa10e998",
      "End": "b1fba2a4ffb148ffbe76b9a25536f68c",
      "Id": "a2c0ec061d7b4df7adae66350671d9bb",
      "IsHidden": "False"
    },
    {
      "Start": "cdda0f8047c946d78cf05dd3103cde7b",
      "End": "15fc3af7ec764365836883cc3cc5c52d",
      "Id": "6200142fe01245c19c2bdf61901f0bbc",
      "IsHidden": "False"
    },
    {
      "Start": "cdda0f8047c946d78cf05dd3103cde7b",
      "End": "a7acf24194b2474c978a7630dea4af00",
      "Id": "aa8855950e82498cae4ef427ded90802",
      "IsHidden": "False"
    },
    {
      "Start": "ea90120199cb47fcbb525a3605f1b4cf",
      "End": "ce72370cae604c29a882ddc1e987a6a2",
      "Id": "fcc0545fa9df497199a42109c0ca7918",
      "IsHidden": "False"
    },
    {
      "Start": "60508916d4094c59b3e23a77b8e20b98",
      "End": "5e6fd78022354bc0aefdd3a6afe77583",
      "Id": "b1cd1776afec4f89a5ba3caedcce823f",
      "IsHidden": "False"
    },
    {
      "Start": "60508916d4094c59b3e23a77b8e20b98",
      "End": "2c6d3e5744b946578a1dd3b48bf08c03",
      "Id": "b8f83516aa7a4d39bbe791eb63eb692f",
      "IsHidden": "False"
    },
    {
      "Start": "34e7ba9003f84c55b477e07b1c984aa0",
      "End": "8a7b58c16aad472691a3ecd7f5bb98b1",
      "Id": "7c3d643900604621ae096804c89cb4a6",
      "IsHidden": "False"
    },
    {
      "Start": "d966eed3107640619de336a76065aff5",
      "End": "70e12c3aed384c0596fbab2bc9719f5a",
      "Id": "909fcc71d38d41958a7be736210fb09f",
      "IsHidden": "False"
    },
    {
      "Start": "8648e6abfd6744cab7c32f28ade0b1f2",
      "End": "706b6721002f43c3a675461cb722d0ce",
      "Id": "bde88ded952d4f33be4d426264a2450c",
      "IsHidden": "False"
    },
    {
      "Start": "fb4ec924313a459d9b923319b3d19e05",
      "End": "d42386fa8c5042f7928607ff46169436",
      "Id": "050b1b22e0744004b06e9ae0b53fb442",
      "IsHidden": "False"
    },
    {
      "Start": "114bffd1f31f488982839817b104f5b7",
      "End": "766a261cb13349d098f99a9fdbdf3545",
      "Id": "a9d2972040534239aaf37a20dfc3ce5e",
      "IsHidden": "False"
    },
    {
      "Start": "454ffc6810364ce08b9ba10ed18a80fa",
      "End": "014cb2913de546cc93de9eb6cc40de53",
      "Id": "8d2dcd951de748dd8051aba7ca2cdcc5",
      "IsHidden": "False"
    },
    {
      "Start": "83e5485b04454b6391e2610fc5660a23",
      "End": "e96ccc54d16844af94f7ed8a855d1bf4",
      "Id": "932d37f31b89454786c4cca889df2484",
      "IsHidden": "False"
    },
    {
      "Start": "8cb6f39671cf412da58916f16e7f0934",
      "End": "e6ea0d2368ba4005b1ba7cbe84b8e268",
      "Id": "daa2ddc1f431471ebe907ce60f30dbf6",
      "IsHidden": "False"
    },
    {
      "Start": "8cb6f39671cf412da58916f16e7f0934",
      "End": "6a46a79d50bc4472b8344bc6052b636e",
      "Id": "e49b117a8c394b22806a2794cf6ec4c5",
      "IsHidden": "False"
    },
    {
      "Start": "db79e75f7387414ea99a5664c9887b1d",
      "End": "04527145dd8f4288a560f41703d18c16",
      "Id": "fea927e949b84a009ca25aeac5ce4143",
      "IsHidden": "False"
    },
    {
      "Start": "7f5578bf49a0421498f27052dbf791fd",
      "End": "427ea34564a94afeb4b7dff890eb811f",
      "Id": "d151910ff02143ecbd4a742dbe472b05",
      "IsHidden": "False"
    },
    {
      "Start": "8179c2f8f84d4c059713d7c63ca2383d",
      "End": "2ca69d0878244cb2a8687f161b888bfe",
      "Id": "d339f43e109b49c5bd99eefe2681b3da",
      "IsHidden": "False"
    },
    {
      "Start": "cd82e4eef51e4b4d9752a995cc5949d9",
      "End": "eab7989e066740b4b6e5dabdff1d1d3c",
      "Id": "5597763c691b453aa0cf115650b83baf",
      "IsHidden": "False"
    },
    {
      "Start": "adafdf978ddb43729daafba7c358123e",
      "End": "07de995838a341f89aae5b1246d502fd",
      "Id": "b1464e69a1f547029ea1e9c1cb236566",
      "IsHidden": "False"
    },
    {
      "Start": "35db672fec7c42248ab989ef7d2739da",
      "End": "d608dc07586d4f0e81c03975d47a1228",
      "Id": "c0b8623939a0453c9b5e145005cf620a",
      "IsHidden": "False"
    },
    {
      "Start": "f4c151661c46490aaa05386dd615c7a2",
      "End": "c10f0b734525405993fd2a8bd94e72f5",
      "Id": "71110a59db2a403b91b68dda19c3aff4",
      "IsHidden": "False"
    },
    {
      "Start": "4571e80f5905484c92a53cdfb8b2eefb",
      "End": "cb073c27a2574a14948226fd30094f1e",
      "Id": "c998e2fa3c1048bc8ff7b53457614007",
      "IsHidden": "False"
    },
    {
      "Start": "318c23e6a01d438cb3b8e3d8fd1e7318",
      "End": "cd54fc9317924489b16ebbe41906dfff",
      "Id": "10d2aaa360e2477db7f47817561edd11",
      "IsHidden": "False"
    },
    {
      "Start": "b80101b99f65458988bda21829c35480",
      "End": "b86936f1ec804fc0b432e20d9ea1ed17",
      "Id": "a093687d475e4fb59318f98552b9daa0",
      "IsHidden": "False"
    },
    {
      "Start": "b80101b99f65458988bda21829c35480",
      "End": "3c77a8add8a44604894f9416d6c6257b",
      "Id": "75b2b227751d437d965d7b81626c0eae",
      "IsHidden": "False"
    },
    {
      "Start": "611596b8ed0143beb516aa525c02c2ff",
      "End": "bdfe71330c104b898e7375e966dd42b1",
      "Id": "d23e8048929942069a162f1700955af1",
      "IsHidden": "False"
    },
    {
      "Start": "fdd6a5ec3e1d4a1a85da89633f6491fb",
      "End": "8cf02e9553ee43bcba6d20763ed8e018",
      "Id": "21a05ce54d874ae8ab2b47a6995990e2",
      "IsHidden": "False"
    },
    {
      "Start": "da0862b9630448f39dce29a43f9f3a21",
      "End": "07086687661e4a0dbea8dacb27a6ff65",
      "Id": "f49d008f53054ef3b5a922a25ac00ef7",
      "IsHidden": "False"
    },
    {
      "Start": "1c29ef86e14e444b9e9f4da96dcc8fb7",
      "End": "72cde8da4ef64fa697aa4ee11a23e7c7",
      "Id": "0a44bbde5dcc43189a423a8409dc5eb1",
      "IsHidden": "False"
    },
    {
      "Start": "1caf0b1eaacb4329b6ac63e1befe2a7c",
      "End": "f58f7cb59a2843e2af4d313b1a533899",
      "Id": "cf77e8313aea4867b576e79c22852a69",
      "IsHidden": "False"
    },
    {
      "Start": "de24f0f2665f45a7be8db467819a8a2f",
      "End": "a8235a8075bc4e50b8dc8b0700fc11fd",
      "Id": "f1100842898441088dff34fe32668c05",
      "IsHidden": "False"
    },
    {
      "Start": "1d318f7f0eb4451aafb861936789cf43",
      "End": "7c76393f85864b47a996f407986a3b2e",
      "Id": "f88ddef76a5649afb9fe84a402dfdce5",
      "IsHidden": "False"
    },
    {
      "Start": "1d318f7f0eb4451aafb861936789cf43",
      "End": "76171fcedb444b09a1bfb117fb19b3a6",
      "Id": "a5ba0100e451452b9145f5fa3af98dde",
      "IsHidden": "False"
    },
    {
      "Start": "b8690354f3084a5a9a031acddf0060a4",
      "End": "79d857e23c484aefaf9606de19503b66",
      "Id": "f20f41a8d352465db6aa5b2a8c9a08a0",
      "IsHidden": "False"
    },
    {
      "Start": "a4b3d7a521864caca758a3e86464734f",
      "End": "759815a825914888ba93007d6349dce1",
      "Id": "fa2164c0c2e64393a8775884fd9af39c",
      "IsHidden": "False"
    },
    {
      "Start": "854804a4f79f4684b398e779194953f5",
      "End": "56a80d5ac0a04fc2935159141bd24ccc",
      "Id": "8dd8bc3c044a46f29f5f54bd9067019a",
      "IsHidden": "False"
    },
    {
      "Start": "b5a35d91da5c43b581e8d2c84ab99e58",
      "End": "14421351da7f4a06a5730196786e18ff",
      "Id": "e4f3d468346a446a91f4f8da3b1674dd",
      "IsHidden": "False"
    },
    {
      "Start": "6fbb1ec31a7342db814c3c32c825599b",
      "End": "2db87f1cc505453687439b97c745787d",
      "Id": "59fdba1670504fd8a6d47441ea2d75c7",
      "IsHidden": "False"
    },
    {
      "Start": "72ba021b4d9e474ebf169377a69dfb03",
      "End": "e1778fe23be14a0e89b10e539d5763bb",
      "Id": "2e0001275c29436ca7da7efa618a8991",
      "IsHidden": "False"
    },
    {
      "Start": "72ba021b4d9e474ebf169377a69dfb03",
      "End": "b4d11a3a81b34f538defc559537876a6",
      "Id": "1799f154f90743f7b846243e00082391",
      "IsHidden": "False"
    },
    {
      "Start": "72ba021b4d9e474ebf169377a69dfb03",
      "End": "9d71104c7f9f40bc867045b15c658abb",
      "Id": "c1e0b993a4694cb7845b12a6cc226712",
      "IsHidden": "False"
    },
    {
      "Start": "4d7c6c7413444070b7935cd61c0671ce",
      "End": "552d16ed1f3e4f01989388bcf75ebdaa",
      "Id": "47d24852828b4f5db531ce002e101351",
      "IsHidden": "False"
    },
    {
      "Start": "4dc121ecb0b94f54a7fbf8699a1508cc",
      "End": "1d2fb20f8ea94ed9bbc9f7b4229aed59",
      "Id": "19d465de702f421d95265b7512ec9d32",
      "IsHidden": "False"
    },
    {
      "Start": "df2d92325ec945bdb19b03d8c005ce84",
      "End": "eb0843fd8ff44437b125796ee51e2e5c",
      "Id": "02d623ace3c940b897919226158689ed",
      "IsHidden": "False"
    },
    {
      "Start": "ce3cecbd9d8846c1aa635d198bd50005",
      "End": "04a6ff3c93694d64b2dfc6003a375260",
      "Id": "f98ea0fc83ab4e70adbd0d33c3d72606",
      "IsHidden": "False"
    },
    {
      "Start": "541e4069a62547f6b2d03917b320d482",
      "End": "53eb885a45db4da1a8962c55ac66934e",
      "Id": "66dfdc14bb124dbf961da054a55a9d25",
      "IsHidden": "False"
    },
    {
      "Start": "ffee749d45534ff3a0709799038128a9",
      "End": "57b1ec0efc7d466c8435a2ed92114452",
      "Id": "dfcae09a00b04569856207bc02d21669",
      "IsHidden": "False"
    },
    {
      "Start": "55cd4169232c44f59c6a1dbaaec4dc3c",
      "End": "c6b1081ff09745e09d3ca4ed258b0ce7",
      "Id": "8b4e1d26653447989e1489bb50b54e13",
      "IsHidden": "False"
    },
    {
      "Start": "5a8450116541483599456d7b714b4eea",
      "End": "cfd07a05dfa64c98bb0f9898b3f69b6c",
      "Id": "8f7ae44e6a27452c8180dd3bfb6e7a1c",
      "IsHidden": "False"
    },
    {
      "Start": "7ea4956cfef24d8281e6df8b840082bc",
      "End": "6e54dbc7154c490ebe5a4b4dfae86231",
      "Id": "c9bc547e56ac491d8dc2b5accac895bb",
      "IsHidden": "False"
    },
    {
      "Start": "0916ab68cd2e4672a4f2c7cc2dd5aae7",
      "End": "ebba99363eee48b99875b8be58e0a636",
      "Id": "6fd00ceeb54f42d8aaa15bce82784255",
      "IsHidden": "False"
    },
    {
      "Start": "b2657bd6f7094d3f9c362e5dbce45cb9",
      "End": "2d8ea00da14c463c9f0bef24140f939e",
      "Id": "434adac49ddc4ebbbfb7ced8057a043d",
      "IsHidden": "False"
    },
    {
      "Start": "6029c66f83cd4f17971b5bf509e9852b",
      "End": "5054b4a1405844c885802718b57d5bd8",
      "Id": "1205714aed6d42c7b1ea5dc18a0ed2d1",
      "IsHidden": "False"
    },
    {
      "Start": "88ff4b0eeb6046a2b7ee1146e3604830",
      "End": "5eb943db93f14603bc7d1ec93090677b",
      "Id": "c46d72e664964aa6824f2b837db81ae4",
      "IsHidden": "False"
    },
    {
      "Start": "b630dfef4c8a46aaa6f6e7e399cade7c",
      "End": "be2da6df469a42979d0724a14974fadf",
      "Id": "63e239afd49e4b65b852079789d6b64f",
      "IsHidden": "False"
    },
    {
      "Start": "3b7e64c210a84b4e9e94e8e0f9b2a066",
      "End": "e57bbe08e80d45a7b27407b9f33332fc",
      "Id": "738c697cbda349118f263d361f4220f3",
      "IsHidden": "False"
    },
    {
      "Start": "becb7b2f570f4f38989fd32063aa49fe",
      "End": "a157e7edff334a169b631c630633a749",
      "Id": "343fc9910db249de8fad8874f8e6ff62",
      "IsHidden": "False"
    },
    {
      "Start": "11f502eda27640b187db78ded64bb973",
      "End": "605f85bc24cd4cdaa3075a8f02f8397e",
      "Id": "6edb6f054226489b894604ae58fb6125",
      "IsHidden": "False"
    },
    {
      "Start": "3efdf89e7e89440abca735740c421a47",
      "End": "ca591774bb1146a083d678da9caddd7f",
      "Id": "3ec8f448b3bd40f196fa2b3394d813be",
      "IsHidden": "False"
    },
    {
      "Start": "b8b58e462908434eb56ea947178c77a6",
      "End": "4a9f35d028cf4132b02e000b0f8e5a6d",
      "Id": "581de2a1f3cf4c0c9bf0c165b2a562c9",
      "IsHidden": "False"
    },
    {
      "Start": "b8b58e462908434eb56ea947178c77a6",
      "End": "b94795230ef24610a7ff567730cd0a45",
      "Id": "819f50243b94448cbdfe3255503eb173",
      "IsHidden": "False"
    },
    {
      "Start": "80c2e525102d4d3d8bd38e9da4ae47a1",
      "End": "bf3c960c955a4606b30c0336b7f0b17c",
      "Id": "6e1abcd7339c43f29e963ac08d231606",
      "IsHidden": "False"
    },
    {
      "Start": "8c1bfeec5e8e4deaa960b2602f41aae0",
      "End": "48ee80c88c0d40c9b8ca00db2878f3ee",
      "Id": "5b2c5fbb79984e64ac27afd1ead5e9bf",
      "IsHidden": "False"
    },
    {
      "Start": "5f20848230a348b597c0c98a74e7bea4",
      "End": "586edf142fe54e21bd2792844f54a11d",
      "Id": "b05ddd94a0f04821a8f8ee81d50ff6a9",
      "IsHidden": "False"
    },
    {
      "Start": "1e10bb07c1ba4096836f6cb430013a59",
      "End": "e4cf3fee14d84b28beeb018bb79da56e",
      "Id": "6ec364cb595b421aa32d7cf645a50689",
      "IsHidden": "False"
    },
    {
      "Start": "1e10bb07c1ba4096836f6cb430013a59",
      "End": "94f45fd58e6e47928d907cd49738f72a",
      "Id": "315b539dde11460da221a76957a79b8d",
      "IsHidden": "False"
    },
    {
      "Start": "926f298bf8e94d93bb08aca75d9045ab",
      "End": "a522b2212458406883abf59ffac2db72",
      "Id": "6b809003ff044bfd8a9367b28d5d0af0",
      "IsHidden": "False"
    },
    {
      "Start": "7cb91f1e48534c1bbe70c73d4bb5a76c",
      "End": "9e3f4906babf43508a75c070879df594",
      "Id": "ec4b86e57cda476d98b5f5edec49352c",
      "IsHidden": "False"
    },
    {
      "Start": "68c89c5c026b4191af9324dadfd7ffb1",
      "End": "ae25477c94c946818eba836de273c99c",
      "Id": "455e4266f8f74247b90a2a4d2a687600",
      "IsHidden": "False"
    },
    {
      "Start": "16f357cc502a4b26945e7b101f6369d7",
      "End": "8f3a1bbfb6ee4df5a3684b34ef1a0652",
      "Id": "9b44030e24e347018c7f8f72cb17b740",
      "IsHidden": "False"
    },
    {
      "Start": "d0f87955dd394b3396a02a283f2b30bf",
      "End": "7e2f47457cd6479d8c355ccfd779aab2",
      "Id": "13eb2534f5c742038fed5f4e5306a364",
      "IsHidden": "False"
    },
    {
      "Start": "819d12a1ecde4947af5590079411d4a5",
      "End": "ba1a3f40f92b4505a9b9aedd80039667",
      "Id": "f30d0df57d7041a088b274876b0c7eb1",
      "IsHidden": "False"
    },
    {
      "Start": "819d12a1ecde4947af5590079411d4a5",
      "End": "656f755284bf4568b7eab42eaeb8af3c",
      "Id": "8f862e997df04defbf8ce77893cc36f8",
      "IsHidden": "False"
    },
    {
      "Start": "819d12a1ecde4947af5590079411d4a5",
      "End": "fc160d6e3b46457ebc5a3f1e71a38161",
      "Id": "c0319362c8094ec591d2bf7020dc2d0e",
      "IsHidden": "False"
    },
    {
      "Start": "819d12a1ecde4947af5590079411d4a5",
      "End": "5cab8be51505421c93b66202a04d5c44",
      "Id": "2e019685a5c14d9e9a0a8cfc2c652240",
      "IsHidden": "False"
    },
    {
      "Start": "3c9284527cd6485398dda22698a1ed5a",
      "End": "eb16035dc6834121bd4a265fb5ad48b3",
      "Id": "a2b6f661b5564595a9912aec8712d8d4",
      "IsHidden": "False"
    },
    {
      "Start": "18e86a383750417da2e3fd2aacfe2d08",
      "End": "73d8b72021b34d1597678e3d5b770f08",
      "Id": "c9163c8d502649d18df795c8fc1b155c",
      "IsHidden": "False"
    },
    {
      "Start": "18e86a383750417da2e3fd2aacfe2d08",
      "End": "0afd2b42e8174466b2d64b4e79ee5847",
      "Id": "67038cbe032141a8b171427f4aebb07e",
      "IsHidden": "False"
    }
  ],
  "Dependencies": [
    "22afc586-3029-4a8c-ade8-183c160acd2e",
    "2dd1e892-6338-4fba-8345-f7a9f418bb57",
    "7c6c03d7-a142-4e96-9150-6b3846efa3c2",
    "f28b8d83-e5aa-4788-915c-984845cc9a63",
    "858e6bd7-c0fa-4568-a225-ef815e68f8e3"
  ],
  "NodeLibraryDependencies": [
    {
      "Name": "Clockwork for Dynamo 2.x",
      "Version": "2.6.0",
      "ReferenceType": "Package",
      "Nodes": [
        "2ae288d331af48189e12d40c123806fc",
        "d63877b1c2664147a24cf415109f4d4c",
        "d4429193aa3641bea1dfd43457db0a1d",
        "8cbe0ba31d0145f689ce0a78ca1048c8",
        "9a5b8e52ba144e62bf63fc91daeee1c8",
        "4716e65323764f71b7f10200958680e0",
        "d13145e59c9742089d33f8f61dce7b45"
      ]
    },
    {
      "Name": "spring nodes",
      "Version": "210.1.1",
      "ReferenceType": "Package",
      "Nodes": [
        "331a8fd02c6d4f74ba9be8d392e01751"
      ]
    }
  ],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.13",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "2.0",
      "Data": {}
    }
  ],
  "Author": "",
  "Linting": {
    "activeLinter": "None",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.16.2.5624",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Background Preview",
      "EyeX": -11.375644683837891,
      "EyeY": 449.2774658203125,
      "EyeZ": -29.103012084960938,
      "LookX": 6.3756446838378906,
      "LookY": -438.2774658203125,
      "LookZ": 21.103012084960938,
      "UpX": -0.28524318337440491,
      "UpY": 0.16504716873168945,
      "UpZ": -0.94413763284683228
    },
    "ConnectorPins": [],
    "NodeViews": [
      {
        "Name": "Categories",
        "ShowGeometry": true,
        "Id": "3fe70a45480a4d1eac8dfde5728097b3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 396.79089543023815,
        "Y": -163.33963827979494
      },
      {
        "Name": "All Elements of Category",
        "ShowGeometry": true,
        "Id": "57155cb9ac694e88885c913632217735",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 793.90072364827461,
        "Y": -161.72084656701657
      },
      {
        "Name": "Door.Rooms",
        "ShowGeometry": true,
        "Id": "2ae288d331af48189e12d40c123806fc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2949.126674581204,
        "Y": -86.971446600979618
      },
      {
        "Name": "Room.Number",
        "ShowGeometry": true,
        "Id": "cbcf853a6af84a03abe4cde87d8d7400",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3507.5928256929737,
        "Y": -1036.5115215171077
      },
      {
        "Name": "Room.Number",
        "ShowGeometry": true,
        "Id": "4b0f70dd7e3d46669c00e7e32c174b27",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3792.3121439548772,
        "Y": 823.14501047012709
      },
      {
        "Name": "List.ReplaceNull",
        "ShowGeometry": true,
        "Id": "d63877b1c2664147a24cf415109f4d4c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3885.0585791644917,
        "Y": -1042.1886454002179
      },
      {
        "Name": "List.ReplaceNull",
        "ShowGeometry": true,
        "Id": "d4429193aa3641bea1dfd43457db0a1d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4359.7706856934628,
        "Y": 883.60856101273737
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "9c0fa99154414447b7082f56290e3d1a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 3513.0758137487446,
        "Y": -875.096881407801
      },
      {
        "Name": "Element.SetParameterByName",
        "ShowGeometry": true,
        "Id": "c2ec2844c704479fb42503b627a8cb4b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8671.44811457061,
        "Y": -587.0586134509058
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "b569fd489abe47fc887ff7f32efc36e1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8251.8058275901967,
        "Y": -484.72083311161305
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "fb496eab73b0455e97575c9c7a3c1c2c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4596.7757178101456,
        "Y": -1050.2609484460136
      },
      {
        "Name": "==",
        "ShowGeometry": true,
        "Id": "eff2f5ba9d1e450a976ab64b14314945",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 4338.0688605078885,
        "Y": -841.01968345666228
      },
      {
        "Name": "String from Object",
        "ShowGeometry": true,
        "Id": "1506e5194f9d4dfdb726a1f06b48d5be",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6156.8874683056993,
        "Y": -724.77144953474863
      },
      {
        "Name": "List.ReplaceItemAtIndex+",
        "ShowGeometry": true,
        "Id": "8cbe0ba31d0145f689ce0a78ca1048c8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8129.4521209299564,
        "Y": -752.55501061225459
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "837e2925763c42238fe427bdce4a7921",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6482.5318613783829,
        "Y": -547.388578426267
      },
      {
        "Name": "List.Count",
        "ShowGeometry": true,
        "Id": "b4bd55a5ecd5426b9161f54c2f6ec5a7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6458.0357273777672,
        "Y": -722.02086798286359
      },
      {
        "Name": "List.OfRepeatedItem",
        "ShowGeometry": true,
        "Id": "f6f5b391aa0843088d8e83b23bdf7351",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6719.3735290934692,
        "Y": -724.17432841664663
      },
      {
        "Name": "List.Combine",
        "ShowGeometry": true,
        "Id": "38e1acc76f764c41827fefaf610bd2a9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7076.2767349227379,
        "Y": -719.9918135866626
      },
      {
        "Name": "List.Join",
        "ShowGeometry": true,
        "Id": "88125758082e43b48e4342558c0abb37",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6900.3736277193339,
        "Y": -563.43798105515316
      },
      {
        "Name": "String.Concat",
        "ShowGeometry": true,
        "Id": "49a1b687c6854b75a308c0c6961c6de6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7375.5441230833849,
        "Y": -722.52889065329987
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "3db30438a0f74abd8d54248889bb0a1d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7780.1908221372805,
        "Y": -627.40608481552817
      },
      {
        "Name": "Select Phase",
        "ShowGeometry": true,
        "Id": "f4bbf1ee69d7481d89a11c41d162d325",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2489.0695753798436,
        "Y": 380.44430772352177
      },
      {
        "Name": "FamilyType.Function",
        "ShowGeometry": true,
        "Id": "9a5b8e52ba144e62bf63fc91daeee1c8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1524.9791926320208,
        "Y": -8.36667049215518
      },
      {
        "Name": "Element.ElementType",
        "ShowGeometry": true,
        "Id": "5bb8293393ba46929ccd8c5ed7ba7c55",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1172.9540673204447,
        "Y": -5.5075792748270942
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "430d594e2300437daa9a2bc0ec04606f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2129.01293785716,
        "Y": -131.06170554803006
      },
      {
        "Name": "==",
        "ShowGeometry": true,
        "Id": "009b854ebb614efc969a87a378f88be7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1890.2576789278073,
        "Y": -10.033391789795871
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "1d0324bbfe2a43499c8bd580b1aadbfe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1601.9892629814062,
        "Y": 118.5095732235182
      },
      {
        "Name": "Watch",
        "ShowGeometry": true,
        "Id": "afa071e8c85f4601b9925c7187070e55",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2458.3673679190388,
        "Y": -157.47194357618997
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "a93b99e3f0564d9fb3b34ab64965fe2a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5028.345034177556,
        "Y": -1041.1707549349994
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "f0faf985e05845a688c29604c4f87028",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5834.1142522454911,
        "Y": -720.50517843514945
      },
      {
        "Name": "List.AllIndicesOf",
        "ShowGeometry": true,
        "Id": "202a1bd34e0b40efae929024baff4d42",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5321.374656048537,
        "Y": -852.46191050596622
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "324b7eb3d93d4934a1dae6b5612cb83f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5580.0381485752123,
        "Y": -845.19904675244311
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "047b5cd5dd8d4a4eaadd0046910031c4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5484.2279566029383,
        "Y": 823.668666058733
      },
      {
        "Name": "==",
        "ShowGeometry": true,
        "Id": "7fdce0bb85af4f25bafe9b0a2e4d14df",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5239.372610953511,
        "Y": 993.22638051144213
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "99be1e257c3b4e2f95c8be43df33d806",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 5949.0064995761359,
        "Y": 991.85255346483746
      },
      {
        "Name": "List.AllIndicesOf",
        "ShowGeometry": true,
        "Id": "10704a9c99114420922e9e0cf118ae75",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6487.2199320333611,
        "Y": 889.08180833446124
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "fc2eb322b9b44763a0a06c856471870d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 6736.3679522546809,
        "Y": 1086.6541181950911
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "9d3a372e0e454fa38402e06b97ff81c7",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7053.3936204877764,
        "Y": 1286.1284585751798
      },
      {
        "Name": "String from Object",
        "ShowGeometry": true,
        "Id": "bcec851601c341c686ac3c9fe754dbec",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7399.9310439849914,
        "Y": 1179.3046879054914
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "76681aeab47a4def930f8f32837c78d0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7846.6485082669906,
        "Y": 1182.780841054951
      },
      {
        "Name": "List.Count",
        "ShowGeometry": true,
        "Id": "ac68c496d9b0487d9c4cfb7cf4c98e40",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7674.4359806020611,
        "Y": 1383.7832823309213
      },
      {
        "Name": "List.OfRepeatedItem",
        "ShowGeometry": true,
        "Id": "03d8478c987b4401a8369a54dc090a24",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 7920.5490266292009,
        "Y": 1474.8814504896213
      },
      {
        "Name": "List.Join",
        "ShowGeometry": true,
        "Id": "0931360cb80b42518052ccdc32e2bc51",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8194.4986073717009,
        "Y": 1301.7906567860214
      },
      {
        "Name": "List.Combine",
        "ShowGeometry": true,
        "Id": "da7941c38a684b9a9eb99db7e789f315",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8348.4335800442423,
        "Y": 1540.6166629191312
      },
      {
        "Name": "String.Concat",
        "ShowGeometry": true,
        "Id": "936919a859f949168835dfd8a4b3c0ba",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8456.91805169238,
        "Y": 1288.3756974885814
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "44264f0c4aed4cd0ad629a72fb3002be",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8837.86870511794,
        "Y": 1498.1502992018113
      },
      {
        "Name": "List.ReplaceItemAtIndex+",
        "ShowGeometry": true,
        "Id": "4716e65323764f71b7f10200958680e0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8788.2483973940325,
        "Y": 591.56823111801532
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "1955679e8a614c51b695feba658ff407",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 8910.6021040542619,
        "Y": 859.40240861866528
      },
      {
        "Name": "Element.SetParameterByName",
        "ShowGeometry": true,
        "Id": "2fb875134d73434a8e07a5b318e17538",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9330.2443910346847,
        "Y": 757.06462827936525
      },
      {
        "Name": "Element.SetParameterByName",
        "ShowGeometry": true,
        "Id": "f040dc9489bb472c88ef7bcadab680ec",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15563.397233315527,
        "Y": 2245.6309537322359
      },
      {
        "Name": "List.Transpose",
        "ShowGeometry": true,
        "Id": "b72135b26f564087b7b7c337775f0ca4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14264.96256849444,
        "Y": 2351.9064938978195
      },
      {
        "Name": "List.AnyTrue",
        "ShowGeometry": true,
        "Id": "211f694e40f54fdfa06db9be525d5eb8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14543.69549043334,
        "Y": 2351.0977218635994
      },
      {
        "Name": "All Elements of Category",
        "ShowGeometry": true,
        "Id": "0442d98c13404a4f9f3ad8dc86ddd235",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13560.845275814139,
        "Y": 2351.42638867837
      },
      {
        "Name": "Categories",
        "ShowGeometry": true,
        "Id": "d8f94e6b19c14a13a92eb6cbebeb066e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13264.142396576479,
        "Y": 2349.0922889657877
      },
      {
        "Name": "Curve.EndPoint",
        "ShowGeometry": true,
        "Id": "e2b249a59d27406097d06b46f9f2adb8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13390.487987803041,
        "Y": 2519.0787106406196
      },
      {
        "Name": "Room.IsInsideRoom",
        "ShowGeometry": true,
        "Id": "f69c027530634a93b26c0053ae472fd1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13932.46069817734,
        "Y": 2350.3300149582096
      },
      {
        "Name": "get CS",
        "ShowGeometry": true,
        "Id": "730caf75ffb14fcd9b523d71eb0ae328",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12105.639707568658,
        "Y": 2211.7001835564633
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "009504a239ca4533b7f02ac52b66f026",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14917.521886015225,
        "Y": 2344.6003888392961
      },
      {
        "Name": "If",
        "ShowGeometry": true,
        "Id": "2a1691ddc38d48ecb156924a36cc9740",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 15270.188979995071,
        "Y": 2463.9713449687724
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "e3084fea5610404ea79c5b73f13c30b1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14881.894162639011,
        "Y": 2520.9351193650459
      },
      {
        "Name": "FamilyInstance.FacingOrientation",
        "ShowGeometry": true,
        "Id": "38dfc02e28e5439999382285426e527a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12247.758395750383,
        "Y": 2362.7332005877424
      },
      {
        "Name": "DetailCurve.ByCurve",
        "ShowGeometry": false,
        "Id": "98e6146425c04b1c9e769f5f4441cf79",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 13630.151355827131,
        "Y": 1599.455744258637
      },
      {
        "Name": "CoordinateSystem.Origin",
        "ShowGeometry": true,
        "Id": "0b2d107116f74431a3f996f1905b002e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12307.764446363415,
        "Y": 2214.1749357452618
      },
      {
        "Name": "Number",
        "ShowGeometry": true,
        "Id": "78e2f0bd882645118c17b48eebce14d6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12452.441539554329,
        "Y": 2501.4963666942226
      },
      {
        "Name": "Line.ByStartPointDirectionLength",
        "ShowGeometry": true,
        "Id": "f8b86e539c794c04a2c9f1c7ff237789",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12778.695212271459,
        "Y": 2377.9451534735322
      },
      {
        "Name": "View to create the path",
        "ShowGeometry": true,
        "Id": "8aa0d66d7acf4c508620fc1922b98073",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": true,
        "X": 13259.025528063688,
        "Y": 1599.0190230296491
      },
      {
        "Name": "Number",
        "ShowGeometry": true,
        "Id": "088a609cf1924a12bce84141906d8bbe",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10252.53196278,
        "Y": 1395.9361539227014
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "28f1a34229af43468c80ed5505cbed38",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9585.6370381671331,
        "Y": 1389.5041757940896
      },
      {
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Id": "5aa12ca81acc4b2ab5ab5ae6c9030ed3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9867.9938414900989,
        "Y": 1360.6992626056388
      },
      {
        "Name": "==",
        "ShowGeometry": true,
        "Id": "0b28ac81fe0241b4bc995a25f1ad6bf0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10431.404911218606,
        "Y": 1358.6064569700666
      },
      {
        "Name": "List.FilterByBoolMask",
        "ShowGeometry": true,
        "Id": "b7fbbffcdc024650a9cb5f6e486ab153",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10681.813581389,
        "Y": 1266.9650925909043
      },
      {
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Id": "8b527e69880742a88b76451a3e1d6dc2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11293.353883772026,
        "Y": 1578.9331243492636
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "932e9e396465401db3727298fb95b848",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11027.305382034401,
        "Y": 1659.3202324858134
      },
      {
        "Name": "Element.SetParameterByName",
        "ShowGeometry": true,
        "Id": "da7cef85bdf7465081bb0938db40e112",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13456.010191123996,
        "Y": 1042.637311412723
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "4376048231804dfb8a84cafb864f95df",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13011.114141702255,
        "Y": 1169.2313280944129
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "1c31610f8bfc462c8f7227bff538b60c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 13011.533364170326,
        "Y": 1313.7069840286053
      },
      {
        "Name": "List.Join",
        "ShowGeometry": true,
        "Id": "6b7a196f9df04e758fae4e47cf6d8200",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10032.979055016189,
        "Y": 458.18855468312762
      },
      {
        "Name": "List.Combine",
        "ShowGeometry": true,
        "Id": "f3eeb6eca5ba4abc8c8b4cf95a889b07",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10304.856170371446,
        "Y": 460.084554528858
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "7cef5f80fc1c46c7a14afa8b586233a0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14076.40976522657,
        "Y": 1825.9512918002515
      },
      {
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Id": "ea74f0b3e19145ca97dd7a8802809cdb",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14485.061036653929,
        "Y": 1747.7427106043751
      },
      {
        "Name": "Element.GetParameterValueByName",
        "ShowGeometry": true,
        "Id": "ec9672d72c86466bbfac5f8ffe78d3e4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14485.061036653929,
        "Y": 1500.23954467876
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "cda3dbec94f7426d800202a7b3db842e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14094.70257312453,
        "Y": 1463.2337183240752
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "a407677245db4e46b5bd9e23437691e3",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14982.068026705812,
        "Y": 1627.3809844672912
      },
      {
        "Name": "Results",
        "ShowGeometry": true,
        "Id": "0231d7056d0d417ea2f1bb3766a762f9",
        "IsSetAsInput": false,
        "IsSetAsOutput": true,
        "Excluded": false,
        "X": 15429.340598940202,
        "Y": 1626.1618384167712
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "4f979d3bd6844d2894f3ecb6e3bfd8c5",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10552.537737983037,
        "Y": 625.31015586835406
      },
      {
        "Name": "List.SortByFunction",
        "ShowGeometry": true,
        "Id": "2106a857ed4949b9896a79d2aef824b8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11005.441312730016,
        "Y": 455.73902039548864
      },
      {
        "Name": "String.Contains",
        "ShowGeometry": true,
        "Id": "08b84b0ac55845dba01bfd9f66006455",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10760.616676888352,
        "Y": 615.86378187047217
      },
      {
        "Name": "List.LastItem",
        "ShowGeometry": true,
        "Id": "aef28c48373946c099cffc932169a90d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11433.411693300613,
        "Y": 486.8299408984023
      },
      {
        "Name": "Element.SetParameterByName",
        "ShowGeometry": true,
        "Id": "d6c0d347260b43108c23f34f118324d4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11972.54389874586,
        "Y": 489.0168274842556
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "1273d30b8c4648f78c2ec5991cf64182",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11662.633152035743,
        "Y": 640.30474067314094
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "158c2ace8a2a40018b05a94d9c592742",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 9993.50525328167,
        "Y": -230.59292637773638
      },
      {
        "Name": "Door.Rooms",
        "ShowGeometry": true,
        "Id": "d13145e59c9742089d33f8f61dce7b45",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10473.177849533418,
        "Y": -177.8154912564662
      },
      {
        "Name": "Element.SetParameterByName",
        "ShowGeometry": true,
        "Id": "9acfcca1f0c34835aefa7d46150eb70b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11164.703892387179,
        "Y": -223.45185150874431
      },
      {
        "Name": "String",
        "ShowGeometry": true,
        "Id": "be62bda43d4942b8a0e89406ce352a50",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10754.240876519358,
        "Y": -220.70233615948223
      },
      {
        "Name": "Room.Number",
        "ShowGeometry": true,
        "Id": "5aaf0206ab0c448c8fb4fdfc6ab96a14",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 10887.124992573097,
        "Y": -85.823171390208131
      },
      {
        "Name": "String.ToNumber",
        "ShowGeometry": true,
        "Id": "a2b9b01e17e040568588feef6900f92b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11673.713568872927,
        "Y": 1585.0508690620234
      },
      {
        "Name": "List.Filter",
        "ShowGeometry": true,
        "Id": "bcade11e0b7f45e5a700fb8ddfff2df6",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11977.253171455168,
        "Y": 1718.4759484719773
      },
      {
        "Name": ">=",
        "ShowGeometry": true,
        "Id": "74e43556c77a42cea526bf625a52a335",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11672.702816879073,
        "Y": 1731.1192835494983
      },
      {
        "Name": "Code Block",
        "ShowGeometry": true,
        "Id": "41f31ba6394141878f8cf022954a2b14",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11459.831985925934,
        "Y": 1742.5434514992235
      },
      {
        "Name": "ꟿ List.NullAllIndicesOf",
        "ShowGeometry": true,
        "Id": "331a8fd02c6d4f74ba9be8d392e01751",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 11984.004087586633,
        "Y": 1557.5831719689265
      },
      {
        "Name": "List.Flatten",
        "ShowGeometry": true,
        "Id": "493e80bf1da043829225bb440060dff9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12218.547063287049,
        "Y": 1724.7238042151307
      },
      {
        "Name": "List.GetItemAtIndex",
        "ShowGeometry": true,
        "Id": "04def2abdc0b4ee396c316a6a40fd891",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12400.760149665437,
        "Y": 1549.2447197847503
      },
      {
        "Name": "List.SetDifference",
        "ShowGeometry": true,
        "Id": "636031525ee24d9694c8856d5c75549b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 12805.106682069592,
        "Y": 1705.0544972872488
      },
      {
        "Name": "List.Join",
        "ShowGeometry": true,
        "Id": "931cfb5111c0463486102693add7c0a9",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 14308.933308432488,
        "Y": 1660.5867429416792
      }
    ],
    "Annotations": [
      {
        "Id": "9c5abcf6b361474e8ff53e425577da6e",
        "Title": "Collects doors",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "3fe70a45480a4d1eac8dfde5728097b3",
          "57155cb9ac694e88885c913632217735"
        ],
        "HasNestedGroups": false,
        "Left": 386.79089543023815,
        "Top": -236.33963827979494,
        "Width": 674.10982821803645,
        "Height": 206.61879171277837,
        "FontSize": 36.0,
        "InitialTop": -163.33963827979494,
        "InitialHeight": 146.61879171277837,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "51df4675bec145468955d1a60db0eb29",
        "Title": "Gets rooms associated with doors (select phase)",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 229.57517461652537,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "2ae288d331af48189e12d40c123806fc"
        ],
        "HasNestedGroups": false,
        "Left": 2939.126674581204,
        "Top": -202.97144660097962,
        "Width": 478.57517461652537,
        "Height": 318.0,
        "FontSize": 36.0,
        "InitialTop": -86.971446600979618,
        "InitialHeight": 145.0,
        "TextblockHeight": 106.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "b56f08b44e034f39b2a81943aef40c64",
        "Title": "From room. replace null values with Exterior",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "cbcf853a6af84a03abe4cde87d8d7400",
          "d63877b1c2664147a24cf415109f4d4c",
          "9c0fa99154414447b7082f56290e3d1a"
        ],
        "HasNestedGroups": false,
        "Left": 3497.5928256929737,
        "Top": -1158.1886454002179,
        "Width": 621.46575347151793,
        "Height": 415.09176399241687,
        "FontSize": 36.0,
        "InitialTop": -1042.1886454002179,
        "InitialHeight": 312.09176399241687,
        "TextblockHeight": 106.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "e7edf68f6f9f408a938e28145770c808",
        "Title": "Filters doors that \"FromRoom\" values are exterior",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "fb496eab73b0455e97575c9c7a3c1c2c",
          "eff2f5ba9d1e450a976ab64b14314945"
        ],
        "HasNestedGroups": false,
        "Left": 4328.0688605078885,
        "Top": -1166.2609484460136,
        "Width": 513.706857302257,
        "Height": 487.24126498935129,
        "FontSize": 36.0,
        "InitialTop": -1050.2609484460136,
        "InitialHeight": 354.24126498935129,
        "TextblockHeight": 106.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "0370f11db4e74f98b82ae5a5415cbf97",
        "Title": "Adds (EXTERIOR) in front of the room numbers from the ToRoom values",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "1506e5194f9d4dfdb726a1f06b48d5be",
          "837e2925763c42238fe427bdce4a7921",
          "b4bd55a5ecd5426b9161f54c2f6ec5a7",
          "f6f5b391aa0843088d8e83b23bdf7351",
          "38e1acc76f764c41827fefaf610bd2a9",
          "88125758082e43b48e4342558c0abb37",
          "49a1b687c6854b75a308c0c6961c6de6"
        ],
        "HasNestedGroups": false,
        "Left": 6146.8874683056993,
        "Top": -797.77144953474863,
        "Width": 1492.6566547776856,
        "Height": 396.33346847959547,
        "FontSize": 36.0,
        "InitialTop": -724.77144953474863,
        "InitialHeight": 322.3828711084816,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "3b54b0a5502e4c41a3a45e40cbdb68cb",
        "Title": "Replaces the item and set the parameter ",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "c2ec2844c704479fb42503b627a8cb4b",
          "b569fd489abe47fc887ff7f32efc36e1",
          "8cbe0ba31d0145f689ce0a78ca1048c8"
        ],
        "HasNestedGroups": false,
        "Left": 8119.4521209299564,
        "Top": -825.55501061225459,
        "Width": 864.995993640654,
        "Height": 472.83417750064154,
        "FontSize": 36.0,
        "InitialTop": -752.55501061225459,
        "InitialHeight": 412.83417750064154,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "216b4c5eab2441ddb29e2d84ed0defa9",
        "Title": "To.room - Replaces null values with exterior",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "4b0f70dd7e3d46669c00e7e32c174b27",
          "d4429193aa3641bea1dfd43457db0a1d"
        ],
        "HasNestedGroups": false,
        "Left": 3782.3121439548772,
        "Top": 750.14501047012709,
        "Width": 811.45854173858561,
        "Height": 295.46355054261039,
        "FontSize": 36.0,
        "InitialTop": 823.14501047012709,
        "InitialHeight": 205.46355054261028,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "044631ccb4b14588b1632acc0ac86c9d",
        "Title": "Filters doors by function exterior",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "9a5b8e52ba144e62bf63fc91daeee1c8",
          "5bb8293393ba46929ccd8c5ed7ba7c55",
          "430d594e2300437daa9a2bc0ec04606f",
          "009b854ebb614efc969a87a378f88be7",
          "1d0324bbfe2a43499c8bd580b1aadbfe",
          "afa071e8c85f4601b9925c7187070e55"
        ],
        "HasNestedGroups": false,
        "Left": 1162.9540673204447,
        "Top": -230.47194357618997,
        "Width": 1582.4133005985941,
        "Height": 480.98151679970817,
        "FontSize": 36.0,
        "InitialTop": -157.47194357618997,
        "InitialHeight": 420.98151679970817,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "cff2d51d360a4fc1a8e95967618210c5",
        "Title": "Gets indices of items that are exterior from room. then get the items from the same indice from the ToRoom list",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "202a1bd34e0b40efae929024baff4d42",
          "f0faf985e05845a688c29604c4f87028",
          "324b7eb3d93d4934a1dae6b5612cb83f"
        ],
        "HasNestedGroups": false,
        "Left": 5311.374656048537,
        "Top": -1012.4619105059662,
        "Width": 755.73959619695415,
        "Height": 453.95673207081677,
        "FontSize": 36.0,
        "InitialTop": -852.46191050596622,
        "InitialHeight": 276.95673207081677,
        "TextblockHeight": 150.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "091741e956e2407281fd4db089758bd5",
        "Title": "Filters doors that \"ToRoom\" values are exterior",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "047b5cd5dd8d4a4eaadd0046910031c4",
          "7fdce0bb85af4f25bafe9b0a2e4d14df"
        ],
        "HasNestedGroups": false,
        "Left": 5229.372610953511,
        "Top": 707.668666058733,
        "Width": 499.85534564942736,
        "Height": 447.55771445270909,
        "FontSize": 36.0,
        "InitialTop": 823.668666058733,
        "InitialHeight": 314.55771445270909,
        "TextblockHeight": 106.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "42d9ca04a94f413db3bc2fa11f9eb0c0",
        "Title": "Gets indices of items that are exterior from room. then get the items from the same indice from the FromRoom list",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "10704a9c99114420922e9e0cf118ae75",
          "9d3a372e0e454fa38402e06b97ff81c7",
          "fc2eb322b9b44763a0a06c856471870d"
        ],
        "HasNestedGroups": false,
        "Left": 6477.2199320333611,
        "Top": 729.08180833446124,
        "Width": 809.17368845441524,
        "Height": 719.04665024071858,
        "FontSize": 36.0,
        "InitialTop": 889.08180833446124,
        "InitialHeight": 542.04665024071858,
        "TextblockHeight": 150.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "3a367d5fe6fb438aabdf9c38d9482cd4",
        "Title": "Adds (EXTERIOR) in front of the room numbers from the ToRoom values",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "bcec851601c341c686ac3c9fe754dbec",
          "76681aeab47a4def930f8f32837c78d0",
          "ac68c496d9b0487d9c4cfb7cf4c98e40",
          "03d8478c987b4401a8369a54dc090a24",
          "da7941c38a684b9a9eb99db7e789f315",
          "0931360cb80b42518052ccdc32e2bc51",
          "936919a859f949168835dfd8a4b3c0ba"
        ],
        "HasNestedGroups": false,
        "Left": 7389.9310439849914,
        "Top": 1106.3046879054914,
        "Width": 1330.9870077073892,
        "Height": 631.31197501363977,
        "FontSize": 36.0,
        "InitialTop": 1179.3046879054914,
        "InitialHeight": 506.31197501363977,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "e46a9106f6364db8a401fac7e18b0c01",
        "Title": "Replaces the items and set the parameter ",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "2fb875134d73434a8e07a5b318e17538",
          "1955679e8a614c51b695feba658ff407",
          "4716e65323764f71b7f10200958680e0"
        ],
        "HasNestedGroups": false,
        "Left": 8778.2483973940325,
        "Top": 518.56823111801532,
        "Width": 864.99599364065216,
        "Height": 472.83417750064996,
        "FontSize": 36.0,
        "InitialTop": 591.56823111801532,
        "InitialHeight": 412.83417750064996,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "7c5730547ce2465d9d66aef517141fc6",
        "Title": "Assigns results to parameter of doors with occupant load > 50",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "e3084fea5610404ea79c5b73f13c30b1",
          "2a1691ddc38d48ecb156924a36cc9740",
          "f040dc9489bb472c88ef7bcadab680ec",
          "009504a239ca4533b7f02ac52b66f026"
        ],
        "HasNestedGroups": false,
        "Left": 14871.894162639011,
        "Top": 2129.6309537322359,
        "Width": 1004.5030706765156,
        "Height": 533.30416563281,
        "FontSize": 36.0,
        "InitialTop": 2245.6309537322359,
        "InitialHeight": 420.30416563281005,
        "TextblockHeight": 106.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "587d29a28e03417eaea83698a72a50d2",
        "Title": "Check if the end point of a curve is inside room",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "f69c027530634a93b26c0053ae472fd1",
          "e2b249a59d27406097d06b46f9f2adb8",
          "d8f94e6b19c14a13a92eb6cbebeb066e",
          "0442d98c13404a4f9f3ad8dc86ddd235",
          "211f694e40f54fdfa06db9be525d5eb8",
          "b72135b26f564087b7b7c337775f0ca4"
        ],
        "HasNestedGroups": false,
        "Left": 13254.142396576479,
        "Top": 2276.0922889657877,
        "Width": 1475.5530938568609,
        "Height": 374.98642167483194,
        "FontSize": 36.0,
        "InitialTop": 2349.0922889657877,
        "InitialHeight": 314.98642167483194,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "76ea937504694234a96d64145ecf6246",
        "Title": "Creates line using the start point at the origin of the door, the vector originated by the facing orientation and the length specified",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "f8b86e539c794c04a2c9f1c7ff237789",
          "78e2f0bd882645118c17b48eebce14d6",
          "0b2d107116f74431a3f996f1905b002e",
          "730caf75ffb14fcd9b523d71eb0ae328",
          "38dfc02e28e5439999382285426e527a"
        ],
        "HasNestedGroups": false,
        "Left": 12095.639707568658,
        "Top": 2051.7001835564633,
        "Width": 1017.055504702801,
        "Height": 581.79618313775927,
        "FontSize": 36.0,
        "InitialTop": 2211.7001835564633,
        "InitialHeight": 434.79618313775927,
        "TextblockHeight": 150.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "4812ef807447455289b5d02525c48242",
        "Title": "Creates curves just for checking (default: frozen)",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "98e6146425c04b1c9e769f5f4441cf79",
          "8aa0d66d7acf4c508620fc1922b98073"
        ],
        "HasNestedGroups": false,
        "Left": 13249.025528063688,
        "Top": 1483.0190230296491,
        "Width": 620.12582776344243,
        "Height": 290.43672122898784,
        "FontSize": 36.0,
        "InitialTop": 1599.0190230296491,
        "InitialHeight": 145.43672122898784,
        "TextblockHeight": 106.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "8d4987448db74e99a53dbf0b400a8e9e",
        "Title": "Filters doors classifeid as exit doors",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "088a609cf1924a12bce84141906d8bbe",
          "28f1a34229af43468c80ed5505cbed38",
          "5aa12ca81acc4b2ab5ab5ae6c9030ed3",
          "0b28ac81fe0241b4bc995a25f1ad6bf0",
          "b7fbbffcdc024650a9cb5f6e486ab153"
        ],
        "HasNestedGroups": false,
        "Left": 9575.6370381671331,
        "Top": 1193.9650925909043,
        "Width": 1351.1765432218672,
        "Height": 333.97106133179705,
        "FontSize": 36.0,
        "InitialTop": 1266.9650925909043,
        "InitialHeight": 273.97106133179705,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "c9fc5fe2a2f54ceeb6249784f401660a",
        "Title": "Sets parameters for doors with occupant load less than 50",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "da7cef85bdf7465081bb0938db40e112",
          "4376048231804dfb8a84cafb864f95df",
          "1c31610f8bfc462c8f7227bff538b60c"
        ],
        "HasNestedGroups": false,
        "Left": 13001.114141702255,
        "Top": 926.637311412723,
        "Width": 767.89604942174083,
        "Height": 519.06967261588238,
        "FontSize": 36.0,
        "InitialTop": 1042.637311412723,
        "InitialHeight": 416.06967261588238,
        "TextblockHeight": 106.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "210906e2ff4246aaa85c43e07f27362b",
        "Title": "Filters doors with occupant load bigger than 50",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "8b527e69880742a88b76451a3e1d6dc2",
          "932e9e396465401db3727298fb95b848",
          "a2b9b01e17e040568588feef6900f92b",
          "74e43556c77a42cea526bf625a52a335",
          "41f31ba6394141878f8cf022954a2b14",
          "bcade11e0b7f45e5a700fb8ddfff2df6",
          "331a8fd02c6d4f74ba9be8d392e01751",
          "493e80bf1da043829225bb440060dff9",
          "04def2abdc0b4ee396c316a6a40fd891"
        ],
        "HasNestedGroups": false,
        "Left": 11017.305382034401,
        "Top": 1476.2447197847503,
        "Width": 1616.4547676310358,
        "Height": 416.874563764748,
        "FontSize": 36.0,
        "InitialTop": 1549.2447197847503,
        "InitialHeight": 338.29873171447321,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "2955e9c377ff49dd8b549c94e1fee316",
        "Title": "Displays results",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "7cef5f80fc1c46c7a14afa8b586233a0",
          "ea74f0b3e19145ca97dd7a8802809cdb",
          "ec9672d72c86466bbfac5f8ffe78d3e4",
          "cda3dbec94f7426d800202a7b3db842e",
          "a407677245db4e46b5bd9e23437691e3",
          "0231d7056d0d417ea2f1bb3766a762f9",
          "931cfb5111c0463486102693add7c0a9"
        ],
        "HasNestedGroups": false,
        "Left": 14066.40976522657,
        "Top": 1390.2337183240752,
        "Width": 1649.9308337136317,
        "Height": 597.71757347617631,
        "FontSize": 36.0,
        "InitialTop": 1463.2337183240752,
        "InitialHeight": 507.71757347617631,
        "TextblockHeight": 63.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "2149f6cb912d49338b48fca9190ce1bc",
        "Title": "Input (phase)",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "f4bbf1ee69d7481d89a11c41d162d325"
        ],
        "HasNestedGroups": false,
        "Left": 2479.0695753798436,
        "Top": 307.44430772352177,
        "Width": 239.0,
        "Height": 205.0,
        "FontSize": 36.0,
        "InitialTop": 380.44430772352177,
        "InitialHeight": 145.0,
        "TextblockHeight": 63.0,
        "Background": "#FFFFB8D8"
      },
      {
        "Id": "7bbf7e08be01487ab48407d4c0697ed4",
        "Title": "Set door location parameter for interior doors",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "158c2ace8a2a40018b05a94d9c592742",
          "d13145e59c9742089d33f8f61dce7b45",
          "5aaf0206ab0c448c8fb4fdfc6ab96a14",
          "be62bda43d4942b8a0e89406ce352a50",
          "9acfcca1f0c34835aefa7d46150eb70b"
        ],
        "HasNestedGroups": false,
        "Left": 9983.50525328167,
        "Top": -303.59292637773638,
        "Width": 1494.1986391055088,
        "Height": 349.76975498752824,
        "FontSize": 36.0,
        "InitialTop": -230.59292637773638,
        "InitialHeight": 289.76975498752824,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "4190a92001424091979c439abe3cfa2c",
        "Title": "Sets DoorLocation for exterior doors",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "6b7a196f9df04e758fae4e47cf6d8200",
          "f3eeb6eca5ba4abc8c8b4cf95a889b07",
          "4f979d3bd6844d2894f3ecb6e3bfd8c5",
          "2106a857ed4949b9896a79d2aef824b8",
          "08b84b0ac55845dba01bfd9f66006455",
          "aef28c48373946c099cffc932169a90d",
          "d6c0d347260b43108c23f34f118324d4",
          "1273d30b8c4648f78c2ec5991cf64182"
        ],
        "HasNestedGroups": false,
        "Left": 10022.979055016189,
        "Top": 382.73902039548864,
        "Width": 2262.5648437296713,
        "Height": 430.12476147498353,
        "FontSize": 36.0,
        "InitialTop": 455.73902039548864,
        "InitialHeight": 329.5657202776523,
        "TextblockHeight": 63.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "a9a9f63815ce4a9cb7858e6d81c39bc7",
        "Title": "Get doors with Occupant Load < 50",
        "DescriptionText": "",
        "IsExpanded": true,
        "WidthAdjustment": 0.0,
        "HeightAdjustment": 0.0,
        "Nodes": [
          "636031525ee24d9694c8856d5c75549b"
        ],
        "HasNestedGroups": false,
        "Left": 12795.106682069592,
        "Top": 1502.0544972872488,
        "Width": 225.0,
        "Height": 365.0,
        "FontSize": 36.0,
        "InitialTop": 1705.0544972872488,
        "InitialHeight": 145.0,
        "TextblockHeight": 193.0,
        "Background": "#FFB9F9E1"
      }
    ],
    "X": -366.11061462683517,
    "Y": 275.69187761973012,
    "Zoom": 0.52753400132606609
  }
}